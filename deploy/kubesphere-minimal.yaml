# Namespaces
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubesphere.io/workspace: system-workspace
  name: kubesphere-controls-system
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubesphere.io/workspace: system-workspace
  name: kubesphere-monitoring-system
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubesphere.io/workspace: system-workspace
  name: kubesphere-system
---
# Configmaps
---
apiVersion: v1
data:
  Caddyfile: |
    :2018 {
      root /home
      authenticate {
        token-idle-timeout 40m
        redis-url redis://redis.kubesphere-system.svc:6379
        secret {$JWT_SECRET}
        path /
        except GET /kapis/openpitrix.io/v1/apps /kapis/openpitrix.io/v1/attachments /kapis/openpitrix.io/v1/categories
        except * /apis/account.kubesphere.io/v1alpha1/authenticate /kapis/iam.kubesphere.io/v1alpha2/login /kapis/iam.kubesphere.io/v1alpha2/authenticate /images /kapis/devops.kubesphere.io/v1alpha2/webhook/github /kapis/devops.kubesphere.io/v1alpha2/webhook/git /swagger /kapis/v1alpha1/configz
      }

      authentication {
        path /
        except * /kapis/tenant.kubesphere.io/v1alpha2 /kapis/alerting.kubesphere.io/v1/comment /kapis/alerting.kubesphere.io/v1/resource_type /kapis/alerting.kubesphere.io/v1/metric /kapis/notification.kubesphere.io /kapis/resources.kubesphere.io/v1alpha2/registry /kapis/iam.kubesphere.io/v1alpha2/rulesmapping /kapis/jenkins.kubesphere.io /kapis/devops.kubesphere.io /apis/devops.kubesphere.io /kapis/resources.kubesphere.io/v1alpha2/git/verify
      }

      swagger

      # k8s api
      proxy /api https://kubernetes.default {
        header_upstream Authorization "Bearer {$KUBESPHERE_TOKEN}"
        insecure_skip_verify
        transparent
        websocket
      }

      # fix jenkins auth plugin
      proxy /apis/account.kubesphere.io/v1alpha1/authenticate http://ks-account.kubesphere-system.svc/kapis/iam.kubesphere.io/v1alpha2/authenticate {
        without /apis/account.kubesphere.io/v1alpha1/authenticate
        transparent
      }

      # jenkins
      proxy /kapis/jenkins.kubesphere.io http://ks-jenkins.kubesphere-devops-system.svc {
        without /kapis/jenkins.kubesphere.io
        transparent
      }

      proxy /job http://ks-jenkins.kubesphere-devops-system.svc {
        transparent
      }

      # old devops api
      proxy /kapis/devops.kubesphere.io/v1alpha/ http://ks-devops.kubesphere-devops-system.svc/api {
        without /kapis/devops.kubesphere.io
        transparent
      }

      # new devops api
      proxy /kapis/devops.kubesphere.io/v1alpha2/ http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      # iam
      proxy /kapis/iam.kubesphere.io http://ks-account.kubesphere-system.svc {
        transparent
      }

      # tenant
      proxy /kapis/tenant.kubesphere.io http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      # operations
      proxy /kapis/operations.kubesphere.io http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      # openpitrix
      proxy /kapis/openpitrix.io http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      # logging
      proxy /kapis/logging.kubesphere.io http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      # alerting
      proxy /kapis/alerting.kubesphere.io http://alerting-client-server.kubesphere-alerting-system.svc:9200/api {
        without /kapis/alerting.kubesphere.io
        transparent
      }

      # servicemesh
      proxy /kapis/servicemesh.kubesphere.io http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      proxy /kapis/resources.kubesphere.io http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      proxy /kapis/metrics.kubesphere.io http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      # terminal
      proxy /kapis/terminal.kubesphere.io http://ks-apiserver.kubesphere-system.svc {
        transparent
        websocket
      }

      # monitoring
      proxy /kapis/monitoring.kubesphere.io http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      # notification
      proxy /kapis/notification.kubesphere.io http://notification.kubesphere-alerting-system.svc:9200 {
        without /kapis/notification.kubesphere.io
        transparent
      }

      # everything else goes to ks-apiserver
      proxy /kapis http://ks-apiserver.kubesphere-system.svc {
        transparent
      }

      log / stdout "{remote} {when} {method} {uri} {proto} {status} {size} {latency_ms}ms"
    }
kind: ConfigMap
metadata:
  name: caddyfile
---
apiVersion: v1
data:
  local_config.yaml: |
    server:
      gatewayServer:
        url: http://ks-apigateway.kubesphere-system.svc
        wsUrl: ws://ks-apigateway.kubesphere-system.svc

      http:
        hostname: localhost
        port: 8000
        static:
          production:
            /public: server/public
            /assets: dist/assets
            /dist: dist
      redis:
        port: 6379
        host: redis.kubesphere-system.svc
      redisTimeout: 5000
      sessionTimeout: 7200000
    client:
      version:
        kubesphere: v2.1.0
        kubernetes: v1.15.5
        openpitrix: v0.3.5
kind: ConfigMap
metadata:
  name: ks-console-config
---
apiVersion: v1
data:
  ingress-controller-svc.yaml: |+
    apiVersion: v1
    kind: Service
    metadata:
      name: kubesphere-router-gateway
      labels:
        app: kubesphere
        component: ks-router
        tier: backend
    spec:
      selector:
        app: kubesphere
        component: ks-router
        tier: backend
      type: LoadBalancer
      ports:
        - name: http
          protocol: TCP
          port: 80
          targetPort: 80
        - name: https
          protocol: TCP
          port: 443
          targetPort: 443

  ingress-controller.yaml: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: ks-router
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: kubesphere
          component: ks-router
          tier: backend
      template:
        metadata:
          labels:
            app: kubesphere
            component: ks-router
            tier: backend
          annotations:
            prometheus.io/port: '10254'
            prometheus.io/scrape: 'true'
        spec:
          serviceAccountName: kubesphere-router-serviceaccount
          imagePullSecrets:
          - name: qingcloud
          containers:
            - name: nginx-ingress-controller
              image: dockerhub.qingcloud.com/kubernetes_ingress_controller/nginx-ingress-controller:0.24.1
              args:
                - /nginx-ingress-controller
                - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
                - --configmap=$(POD_NAMESPACE)/nginx-configuration
                - --annotations-prefix=nginx.ingress.kubernetes.io
                - --force-namespace-isolation
                - --update-status
                - --update-status-on-shutdown
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              ports:
              - name: http
                containerPort: 80
              - name: https
                containerPort: 443
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 10254
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 10254
                  scheme: HTTP
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              securityContext:
                runAsNonRoot: false
kind: ConfigMap
metadata:
  name: ks-router-config
---
apiVersion: v1
data:
  kubesphere.yaml: |
    kubernetes:
      kubeconfig: ""
      master: https://192.168.0.14:6443
      qps: 1e+06
      burst: 1000000
    ldap:
      host: openldap.kubesphere-system.svc:389
      managerDN: cn=admin,dc=kubesphere,dc=io
      managerPassword: admin
      userSearchBase: ou=Users,dc=kubesphere,dc=io
      groupSearchBase: ou=Groups,dc=kubesphere,dc=io
    redis:
      host: redis.kubesphere-system.svc
      port: 6379
      password: ""
      db: 0
    monitoring:
      endpoint: http://prometheus-k8s.kubesphere-monitoring-system.svc:9090
      secondaryEndpoint: http://prometheus-k8s-system.kubesphere-monitoring-system.svc:9090
kind: ConfigMap
metadata:
  name: kubesphere-config
---
apiVersion: v1
data:
  clusterrules.json: |
    [
      {
        "name": "projects",
        "actions": [
          {
            "name": "manage",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list",
                  "patch",
                  "update"
                ],
                "apiGroups": [
                  "",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "namespaces"
                ]
              },
              {
                "verbs": [
                  "list"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "users"
                ]
              },
              {
                "verbs": [
                  "list"
                ],
                "apiGroups": [
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "workspaces"
                ]
              },
              {
                "verbs": [
                  "get"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "workspaces/members"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "workspaces",
        "actions": [
          {
            "name": "manage",
            "rules": [
              {
                "verbs": [
                  "*"
                ],
                "apiGroups": [
                  "*"
                ],
                "resources": [
                  "workspaces",
                  "workspaces/*"
                ]
              },
              {
                "verbs": [
                  "list"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "users"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "monitoring",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "monitoring.kubesphere.io",
                  "monitoring.coreos.com"
                ],
                "resources": [
                  "*"
                ]
              },
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "componenthealth",
                  "components",
                  "nodes",
                  "events",
                  "pods"
                ]
              },
              {
                "verbs": [
                  "get"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "namespaces"
                ]
              },
              {
                "verbs": [
                  "list"
                ],
                "apiGroups": [
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "pods"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "alerting",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "alerting.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "alerting.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list",
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "alerting.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "alerting.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "logging",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "logging.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "accounts",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "watch",
                  "list"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "users",
                  "users/*"
                ]
              },
              {
                "verbs": [
                  "get"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "rulesmapping"
                ],
                "resourceNames": [
                  "*"
                ]
              },
              {
                "verbs": [
                  "get",
                  "watch",
                  "list"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "clusterrolebindings"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "list"
                ],
                "apiGroups": [
                  "iam.kubesphere.io",
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "clusterroles"
                ]
              },
              {
                "verbs": [
                  "get",
                  "watch",
                  "list",
                  "create"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "users"
                ]
              },
              {
                "verbs": [
                  "get"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "rulesmapping"
                ],
                "resourceNames": [
                  "*"
                ]
              },
              {
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "clusterrolebindings"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "users"
                ]
              },
              {
                "verbs": [
                  "list"
                ],
                "apiGroups": [
                  "iam.kubesphere.io",
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "clusterroles"
                ]
              },
              {
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "clusterrolebindings"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete",
                  "deletecollection"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "users"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "roles",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "watch",
                  "list"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "clusterroles"
                ]
              },
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "clusterroles",
                  "clusterroles/*"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "clusterroles"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "clusterroles"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete",
                  "deletecollection"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "clusterroles"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "storageclasses",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "watch",
                  "list"
                ],
                "apiGroups": [
                  "",
                  "storage.k8s.io",
                  "resources.kubesphere.io",
                  "metrics.kubesphere.io"
                ],
                "resources": [
                  "pods",
                  "persistentvolumeclaims",
                  "storageclasses",
                  "storageclasses/*"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "storage.k8s.io"
                ],
                "resources": [
                  "storageclasses"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "storage.k8s.io"
                ],
                "resources": [
                  "storageclasses"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete",
                  "deletecollection"
                ],
                "apiGroups": [
                  "storage.k8s.io"
                ],
                "resources": [
                  "storageclasses"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "nodes",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "watch",
                  "list"
                ],
                "apiGroups": [
                  "",
                  "resources.kubesphere.io",
                  "monitoring.kubesphere.io"
                ],
                "resources": [
                  "pods",
                  "nodes",
                  "nodes/*",
                  "events"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "nodes"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "apps",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "openpitrix.io"
                ],
                "resources": [
                  "applications",
                  "apps",
                  "apps/versions",
                  "apps/events",
                  "categories",
                  "attachments"
                ]
              }
            ]
          },
          {
            "name": "manage",
            "rules": [
              {
                "verbs": [
                  "*"
                ],
                "apiGroups": [
                  "openpitrix.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          }
        ]
      }
    ]
  rules.json: |
    [
      {
        "name": "projects",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ],
                "apiGroups": [
                  "*"
                ],
                "resources": [
                  "namespaces",
                  "limitranges",
                  "resourcequotas",
                  "serviceaccounts",
                  "quotas",
                  "abnormalworkloads",
                  "workloads"
                ]
              },
              {
                "verbs": [
                  "list"
                ],
                "apiGroups": [
                  "*"
                ],
                "resources": [
                  "users",
                  "roles"
                ]
              },
              {
                "verbs": [
                  "list",
                  "get"
                ],
                "apiGroups": [
                  "*"
                ],
                "resources": [
                  "events"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "namespaces",
                  "limitranges"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "namespaces",
                  "limitranges"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "monitoring",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "monitoring.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              },
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "health"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "alerting",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "alerting.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "alerting.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "alerting.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "members",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "rolebindings"
                ]
              },
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "iam.kubesphere.io"
                ],
                "resources": [
                  "users"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "rolebindings"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "get",
                  "watch",
                  "list",
                  "create",
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "rolebindings"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "rolebindings"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "roles",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "roles"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "roles"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "patch",
                  "update"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "roles"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "rbac.authorization.k8s.io"
                ],
                "resources": [
                  "roles"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "deployments",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "apps",
                  "extensions",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "deployments",
                  "deployments/scale"
                ]
              },
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "pods",
                  "pods/*"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "apps",
                  "extensions"
                ],
                "resources": [
                  "deployments"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "apps",
                  "extensions"
                ],
                "resources": [
                  "deployments",
                  "deployments/*"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "apps",
                  "extensions"
                ],
                "resources": [
                  "deployments"
                ]
              }
            ]
          },
          {
            "name": "scale",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "apps",
                  "extensions"
                ],
                "resources": [
                  "deployments/scale"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "statefulsets",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "apps",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "statefulsets"
                ]
              },
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "pods",
                  "pods/*"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "apps"
                ],
                "resources": [
                  "statefulsets"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "apps"
                ],
                "resources": [
                  "statefulsets"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "apps"
                ],
                "resources": [
                  "statefulsets"
                ]
              }
            ]
          },
          {
            "name": "scale",
            "rules": [
              {
                "verbs": [
                  "patch"
                ],
                "apiGroups": [
                  "apps"
                ],
                "resources": [
                  "statefulsets"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "daemonsets",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "apps",
                  "extensions",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "daemonsets"
                ]
              },
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "pods",
                  "pods/*"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "apps",
                  "extensions"
                ],
                "resources": [
                  "daemonsets"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "apps",
                  "extensions"
                ],
                "resources": [
                  "daemonsets"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "apps",
                  "extensions"
                ],
                "resources": [
                  "daemonsets"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "pods",
        "actions": [
          {
            "name": "terminal",
            "rules": [
              {
                "verbs": [
                  "get"
                ],
                "apiGroups": [
                  "terminal.kubesphere.io"
                ],
                "resources": [
                  "pods"
                ]
              }
            ]
          },
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "pods"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "pods"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "services",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "list",
                  "get"
                ],
                "apiGroups": [
                  "",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "services"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "services"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "services"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "services"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "advanced",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "router"
                ]
              }
            ]
          },
          {
            "name": "manage",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list",
                  "create",
                  "update",
                  "patch",
                  "delete"
                ],
                "apiGroups": [
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "router"
                ]
              },
              {
                "verbs": [
                  "patch",
                  "update"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "namespaces"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "s2ibuilders",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "devops.kubesphere.io",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "s2ibuilders",
                  "s2iruns"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "devops.kubesphere.io"
                ],
                "resources": [
                  "s2ibuilders",
                  "s2iruns"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "devops.kubesphere.io"
                ],
                "resources": [
                  "s2ibuilders",
                  "s2iruns"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "devops.kubesphere.io"
                ],
                "resources": [
                  "s2ibuilders",
                  "s2iruns"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "routes",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "extensions",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "ingresses"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "extensions"
                ],
                "resources": [
                  "ingresses"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "extensions"
                ],
                "resources": [
                  "ingresses"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "extensions"
                ],
                "resources": [
                  "ingresses"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "volumes",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "persistentvolumeclaims"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "persistentvolumeclaims"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "persistentvolumeclaims"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "persistentvolumeclaims"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "applications",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ],
                "apiGroups": [
                  "app.k8s.io",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "applications"
                ]
              },
              {
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ],
                "apiGroups": [
                  "servicemesh.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "app.k8s.io"
                ],
                "resources": [
                  "applications"
                ]
              },
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "servicemesh.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "create",
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "app.k8s.io"
                ],
                "resources": [
                  "applications"
                ]
              },
              {
                "verbs": [
                  "create",
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "servicemesh.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "app.k8s.io"
                ],
                "resources": [
                  "applications"
                ]
              },
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "servicemesh.kubesphere.io"
                ],
                "resources": [
                  "*"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "jobs",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "batch",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "jobs"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "batch"
                ],
                "resources": [
                  "jobs"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "batch"
                ],
                "resources": [
                  "jobs"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "batch"
                ],
                "resources": [
                  "jobs"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "cronjobs",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "batch",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "cronjobs"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  "batch"
                ],
                "resources": [
                  "cronjobs"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  "batch"
                ],
                "resources": [
                  "cronjobs"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  "batch"
                ],
                "resources": [
                  "cronjobs"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "secrets",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "secrets"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "secrets"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "secrets"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "secrets"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "configmaps",
        "actions": [
          {
            "name": "view",
            "rules": [
              {
                "verbs": [
                  "get",
                  "list"
                ],
                "apiGroups": [
                  "",
                  "resources.kubesphere.io"
                ],
                "resources": [
                  "configmaps"
                ]
              }
            ]
          },
          {
            "name": "create",
            "rules": [
              {
                "verbs": [
                  "create"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "configmaps"
                ]
              }
            ]
          },
          {
            "name": "edit",
            "rules": [
              {
                "verbs": [
                  "update",
                  "patch"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "configmaps"
                ]
              }
            ]
          },
          {
            "name": "delete",
            "rules": [
              {
                "verbs": [
                  "delete"
                ],
                "apiGroups": [
                  ""
                ],
                "resources": [
                  "configmaps"
                ]
              }
            ]
          }
        ]
      }
    ]
kind: ConfigMap
metadata:
  name: policy-rules
---
apiVersion: v1
data:
  bookinfo.yaml: |
    apiVersion: app.k8s.io/v1beta1
    kind: Application
    metadata:
      name: bookinfo
      namespace: servicemesh
      labels:
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      annotations:
        servicemesh.kubesphere.io/enabled: 'true'
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
      addOwnerRef: true
      descriptor:
        icons:
          - src: '/assets/bookinfo.svg'
      componentKinds:
        - group: ''
          kind: Service
        - group: extensions
          kind: Deployment
        - group: apps
          kind: StatefulSet
        - group: extensions
          kind: Ingress
        - group: servicemesh.kubesphere.io
          kind: Strategy
        - group: servicemesh.kubesphere.io
          kind: ServicePolicy

    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      namespace: servicemesh
      annotations:
        kubesphere.io/isElasticReplicas: 'false'
        servicemesh.kubesphere.io/enabled: 'true'
      labels:
        app: productpage
        version: v1
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      name: productpage-v1
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: productpage
          version: v1
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
      template:
        metadata:
          labels:
            app: productpage
            version: v1
            app.kubernetes.io/version: v1
            app.kubernetes.io/name: bookinfo
          annotations:
            sidecar.istio.io/inject: 'true'
        spec:
          containers:
            - name: productpage
              resources:
                requests:
                  cpu: 10m
                  memory: 10Mi
                limits:
                  cpu: '1'
                  memory: 1000Mi
              imagePullPolicy: IfNotPresent
              image: kubesphere/examples-bookinfo-productpage-v1:1.13.0
              ports:
                - name: http-web
                  protocol: TCP
                  containerPort: 9080
                  servicePort: 9080
          serviceAccount: default
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%
    ---
    apiVersion: v1
    kind: Service
    metadata:
      namespace: servicemesh
      labels:
        app: productpage
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      annotations:
        kubesphere.io/workloadType: Deployment
        servicemesh.kubesphere.io/enabled: 'true'
      name: productpage
    spec:
      type: ClusterIP
      sessionAffinity: None
      selector:
        app: productpage
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      ports:
        - name: http-web
          protocol: TCP
          port: 9080
          targetPort: 9080

    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      namespace: servicemesh
      annotations:
        kubesphere.io/isElasticReplicas: 'false'
        servicemesh.kubesphere.io/enabled: 'true'
      labels:
        app: reviews
        version: v1
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      name: reviews-v1
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: reviews
          version: v1
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
      template:
        metadata:
          labels:
            app: reviews
            version: v1
            app.kubernetes.io/version: v1
            app.kubernetes.io/name: bookinfo
          annotations:
            sidecar.istio.io/inject: 'true'
        spec:
          containers:
            - name: reviews
              resources:
                requests:
                  cpu: 10m
                  memory: 10Mi
                limits:
                  cpu: '1'
                  memory: 1000Mi
              imagePullPolicy: IfNotPresent
              image: kubesphere/examples-bookinfo-reviews-v1:1.13.0
              ports:
                - name: http-web
                  protocol: TCP
                  containerPort: 9080
                  servicePort: 9080
          serviceAccount: default
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%
    ---
    apiVersion: v1
    kind: Service
    metadata:
      namespace: servicemesh
      labels:
        app: reviews
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      annotations:
        kubesphere.io/workloadType: Deployment
        servicemesh.kubesphere.io/enabled: 'true'
      name: reviews
    spec:
      type: ClusterIP
      sessionAffinity: None
      selector:
        app: reviews
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      ports:
        - name: http-web
          protocol: TCP
          port: 9080
          targetPort: 9080

    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      namespace: servicemesh
      annotations:
        kubesphere.io/isElasticReplicas: 'false'
        servicemesh.kubesphere.io/enabled: 'true'
      labels:
        app: details
        version: v1
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      name: details-v1
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: details
          version: v1
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
      template:
        metadata:
          labels:
            app: details
            version: v1
            app.kubernetes.io/version: v1
            app.kubernetes.io/name: bookinfo
          annotations:
            sidecar.istio.io/inject: 'true'
        spec:
          containers:
            - name: details
              resources:
                requests:
                  cpu: 10m
                  memory: 10Mi
                limits:
                  cpu: '1'
                  memory: 1000Mi
              imagePullPolicy: IfNotPresent
              image: kubesphere/examples-bookinfo-details-v1:1.13.0
              ports:
                - name: http-web
                  protocol: TCP
                  containerPort: 9080
                  servicePort: 9080
          serviceAccount: default
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%
    ---
    apiVersion: v1
    kind: Service
    metadata:
      namespace: servicemesh
      labels:
        app: details
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      annotations:
        kubesphere.io/workloadType: Deployment
        servicemesh.kubesphere.io/enabled: 'true'
      name: details
    spec:
      type: ClusterIP
      sessionAffinity: None
      selector:
        app: details
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      ports:
        - name: http-web
          protocol: TCP
          port: 9080
          targetPort: 9080

    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      namespace: servicemesh
      annotations:
        kubesphere.io/isElasticReplicas: 'false'
        servicemesh.kubesphere.io/enabled: 'true'
      labels:
        app: ratings
        version: v1
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      name: ratings-v1
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: ratings
          version: v1
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
      template:
        metadata:
          labels:
            app: ratings
            version: v1
            app.kubernetes.io/version: v1
            app.kubernetes.io/name: bookinfo
          annotations:
            sidecar.istio.io/inject: 'true'
        spec:
          containers:
            - name: ratings
              resources:
                requests:
                  cpu: 10m
                  memory: 10Mi
                limits:
                  cpu: '1'
                  memory: 1000Mi
              imagePullPolicy: IfNotPresent
              image: kubesphere/examples-bookinfo-ratings-v1:1.13.0
              ports:
                - name: http-web
                  protocol: TCP
                  containerPort: 9080
                  servicePort: 9080
          serviceAccount: default
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%
    ---
    apiVersion: v1
    kind: Service
    metadata:
      namespace: servicemesh
      labels:
        app: ratings
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      annotations:
        kubesphere.io/workloadType: Deployment
        servicemesh.kubesphere.io/enabled: 'true'
      name: ratings
    spec:
      type: ClusterIP
      sessionAffinity: None
      selector:
        app: ratings
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      ports:
        - name: http-web
          protocol: TCP
          port: 9080
          targetPort: 9080

    ---
    apiVersion: apps/v1
    kind: Ingress
    metadata:
      namespace: servicemesh
      labels:
        app.kubernetes.io/version: v1
        app.kubernetes.io/name: bookinfo
      name: bookinfo-ingress
    spec:
      rules:
        - http:
            paths:
              - path: /
                backend:
                  serviceName: productpage
                  servicePort: 9080
          host: productpage.servicemesh.139.198.121.92.nip.io
kind: ConfigMap
metadata:
  name: sample-bookinfo
---
apiVersion: v1
data:
  users.json: |
    [{"username":"sonarqube","password":"sonarqube","cluster_role":"cluster-regular","hidden":true}]
kind: ConfigMap
metadata:
  name: user-init
---

# Clusterroles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ks-controller-manager
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - tenant.kubesphere.io
  resources:
  - workspaces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - tenant.kubesphere.io
  resources:
  - workspaces/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - servicemesh.kubesphere.io
  resources:
  - servicepolicies
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - servicemesh.kubesphere.io
  resources:
  - strategies
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - deployments/status
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - app.k8s.io
  resources:
  - apps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-state-metrics
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  - ingresses
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-exporter
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-operator
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - prometheuses
  - prometheuses/finalizers
  - alertmanagers/finalizers
  - servicemonitors
  - prometheusrules
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-router
  name: kubesphere-router
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  - namespaces
  verbs:
  - list
  - watch
  - get
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update
---
# Serviceaccounts
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/kubectl
  creationTimestamp: "2019-11-09T10:41:12Z"
  name: kubesphere-cluster-admin
  namespace: kubesphere-controls-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-router
  name: kubesphere-router
  namespace: kubesphere-controls-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ks-controller-manager
  namespace: kubesphere-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubesphere
  namespace: kubesphere-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-state-metrics
  namespace: kubesphere-monitoring-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-exporter
  namespace: kubesphere-monitoring-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-operator
  namespace: kubesphere-monitoring-system
---
# Roles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-state-metrics
  namespace: kubesphere-monitoring-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - extensions
  resourceNames:
  - kube-state-metrics
  resources:
  - deployments
  verbs:
  - get
  - update
- apiGroups:
  - apps
  resourceNames:
  - kube-state-metrics
  resources:
  - deployments
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    kubesphere.io/creator: system
    kubesphere.io/description: The maintainer of the namespace who can manage resources
      other than users and roles in the namespace.
  name: operator
  namespace: kubesphere-monitoring-system
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  - extensions
  - batch
  - logging.kubesphere.io
  - monitoring.kubesphere.io
  - iam.kubesphere.io
  - autoscaling
  - alerting.kubesphere.io
  - openpitrix.io
  - app.k8s.io
  - servicemesh.kubesphere.io
  - operations.kubesphere.io
  - devops.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  - resources.kubesphere.io
  resources:
  - jobs
  - cronjobs
  - daemonsets
  - deployments
  - horizontalpodautoscalers
  - ingresses
  - endpoints
  - configmaps
  - events
  - persistentvolumeclaims
  - pods
  - podtemplates
  - pods
  - secrets
  - services
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-k8s-config
  namespace: kubesphere-monitoring-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-router
  name: kubesphere-router
  namespace: kubesphere-controls-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader-nginx
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
---

# ClusterRoleBindings
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ks-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ks-controller-manager
subjects:
- kind: ServiceAccount
  name: ks-controller-manager
  namespace: kubesphere-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
- kind: ServiceAccount
  name: kube-state-metrics
  namespace: kubesphere-monitoring-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubesphere
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubesphere
  namespace: kubesphere-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-exporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-exporter
subjects:
- kind: ServiceAccount
  name: node-exporter
  namespace: kubesphere-monitoring-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator
subjects:
- kind: ServiceAccount
  name: prometheus-operator
  namespace: kubesphere-monitoring-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:kubesphere-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubesphere-cluster-admin
  namespace: kubesphere-controls-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-router
  name: kubesphere-router
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesphere-router
subjects:
- kind: ServiceAccount
  name: kubesphere-router
  namespace: kubesphere-controls-system
---

# Rolebindings
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-state-metrics
  namespace: kubesphere-monitoring-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-state-metrics
subjects:
- kind: ServiceAccount
  name: kube-state-metrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-k8s-config
  namespace: kubesphere-monitoring-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s-config
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: kubesphere-monitoring-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-router
  name: kubesphere-router
  namespace: kubesphere-controls-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubesphere-router
subjects:
- kind: ServiceAccount
  name: kubesphere-router
  namespace: kubesphere-controls-system
---

# CRDS
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: alertmanagers.monitoring.coreos.com
spec:
  conversion:
    strategy: None
  group: monitoring.coreos.com
  names:
    kind: Alertmanager
    listKind: AlertmanagerList
    plural: alertmanagers
    singular: alertmanager
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        spec:
          description: 'AlertmanagerSpec is a specification of the desired behavior
            of the Alertmanager cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
          properties:
            additionalPeers:
              description: AdditionalPeers allows injecting a set of additional Alertmanagers
                to peer with to form a highly available cluster.
              items:
                type: string
              type: array
            affinity:
              description: Affinity is a group of affinity scheduling rules.
              properties:
                nodeAffinity:
                  description: Node affinity is a group of node affinity scheduling
                    rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the affinity expressions specified by this field,
                        but it may choose a node that violates one or more of the
                        expressions. The node that is most preferred is the one with
                        the greatest sum of weights, i.e. for each node that meets
                        all of the scheduling requirements (resource request, requiredDuringScheduling
                        affinity expressions, etc.), compute a sum by iterating through
                        the elements of this field and adding "weight" to the sum
                        if the node matches the corresponding matchExpressions; the
                        node(s) with the highest sum are the most preferred.
                      items:
                        description: An empty preferred scheduling term matches all
                          objects with implicit weight 0 (i.e. it's a no-op). A null
                          preferred scheduling term matches no objects (i.e. is also
                          a no-op).
                        properties:
                          preference:
                            description: A null or empty node selector term matches
                              no objects. The requirements of them are ANDed. The
                              TopologySelectorTerm type implements a subset of the
                              NodeSelectorTerm.
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements
                                  by node's labels.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchFields:
                                description: A list of node selector requirements
                                  by node's fields.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          weight:
                            description: Weight associated with matching the corresponding
                              nodeSelectorTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - preference
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: A node selector represents the union of the results
                        of one or more label queries over a set of nodes; that is,
                        it represents the OR of the selectors represented by the node
                        selector terms.
                      properties:
                        nodeSelectorTerms:
                          description: Required. A list of node selector terms. The
                            terms are ORed.
                          items:
                            description: A null or empty node selector term matches
                              no objects. The requirements of them are ANDed. The
                              TopologySelectorTerm type implements a subset of the
                              NodeSelectorTerm.
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements
                                  by node's labels.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchFields:
                                description: A list of node selector requirements
                                  by node's fields.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          type: array
                      required:
                      - nodeSelectorTerms
                      type: object
                  type: object
                podAffinity:
                  description: Pod affinity is a group of inter pod affinity scheduling
                    rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the affinity expressions specified by this field,
                        but it may choose a node that violates one or more of the
                        expressions. The node that is most preferred is the one with
                        the greatest sum of weights, i.e. for each node that meets
                        all of the scheduling requirements (resource request, requiredDuringScheduling
                        affinity expressions, etc.), compute a sum by iterating through
                        the elements of this field and adding "weight" to the sum
                        if the node has pods which matches the corresponding podAffinityTerm;
                        the node(s) with the highest sum are the most preferred.
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm
                          fields are added per-node to find the most preferred node(s)
                        properties:
                          podAffinityTerm:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          weight:
                            description: weight associated with matching the corresponding
                              podAffinityTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - podAffinityTerm
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: If the affinity requirements specified by this
                        field are not met at scheduling time, the pod will not be
                        scheduled onto the node. If the affinity requirements specified
                        by this field cease to be met at some point during pod execution
                        (e.g. due to a pod label update), the system may or may not
                        try to eventually evict the pod from its node. When there
                        are multiple elements, the lists of nodes corresponding to
                        each podAffinityTerm are intersected, i.e. all terms must
                        be satisfied.
                      items:
                        description: Defines a set of pods (namely those matching
                          the labelSelector relative to the given namespace(s)) that
                          this pod should be co-located (affinity) or not co-located
                          (anti-affinity) with, where co-located is defined as running
                          on a node whose value of the label with key <topologyKey>
                          matches that of any node on which a pod of the set of pods
                          is running
                        properties:
                          labelSelector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          namespaces:
                            description: namespaces specifies which namespaces the
                              labelSelector applies to (matches against); null or
                              empty list means "this pod's namespace"
                            items:
                              type: string
                            type: array
                          topologyKey:
                            description: This pod should be co-located (affinity)
                              or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where
                              co-located is defined as running on a node whose value
                              of the label with key topologyKey matches that of any
                              node on which any of the selected pods is running. Empty
                              topologyKey is not allowed.
                            type: string
                        required:
                        - topologyKey
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  description: Pod anti affinity is a group of inter pod anti affinity
                    scheduling rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the anti-affinity expressions specified by this
                        field, but it may choose a node that violates one or more
                        of the expressions. The node that is most preferred is the
                        one with the greatest sum of weights, i.e. for each node that
                        meets all of the scheduling requirements (resource request,
                        requiredDuringScheduling anti-affinity expressions, etc.),
                        compute a sum by iterating through the elements of this field
                        and adding "weight" to the sum if the node has pods which
                        matches the corresponding podAffinityTerm; the node(s) with
                        the highest sum are the most preferred.
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm
                          fields are added per-node to find the most preferred node(s)
                        properties:
                          podAffinityTerm:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          weight:
                            description: weight associated with matching the corresponding
                              podAffinityTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - podAffinityTerm
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: If the anti-affinity requirements specified by
                        this field are not met at scheduling time, the pod will not
                        be scheduled onto the node. If the anti-affinity requirements
                        specified by this field cease to be met at some point during
                        pod execution (e.g. due to a pod label update), the system
                        may or may not try to eventually evict the pod from its node.
                        When there are multiple elements, the lists of nodes corresponding
                        to each podAffinityTerm are intersected, i.e. all terms must
                        be satisfied.
                      items:
                        description: Defines a set of pods (namely those matching
                          the labelSelector relative to the given namespace(s)) that
                          this pod should be co-located (affinity) or not co-located
                          (anti-affinity) with, where co-located is defined as running
                          on a node whose value of the label with key <topologyKey>
                          matches that of any node on which a pod of the set of pods
                          is running
                        properties:
                          labelSelector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          namespaces:
                            description: namespaces specifies which namespaces the
                              labelSelector applies to (matches against); null or
                              empty list means "this pod's namespace"
                            items:
                              type: string
                            type: array
                          topologyKey:
                            description: This pod should be co-located (affinity)
                              or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where
                              co-located is defined as running on a node whose value
                              of the label with key topologyKey matches that of any
                              node on which any of the selected pods is running. Empty
                              topologyKey is not allowed.
                            type: string
                        required:
                        - topologyKey
                        type: object
                      type: array
                  type: object
              type: object
            baseImage:
              description: Base image that is used to deploy pods, without tag.
              type: string
            configMaps:
              description: ConfigMaps is a list of ConfigMaps in the same namespace
                as the Alertmanager object, which shall be mounted into the Alertmanager
                Pods. The ConfigMaps are mounted into /etc/alertmanager/configmaps/<configmap-name>.
              items:
                type: string
              type: array
            containers:
              description: Containers allows injecting additional containers. This
                is meant to allow adding an authentication proxy to an Alertmanager
                pod.
              items:
                description: A single application container that you want to run within
                  a pod.
                properties:
                  args:
                    description: 'Arguments to the entrypoint. The docker image's
                      CMD is used if this is not provided. Variable references $(VAR_NAME)
                      are expanded using the container''s environment. If a variable
                      cannot be resolved, the reference in the input string will be
                      unchanged. The $(VAR_NAME) syntax can be escaped with a double
                      $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
                      regardless of whether the variable exists or not. Cannot be
                      updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                    items:
                      type: string
                    type: array
                  command:
                    description: 'Entrypoint array. Not executed within a shell. The
                      docker image''s ENTRYPOINT is used if this is not provided.
                      Variable references $(VAR_NAME) are expanded using the container''s
                      environment. If a variable cannot be resolved, the reference
                      in the input string will be unchanged. The $(VAR_NAME) syntax
                      can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                      will never be expanded, regardless of whether the variable exists
                      or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                    items:
                      type: string
                    type: array
                  env:
                    description: List of environment variables to set in the container.
                      Cannot be updated.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previous defined environment variables in the
                            container and any service environment variables. If a
                            variable cannot be resolved, the reference in the input
                            string will be unchanged. The $(VAR_NAME) syntax can be
                            escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                            will never be expanded, regardless of whether the variable
                            exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: EnvVarSource represents a source for the value
                            of an EnvVar.
                          properties:
                            configMapKeyRef:
                              description: Selects a key from a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or it's
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: ObjectFieldSelector selects an APIVersioned
                                field of an object.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: ResourceFieldSelector represents container
                                resources (cpu, memory) and their output format
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor: {}
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  envFrom:
                    description: List of sources to populate environment variables
                      in the container. The keys defined within a source must be a
                      C_IDENTIFIER. All invalid keys will be reported as an event
                      when the container is starting. When a key exists in multiple
                      sources, the value associated with the last source will take
                      precedence. Values defined by an Env with a duplicate key will
                      take precedence. Cannot be updated.
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps
                      properties:
                        configMapRef:
                          description: |-
                            ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

                            The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                        prefix:
                          description: An optional identifier to prepend to each key
                            in the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: |-
                            SecretEnvSource selects a Secret to populate the environment variables with.

                            The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                      type: object
                    type: array
                  image:
                    description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                      This field is optional to allow higher level config management
                      to default or override container images in workload controllers
                      like Deployments and StatefulSets.'
                    type: string
                  imagePullPolicy:
                    description: 'Image pull policy. One of Always, Never, IfNotPresent.
                      Defaults to Always if :latest tag is specified, or IfNotPresent
                      otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                    type: string
                  lifecycle:
                    description: Lifecycle describes actions that the management system
                      should take in response to container lifecycle events. For the
                      PostStart and PreStop lifecycle handlers, management of the
                      container blocks until the action is complete, unless the container
                      process fails, in which case the handler is aborted.
                    properties:
                      postStart:
                        description: Handler defines a specific action that should
                          be taken
                        properties:
                          exec:
                            description: ExecAction describes a "run in container"
                              action.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          httpGet:
                            description: HTTPGetAction describes an action based on
                              HTTP Get requests.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: string
                                - type: integer
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          tcpSocket:
                            description: TCPSocketAction describes an action based
                              on opening a socket
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: string
                                - type: integer
                            required:
                            - port
                            type: object
                        type: object
                      preStop:
                        description: Handler defines a specific action that should
                          be taken
                        properties:
                          exec:
                            description: ExecAction describes a "run in container"
                              action.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          httpGet:
                            description: HTTPGetAction describes an action based on
                              HTTP Get requests.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: string
                                - type: integer
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          tcpSocket:
                            description: TCPSocketAction describes an action based
                              on opening a socket
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: string
                                - type: integer
                            required:
                            - port
                            type: object
                        type: object
                    type: object
                  livenessProbe:
                    description: Probe describes a health check to be performed against
                      a container to determine whether it is alive or ready to receive
                      traffic.
                    properties:
                      exec:
                        description: ExecAction describes a "run in container" action.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      httpGet:
                        description: HTTPGetAction describes an action based on HTTP
                          Get requests.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness. Minimum value is 1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocketAction describes an action based on
                          opening a socket
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                        required:
                        - port
                        type: object
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  name:
                    description: Name of the container specified as a DNS_LABEL. Each
                      container in a pod must have a unique name (DNS_LABEL). Cannot
                      be updated.
                    type: string
                  ports:
                    description: List of ports to expose from the container. Exposing
                      a port here gives the system additional information about the
                      network connections a container uses, but is primarily informational.
                      Not specifying a port here DOES NOT prevent that port from being
                      exposed. Any port which is listening on the default "0.0.0.0"
                      address inside a container will be accessible from the network.
                      Cannot be updated.
                    items:
                      description: ContainerPort represents a network port in a single
                        container.
                      properties:
                        containerPort:
                          description: Number of port to expose on the pod's IP address.
                            This must be a valid port number, 0 < x < 65536.
                          format: int32
                          type: integer
                        hostIP:
                          description: What host IP to bind the external port to.
                          type: string
                        hostPort:
                          description: Number of port to expose on the host. If specified,
                            this must be a valid port number, 0 < x < 65536. If HostNetwork
                            is specified, this must match ContainerPort. Most containers
                            do not need this.
                          format: int32
                          type: integer
                        name:
                          description: If specified, this must be an IANA_SVC_NAME
                            and unique within the pod. Each named port in a pod must
                            have a unique name. Name for the port that can be referred
                            to by services.
                          type: string
                        protocol:
                          description: Protocol for port. Must be UDP, TCP, or SCTP.
                            Defaults to "TCP".
                          type: string
                      required:
                      - containerPort
                      type: object
                    type: array
                  readinessProbe:
                    description: Probe describes a health check to be performed against
                      a container to determine whether it is alive or ready to receive
                      traffic.
                    properties:
                      exec:
                        description: ExecAction describes a "run in container" action.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      httpGet:
                        description: HTTPGetAction describes an action based on HTTP
                          Get requests.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness. Minimum value is 1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocketAction describes an action based on
                          opening a socket
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                        required:
                        - port
                        type: object
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  securityContext:
                    description: SecurityContext holds security configuration that
                      will be applied to a container. Some fields are present in both
                      SecurityContext and PodSecurityContext.  When both are set,
                      the values in SecurityContext take precedence.
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN'
                        type: boolean
                      capabilities:
                        description: Adds and removes POSIX capabilities from running
                          containers.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: SELinuxOptions are the labels to be applied to
                          the container
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                    type: object
                  stdin:
                    description: Whether this container should allocate a buffer for
                      stdin in the container runtime. If this is not set, reads from
                      stdin in the container will always result in EOF. Default is
                      false.
                    type: boolean
                  stdinOnce:
                    description: Whether the container runtime should close the stdin
                      channel after it has been opened by a single attach. When stdin
                      is true the stdin stream will remain open across multiple attach
                      sessions. If stdinOnce is set to true, stdin is opened on container
                      start, is empty until the first client attaches to stdin, and
                      then remains open and accepts data until the client disconnects,
                      at which time stdin is closed and remains closed until the container
                      is restarted. If this flag is false, a container processes that
                      reads from stdin will never receive an EOF. Default is false
                    type: boolean
                  terminationMessagePath:
                    description: 'Optional: Path at which the file to which the container''s
                      termination message will be written is mounted into the container''s
                      filesystem. Message written is intended to be brief final status,
                      such as an assertion failure message. Will be truncated by the
                      node if greater than 4096 bytes. The total message length across
                      all containers will be limited to 12kb. Defaults to /dev/termination-log.
                      Cannot be updated.'
                    type: string
                  terminationMessagePolicy:
                    description: Indicate how the termination message should be populated.
                      File will use the contents of terminationMessagePath to populate
                      the container status message on both success and failure. FallbackToLogsOnError
                      will use the last chunk of container log output if the termination
                      message file is empty and the container exited with an error.
                      The log output is limited to 2048 bytes or 80 lines, whichever
                      is smaller. Defaults to File. Cannot be updated.
                    type: string
                  tty:
                    description: Whether this container should allocate a TTY for
                      itself, also requires 'stdin' to be true. Default is false.
                    type: boolean
                  volumeDevices:
                    description: volumeDevices is the list of block devices to be
                      used by the container. This is an alpha feature and may change
                      in the future.
                    items:
                      description: volumeDevice describes a mapping of a raw block
                        device within a container.
                      properties:
                        devicePath:
                          description: devicePath is the path inside of the container
                            that the device will be mapped to.
                          type: string
                        name:
                          description: name must match the name of a persistentVolumeClaim
                            in the pod
                          type: string
                      required:
                      - name
                      - devicePath
                      type: object
                    type: array
                  volumeMounts:
                    description: Pod volumes to mount into the container's filesystem.
                      Cannot be updated.
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: Path within the container at which the volume
                            should be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are
                            propagated from the host to container and the other way
                            around. When not set, MountPropagationNone is used. This
                            field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise
                            (false or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's
                            volume should be mounted. Defaults to "" (volume's root).
                          type: string
                      required:
                      - name
                      - mountPath
                      type: object
                    type: array
                  workingDir:
                    description: Container's working directory. If not specified,
                      the container runtime's default will be used, which might be
                      configured in the container image. Cannot be updated.
                    type: string
                required:
                - name
                type: object
              type: array
            externalUrl:
              description: The external URL the Alertmanager instances will be available
                under. This is necessary to generate correct URLs. This is necessary
                if Alertmanager is not served from root of a DNS name.
              type: string
            image:
              description: Image if specified has precedence over baseImage, tag and
                sha combinations. Specifying the version is still necessary to ensure
                the Prometheus Operator knows what version of Alertmanager is being
                configured.
              type: string
            imagePullSecrets:
              description: An optional list of references to secrets in the same namespace
                to use for pulling prometheus and alertmanager images from registries
                see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
              items:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                type: object
              type: array
            listenLocal:
              description: ListenLocal makes the Alertmanager server listen on loopback,
                so that it does not bind against the Pod IP. Note this is only for
                the Alertmanager UI, not the gossip communication.
              type: boolean
            logLevel:
              description: Log level for Alertmanager to be configured with.
              type: string
            nodeSelector:
              description: Define which Nodes the Pods are scheduled on.
              type: object
            paused:
              description: If set to true all actions on the underlaying managed objects
                are not goint to be performed, except for delete actions.
              type: boolean
            podMetadata:
              description: ObjectMeta is metadata that all persisted resources must
                have, which includes all objects users must create.
              properties:
                annotations:
                  description: 'Annotations is an unstructured key value map stored
                    with a resource that may be set by external tools to store and
                    retrieve arbitrary metadata. They are not queryable and should
                    be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                  type: object
                clusterName:
                  description: The name of the cluster which the object belongs to.
                    This is used to distinguish resources with same name and namespace
                    in different clusters. This field is not set anywhere right now
                    and apiserver is going to ignore it if set in create or update
                    request.
                  type: string
                creationTimestamp:
                  description: Time is a wrapper around time.Time which supports correct
                    marshaling to YAML and JSON.  Wrappers are provided for many of
                    the factory methods that the time package offers.
                  format: date-time
                  type: string
                deletionGracePeriodSeconds:
                  description: Number of seconds allowed for this object to gracefully
                    terminate before it will be removed from the system. Only set
                    when deletionTimestamp is also set. May only be shortened. Read-only.
                  format: int64
                  type: integer
                deletionTimestamp:
                  description: Time is a wrapper around time.Time which supports correct
                    marshaling to YAML and JSON.  Wrappers are provided for many of
                    the factory methods that the time package offers.
                  format: date-time
                  type: string
                finalizers:
                  description: Must be empty before the object is deleted from the
                    registry. Each entry is an identifier for the responsible component
                    that will remove the entry from the list. If the deletionTimestamp
                    of the object is non-nil, entries in this list can only be removed.
                  items:
                    type: string
                  type: array
                generateName:
                  description: |-
                    GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                    If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                    Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                  type: string
                generation:
                  description: A sequence number representing a specific generation
                    of the desired state. Populated by the system. Read-only.
                  format: int64
                  type: integer
                initializers:
                  description: Initializers tracks the progress of initialization.
                  properties:
                    pending:
                      description: Pending is a list of initializers that must execute
                        in order before this object is visible. When the last pending
                        initializer is removed, and no failing result is set, the
                        initializers struct will be set to nil and the object is considered
                        as initialized and visible to all clients.
                      items:
                        description: Initializer is information about an initializer
                          that has not yet completed.
                        properties:
                          name:
                            description: name of the process that is responsible for
                              initializing this object.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    result:
                      description: Status is a return value for calls that don't return
                        other objects.
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                          type: string
                        code:
                          description: Suggested HTTP return code for this status,
                            0 if not set.
                          format: int32
                          type: integer
                        details:
                          description: StatusDetails is a set of additional properties
                            that MAY be set by the server to provide additional information
                            about a response. The Reason field of a Status object
                            defines what attributes will be set. Clients must ignore
                            fields that do not match the defined type of each attribute,
                            and should assume that any attribute may be empty, invalid,
                            or under defined.
                          properties:
                            causes:
                              description: The Causes array includes more details
                                associated with the StatusReason failure. Not all
                                StatusReasons may provide detailed causes.
                              items:
                                description: StatusCause provides more information
                                  about an api.Status failure, including cases when
                                  multiple errors are encountered.
                                properties:
                                  field:
                                    description: |-
                                      The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                      Examples:
                                        "name" - the field "name" on the current resource
                                        "items[0].name" - the field "name" on the first array entry in "items"
                                    type: string
                                  message:
                                    description: A human-readable description of the
                                      cause of the error.  This field may be presented
                                      as-is to a reader.
                                    type: string
                                  reason:
                                    description: A machine-readable description of
                                      the cause of the error. If this value is empty
                                      there is no information available.
                                    type: string
                                type: object
                              type: array
                            group:
                              description: The group attribute of the resource associated
                                with the status StatusReason.
                              type: string
                            kind:
                              description: 'The kind attribute of the resource associated
                                with the status StatusReason. On some operations may
                                differ from the requested resource Kind. More info:
                                https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: The name attribute of the resource associated
                                with the status StatusReason (when there is a single
                                name which can be described).
                              type: string
                            retryAfterSeconds:
                              description: If specified, the time in seconds before
                                the operation should be retried. Some errors may indicate
                                the client must take an alternate action - for those
                                errors this field may indicate how long to wait before
                                taking the alternate action.
                              format: int32
                              type: integer
                            uid:
                              description: 'UID of the resource. (when there is a
                                single resource which can be described). More info:
                                http://kubernetes.io/docs/user-guide/identifiers#uids'
                              type: string
                          type: object
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        message:
                          description: A human-readable description of the status
                            of this operation.
                          type: string
                        metadata:
                          description: ListMeta describes metadata that synthetic
                            resources must have, including lists and various status
                            objects. A resource may have only one of {ObjectMeta,
                            ListMeta}.
                          properties:
                            continue:
                              description: continue may be set if the user set a limit
                                on the number of items returned, and indicates that
                                the server has more data available. The value is opaque
                                and may be used to issue another request to the endpoint
                                that served this list to retrieve the next set of
                                available objects. Continuing a consistent list may
                                not be possible if the server configuration has changed
                                or more than a few minutes have passed. The resourceVersion
                                field returned when using this continue value will
                                be identical to the value in the first response, unless
                                you have received this token from an error message.
                              type: string
                            resourceVersion:
                              description: 'String that identifies the server''s internal
                                version of this object that can be used by clients
                                to determine when objects have changed. Value must
                                be treated as opaque by clients and passed unmodified
                                back to the server. Populated by the system. Read-only.
                                More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            selfLink:
                              description: selfLink is a URL representing this object.
                                Populated by the system. Read-only.
                              type: string
                          type: object
                        reason:
                          description: A machine-readable description of why this
                            operation is in the "Failure" status. If this value is
                            empty there is no information available. A Reason clarifies
                            an HTTP status code but does not override it.
                          type: string
                        status:
                          description: 'Status of the operation. One of: "Success"
                            or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                          type: string
                      type: object
                  required:
                  - pending
                  type: object
                labels:
                  description: 'Map of string keys and values that can be used to
                    organize and categorize (scope and select) objects. May match
                    selectors of replication controllers and services. More info:
                    http://kubernetes.io/docs/user-guide/labels'
                  type: object
                name:
                  description: 'Name must be unique within a namespace. Is required
                    when creating resources, although some resources may allow a client
                    to request the generation of an appropriate name automatically.
                    Name is primarily intended for creation idempotence and configuration
                    definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
                namespace:
                  description: |-
                    Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                    Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                  type: string
                ownerReferences:
                  description: List of objects depended by this object. If ALL objects
                    in the list have been deleted, this object will be garbage collected.
                    If this object is managed by a controller, then an entry in this
                    list will point to this controller, with the controller field
                    set to true. There cannot be more than one managing controller.
                  items:
                    description: OwnerReference contains enough information to let
                      you identify an owning object. Currently, an owning object must
                      be in the same namespace, so there is no namespace field.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      blockOwnerDeletion:
                        description: If true, AND if the owner has the "foregroundDeletion"
                          finalizer, then the owner cannot be deleted from the key-value
                          store until this reference is removed. Defaults to false.
                          To set this field, a user needs "delete" permission of the
                          owner, otherwise 422 (Unprocessable Entity) will be returned.
                        type: boolean
                      controller:
                        description: If true, this reference points to the managing
                          controller.
                        type: boolean
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    - uid
                    type: object
                  type: array
                resourceVersion:
                  description: |-
                    An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                    Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                  type: string
                selfLink:
                  description: SelfLink is a URL representing this object. Populated
                    by the system. Read-only.
                  type: string
                uid:
                  description: |-
                    UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                    Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                  type: string
              type: object
            priorityClassName:
              description: Priority class assigned to the Pods
              type: string
            replicas:
              description: Size is the expected size of the alertmanager cluster.
                The controller will eventually make the size of the running cluster
                equal to the expected size.
              format: int32
              type: integer
            resources:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            retention:
              description: Time duration Alertmanager shall retain data for. Default
                is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)`
                (milliseconds seconds minutes hours).
              type: string
            routePrefix:
              description: The route prefix Alertmanager registers HTTP handlers for.
                This is useful, if using ExternalURL and a proxy is rewriting HTTP
                routes of a request, and the actual ExternalURL is still true, but
                the server serves requests under a different route prefix. For example
                for use with `kubectl proxy`.
              type: string
            secrets:
              description: Secrets is a list of Secrets in the same namespace as the
                Alertmanager object, which shall be mounted into the Alertmanager
                Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>.
              items:
                type: string
              type: array
            securityContext:
              description: PodSecurityContext holds pod-level security attributes
                and common container settings. Some fields are also present in container.securityContext.  Field
                values of container.securityContext take precedence over field values
                of PodSecurityContext.
              properties:
                fsGroup:
                  description: |-
                    A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                    1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                    If unset, the Kubelet will not modify the ownership and permissions of any volume.
                  format: int64
                  type: integer
                runAsGroup:
                  description: The GID to run the entrypoint of the container process.
                    Uses runtime default if unset. May also be set in SecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence for that container.
                  format: int64
                  type: integer
                runAsNonRoot:
                  description: Indicates that the container must run as a non-root
                    user. If true, the Kubelet will validate the image at runtime
                    to ensure that it does not run as UID 0 (root) and fail to start
                    the container if it does. If unset or false, no such validation
                    will be performed. May also be set in SecurityContext.  If set
                    in both SecurityContext and PodSecurityContext, the value specified
                    in SecurityContext takes precedence.
                  type: boolean
                runAsUser:
                  description: The UID to run the entrypoint of the container process.
                    Defaults to user specified in image metadata if unspecified. May
                    also be set in SecurityContext.  If set in both SecurityContext
                    and PodSecurityContext, the value specified in SecurityContext
                    takes precedence for that container.
                  format: int64
                  type: integer
                seLinuxOptions:
                  description: SELinuxOptions are the labels to be applied to the
                    container
                  properties:
                    level:
                      description: Level is SELinux level label that applies to the
                        container.
                      type: string
                    role:
                      description: Role is a SELinux role label that applies to the
                        container.
                      type: string
                    type:
                      description: Type is a SELinux type label that applies to the
                        container.
                      type: string
                    user:
                      description: User is a SELinux user label that applies to the
                        container.
                      type: string
                  type: object
                supplementalGroups:
                  description: A list of groups applied to the first process run in
                    each container, in addition to the container's primary GID.  If
                    unspecified, no groups will be added to any container.
                  items:
                    format: int64
                    type: integer
                  type: array
                sysctls:
                  description: Sysctls hold a list of namespaced sysctls used for
                    the pod. Pods with unsupported sysctls (by the container runtime)
                    might fail to launch.
                  items:
                    description: Sysctl defines a kernel parameter to be set
                    properties:
                      name:
                        description: Name of a property to set
                        type: string
                      value:
                        description: Value of a property to set
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
              type: object
            serviceAccountName:
              description: ServiceAccountName is the name of the ServiceAccount to
                use to run the Prometheus Pods.
              type: string
            sha:
              description: SHA of Alertmanager container image to be deployed. Defaults
                to the value of `version`. Similar to a tag, but the SHA explicitly
                deploys an immutable container image. Version and Tag are ignored
                if SHA is set.
              type: string
            storage:
              description: StorageSpec defines the configured storage for a group
                Prometheus servers. If neither `emptyDir` nor `volumeClaimTemplate`
                is specified, then by default an [EmptyDir](https://kubernetes.io/docs/concepts/storage/volumes/#emptydir)
                will be used.
              properties:
                emptyDir:
                  description: Represents an empty directory for a pod. Empty directory
                    volumes support ownership management and SELinux relabeling.
                  properties:
                    medium:
                      description: 'What type of storage medium should back this directory.
                        The default is "" which means to use the node''s default medium.
                        Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                      type: string
                    sizeLimit: {}
                  type: object
                volumeClaimTemplate:
                  description: PersistentVolumeClaim is a user's request for and claim
                    to a persistent volume
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      description: ObjectMeta is metadata that all persisted resources
                        must have, which includes all objects users must create.
                      properties:
                        annotations:
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        clusterName:
                          description: The name of the cluster which the object belongs
                            to. This is used to distinguish resources with same name
                            and namespace in different clusters. This field is not
                            set anywhere right now and apiserver is going to ignore
                            it if set in create or update request.
                          type: string
                        creationTimestamp:
                          description: Time is a wrapper around time.Time which supports
                            correct marshaling to YAML and JSON.  Wrappers are provided
                            for many of the factory methods that the time package
                            offers.
                          format: date-time
                          type: string
                        deletionGracePeriodSeconds:
                          description: Number of seconds allowed for this object to
                            gracefully terminate before it will be removed from the
                            system. Only set when deletionTimestamp is also set. May
                            only be shortened. Read-only.
                          format: int64
                          type: integer
                        deletionTimestamp:
                          description: Time is a wrapper around time.Time which supports
                            correct marshaling to YAML and JSON.  Wrappers are provided
                            for many of the factory methods that the time package
                            offers.
                          format: date-time
                          type: string
                        finalizers:
                          description: Must be empty before the object is deleted
                            from the registry. Each entry is an identifier for the
                            responsible component that will remove the entry from
                            the list. If the deletionTimestamp of the object is non-nil,
                            entries in this list can only be removed.
                          items:
                            type: string
                          type: array
                        generateName:
                          description: |-
                            GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                            If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                            Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                          type: string
                        generation:
                          description: A sequence number representing a specific generation
                            of the desired state. Populated by the system. Read-only.
                          format: int64
                          type: integer
                        initializers:
                          description: Initializers tracks the progress of initialization.
                          properties:
                            pending:
                              description: Pending is a list of initializers that
                                must execute in order before this object is visible.
                                When the last pending initializer is removed, and
                                no failing result is set, the initializers struct
                                will be set to nil and the object is considered as
                                initialized and visible to all clients.
                              items:
                                description: Initializer is information about an initializer
                                  that has not yet completed.
                                properties:
                                  name:
                                    description: name of the process that is responsible
                                      for initializing this object.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            result:
                              description: Status is a return value for calls that
                                don't return other objects.
                              properties:
                                apiVersion:
                                  description: 'APIVersion defines the versioned schema
                                    of this representation of an object. Servers should
                                    convert recognized schemas to the latest internal
                                    value, and may reject unrecognized values. More
                                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                  type: string
                                code:
                                  description: Suggested HTTP return code for this
                                    status, 0 if not set.
                                  format: int32
                                  type: integer
                                details:
                                  description: StatusDetails is a set of additional
                                    properties that MAY be set by the server to provide
                                    additional information about a response. The Reason
                                    field of a Status object defines what attributes
                                    will be set. Clients must ignore fields that do
                                    not match the defined type of each attribute,
                                    and should assume that any attribute may be empty,
                                    invalid, or under defined.
                                  properties:
                                    causes:
                                      description: The Causes array includes more
                                        details associated with the StatusReason failure.
                                        Not all StatusReasons may provide detailed
                                        causes.
                                      items:
                                        description: StatusCause provides more information
                                          about an api.Status failure, including cases
                                          when multiple errors are encountered.
                                        properties:
                                          field:
                                            description: |-
                                              The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                              Examples:
                                                "name" - the field "name" on the current resource
                                                "items[0].name" - the field "name" on the first array entry in "items"
                                            type: string
                                          message:
                                            description: A human-readable description
                                              of the cause of the error.  This field
                                              may be presented as-is to a reader.
                                            type: string
                                          reason:
                                            description: A machine-readable description
                                              of the cause of the error. If this value
                                              is empty there is no information available.
                                            type: string
                                        type: object
                                      type: array
                                    group:
                                      description: The group attribute of the resource
                                        associated with the status StatusReason.
                                      type: string
                                    kind:
                                      description: 'The kind attribute of the resource
                                        associated with the status StatusReason. On
                                        some operations may differ from the requested
                                        resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: The name attribute of the resource
                                        associated with the status StatusReason (when
                                        there is a single name which can be described).
                                      type: string
                                    retryAfterSeconds:
                                      description: If specified, the time in seconds
                                        before the operation should be retried. Some
                                        errors may indicate the client must take an
                                        alternate action - for those errors this field
                                        may indicate how long to wait before taking
                                        the alternate action.
                                      format: int32
                                      type: integer
                                    uid:
                                      description: 'UID of the resource. (when there
                                        is a single resource which can be described).
                                        More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                      type: string
                                  type: object
                                kind:
                                  description: 'Kind is a string value representing
                                    the REST resource this object represents. Servers
                                    may infer this from the endpoint the client submits
                                    requests to. Cannot be updated. In CamelCase.
                                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                  type: string
                                message:
                                  description: A human-readable description of the
                                    status of this operation.
                                  type: string
                                metadata:
                                  description: ListMeta describes metadata that synthetic
                                    resources must have, including lists and various
                                    status objects. A resource may have only one of
                                    {ObjectMeta, ListMeta}.
                                  properties:
                                    continue:
                                      description: continue may be set if the user
                                        set a limit on the number of items returned,
                                        and indicates that the server has more data
                                        available. The value is opaque and may be
                                        used to issue another request to the endpoint
                                        that served this list to retrieve the next
                                        set of available objects. Continuing a consistent
                                        list may not be possible if the server configuration
                                        has changed or more than a few minutes have
                                        passed. The resourceVersion field returned
                                        when using this continue value will be identical
                                        to the value in the first response, unless
                                        you have received this token from an error
                                        message.
                                      type: string
                                    resourceVersion:
                                      description: 'String that identifies the server''s
                                        internal version of this object that can be
                                        used by clients to determine when objects
                                        have changed. Value must be treated as opaque
                                        by clients and passed unmodified back to the
                                        server. Populated by the system. Read-only.
                                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    selfLink:
                                      description: selfLink is a URL representing
                                        this object. Populated by the system. Read-only.
                                      type: string
                                  type: object
                                reason:
                                  description: A machine-readable description of why
                                    this operation is in the "Failure" status. If
                                    this value is empty there is no information available.
                                    A Reason clarifies an HTTP status code but does
                                    not override it.
                                  type: string
                                status:
                                  description: 'Status of the operation. One of: "Success"
                                    or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                  type: string
                              type: object
                          required:
                          - pending
                          type: object
                        labels:
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: |-
                            Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                            Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                          type: string
                        ownerReferences:
                          description: List of objects depended by this object. If
                            ALL objects in the list have been deleted, this object
                            will be garbage collected. If this object is managed by
                            a controller, then an entry in this list will point to
                            this controller, with the controller field set to true.
                            There cannot be more than one managing controller.
                          items:
                            description: OwnerReference contains enough information
                              to let you identify an owning object. Currently, an
                              owning object must be in the same namespace, so there
                              is no namespace field.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              blockOwnerDeletion:
                                description: If true, AND if the owner has the "foregroundDeletion"
                                  finalizer, then the owner cannot be deleted from
                                  the key-value store until this reference is removed.
                                  Defaults to false. To set this field, a user needs
                                  "delete" permission of the owner, otherwise 422
                                  (Unprocessable Entity) will be returned.
                                type: boolean
                              controller:
                                description: If true, this reference points to the
                                  managing controller.
                                type: boolean
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                            required:
                            - apiVersion
                            - kind
                            - name
                            - uid
                            type: object
                          type: array
                        resourceVersion:
                          description: |-
                            An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                            Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        selfLink:
                          description: SelfLink is a URL representing this object.
                            Populated by the system. Read-only.
                          type: string
                        uid:
                          description: |-
                            UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                            Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                          type: string
                      type: object
                    spec:
                      description: PersistentVolumeClaimSpec describes the common
                        attributes of storage devices and allows a Source for provider-specific
                        attributes
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: TypedLocalObjectReference contains enough information
                            to let you locate the typed referenced object inside the
                            same namespace.
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: ResourceRequirements describes the compute
                            resource requirements.
                          properties:
                            limits:
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        selector:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required
                            by the claim. Value of Filesystem is implied when not
                            included in claim spec. This is an alpha feature and may
                            change in the future.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                    status:
                      description: PersistentVolumeClaimStatus is the current status
                        of a persistent volume claim.
                      properties:
                        accessModes:
                          description: 'AccessModes contains the actual access modes
                            the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        capacity:
                          description: Represents the actual resources of the underlying
                            volume.
                          type: object
                        conditions:
                          description: Current Condition of persistent volume claim.
                            If underlying persistent volume is being resized then
                            the Condition will be set to 'ResizeStarted'.
                          items:
                            description: PersistentVolumeClaimCondition contails details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: Time is a wrapper around time.Time which
                                  supports correct marshaling to YAML and JSON.  Wrappers
                                  are provided for many of the factory methods that
                                  the time package offers.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: Time is a wrapper around time.Time which
                                  supports correct marshaling to YAML and JSON.  Wrappers
                                  are provided for many of the factory methods that
                                  the time package offers.
                                format: date-time
                                type: string
                              message:
                                description: Human-readable message indicating details
                                  about last transition.
                                type: string
                              reason:
                                description: Unique, this should be a short, machine
                                  understandable string that gives the reason for
                                  condition's last transition. If it reports "ResizeStarted"
                                  that means the underlying persistent volume is being
                                  resized.
                                type: string
                              status:
                                type: string
                              type:
                                type: string
                            required:
                            - type
                            - status
                            type: object
                          type: array
                        phase:
                          description: Phase represents the current phase of PersistentVolumeClaim.
                          type: string
                      type: object
                  type: object
              type: object
            tag:
              description: Tag of Alertmanager container image to be deployed. Defaults
                to the value of `version`. Version is ignored if Tag is set.
              type: string
            tolerations:
              description: If specified, the pod's tolerations.
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
            version:
              description: Version the cluster should be on.
              type: string
          type: object
        status:
          description: 'AlertmanagerStatus is the most recent observed status of the
            Alertmanager cluster. Read-only. Not included when requesting from the
            apiserver, only from the Prometheus Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
          properties:
            availableReplicas:
              description: Total number of available pods (ready for at least minReadySeconds)
                targeted by this Alertmanager cluster.
              format: int32
              type: integer
            paused:
              description: Represents whether any actions on the underlaying managed
                objects are being performed. Only delete actions will be performed.
              type: boolean
            replicas:
              description: Total number of non-terminated pods targeted by this Alertmanager
                cluster (their labels match the selector).
              format: int32
              type: integer
            unavailableReplicas:
              description: Total number of unavailable pods targeted by this Alertmanager
                cluster.
              format: int32
              type: integer
            updatedReplicas:
              description: Total number of non-terminated pods targeted by this Alertmanager
                cluster that have the desired version spec.
              format: int32
              type: integer
          required:
          - paused
          - replicas
          - updatedReplicas
          - availableReplicas
          - unavailableReplicas
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:56Z"
  generation: 1
  labels:
    controller-tools.k8s.io: "1.0"
  name: applications.app.k8s.io
  resourceVersion: "1208"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/applications.app.k8s.io
  uid: a8ff2d0e-2753-46db-819e-34213a406f3d
spec:
  conversion:
    strategy: None
  group: app.k8s.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            assemblyPhase:
              type: string
            componentKinds:
              items:
                type: object
              type: array
            descriptor:
              properties:
                description:
                  type: string
                icons:
                  items:
                    properties:
                      size:
                        type: string
                      src:
                        type: string
                      type:
                        type: string
                    required:
                    - src
                    type: object
                  type: array
                keywords:
                  items:
                    type: string
                  type: array
                links:
                  items:
                    properties:
                      description:
                        type: string
                      url:
                        type: string
                    type: object
                  type: array
                maintainers:
                  items:
                    properties:
                      email:
                        type: string
                      name:
                        type: string
                      url:
                        type: string
                    type: object
                  type: array
                notes:
                  type: string
                owners:
                  items:
                    properties:
                      email:
                        type: string
                      name:
                        type: string
                      url:
                        type: string
                    type: object
                  type: array
                type:
                  type: string
                version:
                  type: string
              type: object
            info:
              items:
                properties:
                  name:
                    type: string
                  type:
                    type: string
                  value:
                    type: string
                  valueFrom:
                    properties:
                      configMapKeyRef:
                        properties:
                          apiVersion:
                            type: string
                          fieldPath:
                            type: string
                          key:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                          resourceVersion:
                            type: string
                          uid:
                            type: string
                        type: object
                      ingressRef:
                        properties:
                          apiVersion:
                            type: string
                          fieldPath:
                            type: string
                          host:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                          path:
                            type: string
                          resourceVersion:
                            type: string
                          uid:
                            type: string
                        type: object
                      secretKeyRef:
                        properties:
                          apiVersion:
                            type: string
                          fieldPath:
                            type: string
                          key:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                          resourceVersion:
                            type: string
                          uid:
                            type: string
                        type: object
                      serviceRef:
                        properties:
                          apiVersion:
                            type: string
                          fieldPath:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                          path:
                            type: string
                          port:
                            format: int32
                            type: integer
                          resourceVersion:
                            type: string
                          uid:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
              type: array
            selector:
              type: object
          type: object
        status:
          properties:
            components:
              items:
                properties:
                  group:
                    type: string
                  kind:
                    type: string
                  link:
                    type: string
                  name:
                    type: string
                  status:
                    type: string
                type: object
              type: array
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:16Z"
  generation: 1
  name: blockdeviceclaims.openebs.io
  resourceVersion: "1076"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/blockdeviceclaims.openebs.io
  uid: fb8be4f8-d9f2-461b-bc0f-e150312a8f9e
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.blockDeviceName
    name: BlockDeviceName
    type: string
  - JSONPath: .status.phase
    name: Phase
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  conversion:
    strategy: None
  group: openebs.io
  names:
    kind: BlockDeviceClaim
    listKind: BlockDeviceClaimList
    plural: blockdeviceclaims
    shortNames:
    - bdc
    singular: blockdeviceclaim
  preserveUnknownFields: true
  scope: Namespaced
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:12Z"
  generation: 1
  name: blockdevices.openebs.io
  resourceVersion: "1038"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/blockdevices.openebs.io
  uid: 28d4a29e-a026-4161-a525-aeffcdab908d
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.capacity.storage
    name: Size
    type: string
  - JSONPath: .status.claimState
    name: ClaimState
    type: string
  - JSONPath: .status.state
    name: Status
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  conversion:
    strategy: None
  group: openebs.io
  names:
    kind: BlockDevice
    listKind: BlockDeviceList
    plural: blockdevices
    shortNames:
    - bd
    singular: blockdevice
  preserveUnknownFields: true
  scope: Namespaced
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:56Z"
  generation: 1
  labels:
    controller-tools.k8s.io: "1.0"
  name: destinationrules.networking.istio.io
  resourceVersion: "1228"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/destinationrules.networking.istio.io
  uid: 3eaf19df-24f5-4ae3-a855-7efd2146473e
spec:
  conversion:
    strategy: None
  group: networking.istio.io
  names:
    kind: DestinationRule
    listKind: DestinationRuleList
    plural: destinationrules
    singular: destinationrule
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            host:
              description: 'REQUIRED. The name of a service from the service registry.
                Service names are looked up from the platform''s service registry
                (e.g., Kubernetes services, Consul services, etc.) and from the hosts
                declared by [ServiceEntries](#ServiceEntry). Rules defined for services
                that do not exist in the service registry will be ignored.  *Note
                for Kubernetes users*: When short names are used (e.g. "reviews" instead
                of "reviews.default.svc.cluster.local"), Istio will interpret the
                short name based on the namespace of the rule, not the service. A
                rule in the "default" namespace containing a host "reviews will be
                interpreted as "reviews.default.svc.cluster.local", irrespective of
                the actual namespace associated with the reviews service. _To avoid
                potential misconfigurations, it is recommended to always use fully
                qualified domain names over short names._  Note that the host field
                applies to both HTTP and TCP services.'
              type: string
            subsets:
              description: One or more named sets that represent individual versions
                of a service. Traffic policies can be overridden at subset level.
              items:
                properties:
                  labels:
                    description: REQUIRED. Labels apply a filter over the endpoints
                      of a service in the service registry. See route rules for examples
                      of usage.
                    type: object
                  name:
                    description: REQUIRED. Name of the subset. The service name and
                      the subset name can be used for traffic splitting in a route
                      rule.
                    type: string
                  trafficPolicy:
                    description: Traffic policies that apply to this subset. Subsets
                      inherit the traffic policies specified at the DestinationRule
                      level. Settings specified at the subset level will override
                      the corresponding settings specified at the DestinationRule
                      level.
                    properties:
                      connectionPool:
                        description: Settings controlling the volume of connections
                          to an upstream service
                        properties:
                          http:
                            description: HTTP connection pool settings.
                            properties:
                              maxRequestsPerConnection:
                                description: Maximum number of requests per connection
                                  to a backend. Setting this parameter to 1 disables
                                  keep alive.
                                format: int32
                                type: integer
                              maxRetries:
                                description: Maximum number of retries that can be
                                  outstanding to all hosts in a cluster at a given
                                  time. Defaults to 3.
                                format: int32
                                type: integer
                            type: object
                          tcp:
                            description: Settings common to both HTTP and TCP upstream
                              connections.
                            properties:
                              connectTimeout:
                                description: TCP connection timeout.
                                type: string
                              maxConnections:
                                description: Maximum number of HTTP1 /TCP connections
                                  to a destination host.
                                format: int32
                                type: integer
                            type: object
                        type: object
                      loadBalancer:
                        description: Settings controlling the load balancer algorithms.
                        properties:
                          consistentHash:
                            properties:
                              httpCookie:
                                description: Hash based on HTTP cookie.
                                properties:
                                  name:
                                    description: REQUIRED. Name of the cookie.
                                    type: string
                                  path:
                                    description: Path to set for the cookie.
                                    type: string
                                  ttl:
                                    description: REQUIRED. Lifetime of the cookie.
                                    type: string
                                required:
                                - name
                                - ttl
                                type: object
                              httpHeaderName:
                                description: 'It is required to specify exactly one
                                  of the fields as hash key: HttpHeaderName, HttpCookie,
                                  or UseSourceIP. Hash based on a specific HTTP header.'
                                type: string
                              minimumRingSize:
                                description: The minimum number of virtual nodes to
                                  use for the hash ring. Defaults to 1024. Larger
                                  ring sizes result in more granular load distributions.
                                  If the number of hosts in the load balancing pool
                                  is larger than the ring size, each host will be
                                  assigned a single virtual node.
                                format: int64
                                type: integer
                              useSourceIp:
                                description: Hash based on the source IP address.
                                type: boolean
                            type: object
                          simple:
                            description: 'It is required to specify exactly one of
                              the fields: Simple or ConsistentHash'
                            type: string
                        type: object
                      outlierDetection:
                        description: Settings controlling eviction of unhealthy hosts
                          from the load balancing pool
                        properties:
                          baseEjectionTime:
                            description: 'Minimum ejection duration. A host will remain
                              ejected for a period equal to the product of minimum
                              ejection duration and the number of times the host has
                              been ejected. This technique allows the system to automatically
                              increase the ejection period for unhealthy upstream
                              servers. format: 1h/1m/1s/1ms. MUST BE >=1ms. Default
                              is 30s.'
                            type: string
                          consecutiveErrors:
                            description: Number of errors before a host is ejected
                              from the connection pool. Defaults to 5. When the upstream
                              host is accessed over HTTP, a 5xx return code qualifies
                              as an error. When the upstream host is accessed over
                              an opaque TCP connection, connect timeouts and connection
                              error/failure events qualify as an error.
                            format: int32
                            type: integer
                          interval:
                            description: 'Time interval between ejection sweep analysis.
                              format: 1h/1m/1s/1ms. MUST BE >=1ms. Default is 10s.'
                            type: string
                          maxEjectionPercent:
                            description: Maximum % of hosts in the load balancing
                              pool for the upstream service that can be ejected. Defaults
                              to 10%.
                            format: int32
                            type: integer
                        type: object
                      portLevelSettings:
                        description: Traffic policies specific to individual ports.
                          Note that port level settings will override the destination-level
                          settings. Traffic settings specified at the destination-level
                          will not be inherited when overridden by port-level settings,
                          i.e. default values will be applied to fields omitted in
                          port-level traffic policies.
                        items:
                          properties:
                            connectionPool:
                              description: Settings controlling the volume of connections
                                to an upstream service
                              properties:
                                http:
                                  description: HTTP connection pool settings.
                                  properties:
                                    maxRequestsPerConnection:
                                      description: Maximum number of requests per
                                        connection to a backend. Setting this parameter
                                        to 1 disables keep alive.
                                      format: int32
                                      type: integer
                                    maxRetries:
                                      description: Maximum number of retries that
                                        can be outstanding to all hosts in a cluster
                                        at a given time. Defaults to 3.
                                      format: int32
                                      type: integer
                                  type: object
                                tcp:
                                  description: Settings common to both HTTP and TCP
                                    upstream connections.
                                  properties:
                                    connectTimeout:
                                      description: TCP connection timeout.
                                      type: string
                                    maxConnections:
                                      description: Maximum number of HTTP1 /TCP connections
                                        to a destination host.
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            loadBalancer:
                              description: Settings controlling the load balancer
                                algorithms.
                              properties:
                                consistentHash:
                                  properties:
                                    httpCookie:
                                      description: Hash based on HTTP cookie.
                                      properties:
                                        name:
                                          description: REQUIRED. Name of the cookie.
                                          type: string
                                        path:
                                          description: Path to set for the cookie.
                                          type: string
                                        ttl:
                                          description: REQUIRED. Lifetime of the cookie.
                                          type: string
                                      required:
                                      - name
                                      - ttl
                                      type: object
                                    httpHeaderName:
                                      description: 'It is required to specify exactly
                                        one of the fields as hash key: HttpHeaderName,
                                        HttpCookie, or UseSourceIP. Hash based on
                                        a specific HTTP header.'
                                      type: string
                                    minimumRingSize:
                                      description: The minimum number of virtual nodes
                                        to use for the hash ring. Defaults to 1024.
                                        Larger ring sizes result in more granular
                                        load distributions. If the number of hosts
                                        in the load balancing pool is larger than
                                        the ring size, each host will be assigned
                                        a single virtual node.
                                      format: int64
                                      type: integer
                                    useSourceIp:
                                      description: Hash based on the source IP address.
                                      type: boolean
                                  type: object
                                simple:
                                  description: 'It is required to specify exactly
                                    one of the fields: Simple or ConsistentHash'
                                  type: string
                              type: object
                            outlierDetection:
                              description: Settings controlling eviction of unhealthy
                                hosts from the load balancing pool
                              properties:
                                baseEjectionTime:
                                  description: 'Minimum ejection duration. A host
                                    will remain ejected for a period equal to the
                                    product of minimum ejection duration and the number
                                    of times the host has been ejected. This technique
                                    allows the system to automatically increase the
                                    ejection period for unhealthy upstream servers.
                                    format: 1h/1m/1s/1ms. MUST BE >=1ms. Default is
                                    30s.'
                                  type: string
                                consecutiveErrors:
                                  description: Number of errors before a host is ejected
                                    from the connection pool. Defaults to 5. When
                                    the upstream host is accessed over HTTP, a 5xx
                                    return code qualifies as an error. When the upstream
                                    host is accessed over an opaque TCP connection,
                                    connect timeouts and connection error/failure
                                    events qualify as an error.
                                  format: int32
                                  type: integer
                                interval:
                                  description: 'Time interval between ejection sweep
                                    analysis. format: 1h/1m/1s/1ms. MUST BE >=1ms.
                                    Default is 10s.'
                                  type: string
                                maxEjectionPercent:
                                  description: Maximum % of hosts in the load balancing
                                    pool for the upstream service that can be ejected.
                                    Defaults to 10%.
                                  format: int32
                                  type: integer
                              type: object
                            port:
                              description: Specifies the port name or number of a
                                port on the destination service on which this policy
                                is being applied.  Names must comply with DNS label
                                syntax (rfc1035) and therefore cannot collide with
                                numbers. If there are multiple ports on a service
                                with the same protocol the names should be of the
                                form <protocol-name>-<DNS label>.
                              properties:
                                name:
                                  description: Valid port name
                                  type: string
                                number:
                                  description: Valid port number
                                  format: int32
                                  type: integer
                              type: object
                            tls:
                              description: TLS related settings for connections to
                                the upstream service.
                              properties:
                                caCertificates:
                                  description: 'OPTIONAL: The path to the file containing
                                    certificate authority certificates to use in verifying
                                    a presented server certificate. If omitted, the
                                    proxy will not verify the server''s certificate.
                                    Should be empty if mode is `ISTIO_MUTUAL`.'
                                  type: string
                                clientCertificate:
                                  description: REQUIRED if mode is `MUTUAL`. The path
                                    to the file holding the client-side TLS certificate
                                    to use. Should be empty if mode is `ISTIO_MUTUAL`.
                                  type: string
                                mode:
                                  description: 'REQUIRED: Indicates whether connections
                                    to this port should be secured using TLS. The
                                    value of this field determines how TLS is enforced.'
                                  type: string
                                privateKey:
                                  description: REQUIRED if mode is `MUTUAL`. The path
                                    to the file holding the client's private key.
                                    Should be empty if mode is `ISTIO_MUTUAL`.
                                  type: string
                                sni:
                                  description: SNI string to present to the server
                                    during TLS handshake. Should be empty if mode
                                    is `ISTIO_MUTUAL`.
                                  type: string
                                subjectAltNames:
                                  description: A list of alternate names to verify
                                    the subject identity in the certificate. If specified,
                                    the proxy will verify that the server certificate's
                                    subject alt name matches one of the specified
                                    values. Should be empty if mode is `ISTIO_MUTUAL`.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - mode
                              type: object
                          required:
                          - port
                          type: object
                        type: array
                      tls:
                        description: TLS related settings for connections to the upstream
                          service.
                        properties:
                          caCertificates:
                            description: 'OPTIONAL: The path to the file containing
                              certificate authority certificates to use in verifying
                              a presented server certificate. If omitted, the proxy
                              will not verify the server''s certificate. Should be
                              empty if mode is `ISTIO_MUTUAL`.'
                            type: string
                          clientCertificate:
                            description: REQUIRED if mode is `MUTUAL`. The path to
                              the file holding the client-side TLS certificate to
                              use. Should be empty if mode is `ISTIO_MUTUAL`.
                            type: string
                          mode:
                            description: 'REQUIRED: Indicates whether connections
                              to this port should be secured using TLS. The value
                              of this field determines how TLS is enforced.'
                            type: string
                          privateKey:
                            description: REQUIRED if mode is `MUTUAL`. The path to
                              the file holding the client's private key. Should be
                              empty if mode is `ISTIO_MUTUAL`.
                            type: string
                          sni:
                            description: SNI string to present to the server during
                              TLS handshake. Should be empty if mode is `ISTIO_MUTUAL`.
                            type: string
                          subjectAltNames:
                            description: A list of alternate names to verify the subject
                              identity in the certificate. If specified, the proxy
                              will verify that the server certificate's subject alt
                              name matches one of the specified values. Should be
                              empty if mode is `ISTIO_MUTUAL`.
                            items:
                              type: string
                            type: array
                        required:
                        - mode
                        type: object
                    type: object
                required:
                - name
                - labels
                type: object
              type: array
            trafficPolicy:
              description: Traffic policies to apply (load balancing policy, connection
                pool sizes, outlier detection).
              properties:
                connectionPool:
                  description: Settings controlling the volume of connections to an
                    upstream service
                  properties:
                    http:
                      description: HTTP connection pool settings.
                      properties:
                        maxRequestsPerConnection:
                          description: Maximum number of requests per connection to
                            a backend. Setting this parameter to 1 disables keep alive.
                          format: int32
                          type: integer
                        maxRetries:
                          description: Maximum number of retries that can be outstanding
                            to all hosts in a cluster at a given time. Defaults to
                            3.
                          format: int32
                          type: integer
                      type: object
                    tcp:
                      description: Settings common to both HTTP and TCP upstream connections.
                      properties:
                        connectTimeout:
                          description: TCP connection timeout.
                          type: string
                        maxConnections:
                          description: Maximum number of HTTP1 /TCP connections to
                            a destination host.
                          format: int32
                          type: integer
                      type: object
                  type: object
                loadBalancer:
                  description: Settings controlling the load balancer algorithms.
                  properties:
                    consistentHash:
                      properties:
                        httpCookie:
                          description: Hash based on HTTP cookie.
                          properties:
                            name:
                              description: REQUIRED. Name of the cookie.
                              type: string
                            path:
                              description: Path to set for the cookie.
                              type: string
                            ttl:
                              description: REQUIRED. Lifetime of the cookie.
                              type: string
                          required:
                          - name
                          - ttl
                          type: object
                        httpHeaderName:
                          description: 'It is required to specify exactly one of the
                            fields as hash key: HttpHeaderName, HttpCookie, or UseSourceIP.
                            Hash based on a specific HTTP header.'
                          type: string
                        minimumRingSize:
                          description: The minimum number of virtual nodes to use
                            for the hash ring. Defaults to 1024. Larger ring sizes
                            result in more granular load distributions. If the number
                            of hosts in the load balancing pool is larger than the
                            ring size, each host will be assigned a single virtual
                            node.
                          format: int64
                          type: integer
                        useSourceIp:
                          description: Hash based on the source IP address.
                          type: boolean
                      type: object
                    simple:
                      description: 'It is required to specify exactly one of the fields:
                        Simple or ConsistentHash'
                      type: string
                  type: object
                outlierDetection:
                  description: Settings controlling eviction of unhealthy hosts from
                    the load balancing pool
                  properties:
                    baseEjectionTime:
                      description: 'Minimum ejection duration. A host will remain
                        ejected for a period equal to the product of minimum ejection
                        duration and the number of times the host has been ejected.
                        This technique allows the system to automatically increase
                        the ejection period for unhealthy upstream servers. format:
                        1h/1m/1s/1ms. MUST BE >=1ms. Default is 30s.'
                      type: string
                    consecutiveErrors:
                      description: Number of errors before a host is ejected from
                        the connection pool. Defaults to 5. When the upstream host
                        is accessed over HTTP, a 5xx return code qualifies as an error.
                        When the upstream host is accessed over an opaque TCP connection,
                        connect timeouts and connection error/failure events qualify
                        as an error.
                      format: int32
                      type: integer
                    interval:
                      description: 'Time interval between ejection sweep analysis.
                        format: 1h/1m/1s/1ms. MUST BE >=1ms. Default is 10s.'
                      type: string
                    maxEjectionPercent:
                      description: Maximum % of hosts in the load balancing pool for
                        the upstream service that can be ejected. Defaults to 10%.
                      format: int32
                      type: integer
                  type: object
                portLevelSettings:
                  description: Traffic policies specific to individual ports. Note
                    that port level settings will override the destination-level settings.
                    Traffic settings specified at the destination-level will not be
                    inherited when overridden by port-level settings, i.e. default
                    values will be applied to fields omitted in port-level traffic
                    policies.
                  items:
                    properties:
                      connectionPool:
                        description: Settings controlling the volume of connections
                          to an upstream service
                        properties:
                          http:
                            description: HTTP connection pool settings.
                            properties:
                              maxRequestsPerConnection:
                                description: Maximum number of requests per connection
                                  to a backend. Setting this parameter to 1 disables
                                  keep alive.
                                format: int32
                                type: integer
                              maxRetries:
                                description: Maximum number of retries that can be
                                  outstanding to all hosts in a cluster at a given
                                  time. Defaults to 3.
                                format: int32
                                type: integer
                            type: object
                          tcp:
                            description: Settings common to both HTTP and TCP upstream
                              connections.
                            properties:
                              connectTimeout:
                                description: TCP connection timeout.
                                type: string
                              maxConnections:
                                description: Maximum number of HTTP1 /TCP connections
                                  to a destination host.
                                format: int32
                                type: integer
                            type: object
                        type: object
                      loadBalancer:
                        description: Settings controlling the load balancer algorithms.
                        properties:
                          consistentHash:
                            properties:
                              httpCookie:
                                description: Hash based on HTTP cookie.
                                properties:
                                  name:
                                    description: REQUIRED. Name of the cookie.
                                    type: string
                                  path:
                                    description: Path to set for the cookie.
                                    type: string
                                  ttl:
                                    description: REQUIRED. Lifetime of the cookie.
                                    type: string
                                required:
                                - name
                                - ttl
                                type: object
                              httpHeaderName:
                                description: 'It is required to specify exactly one
                                  of the fields as hash key: HttpHeaderName, HttpCookie,
                                  or UseSourceIP. Hash based on a specific HTTP header.'
                                type: string
                              minimumRingSize:
                                description: The minimum number of virtual nodes to
                                  use for the hash ring. Defaults to 1024. Larger
                                  ring sizes result in more granular load distributions.
                                  If the number of hosts in the load balancing pool
                                  is larger than the ring size, each host will be
                                  assigned a single virtual node.
                                format: int64
                                type: integer
                              useSourceIp:
                                description: Hash based on the source IP address.
                                type: boolean
                            type: object
                          simple:
                            description: 'It is required to specify exactly one of
                              the fields: Simple or ConsistentHash'
                            type: string
                        type: object
                      outlierDetection:
                        description: Settings controlling eviction of unhealthy hosts
                          from the load balancing pool
                        properties:
                          baseEjectionTime:
                            description: 'Minimum ejection duration. A host will remain
                              ejected for a period equal to the product of minimum
                              ejection duration and the number of times the host has
                              been ejected. This technique allows the system to automatically
                              increase the ejection period for unhealthy upstream
                              servers. format: 1h/1m/1s/1ms. MUST BE >=1ms. Default
                              is 30s.'
                            type: string
                          consecutiveErrors:
                            description: Number of errors before a host is ejected
                              from the connection pool. Defaults to 5. When the upstream
                              host is accessed over HTTP, a 5xx return code qualifies
                              as an error. When the upstream host is accessed over
                              an opaque TCP connection, connect timeouts and connection
                              error/failure events qualify as an error.
                            format: int32
                            type: integer
                          interval:
                            description: 'Time interval between ejection sweep analysis.
                              format: 1h/1m/1s/1ms. MUST BE >=1ms. Default is 10s.'
                            type: string
                          maxEjectionPercent:
                            description: Maximum % of hosts in the load balancing
                              pool for the upstream service that can be ejected. Defaults
                              to 10%.
                            format: int32
                            type: integer
                        type: object
                      port:
                        description: Specifies the port name or number of a port on
                          the destination service on which this policy is being applied.  Names
                          must comply with DNS label syntax (rfc1035) and therefore
                          cannot collide with numbers. If there are multiple ports
                          on a service with the same protocol the names should be
                          of the form <protocol-name>-<DNS label>.
                        properties:
                          name:
                            description: Valid port name
                            type: string
                          number:
                            description: Valid port number
                            format: int32
                            type: integer
                        type: object
                      tls:
                        description: TLS related settings for connections to the upstream
                          service.
                        properties:
                          caCertificates:
                            description: 'OPTIONAL: The path to the file containing
                              certificate authority certificates to use in verifying
                              a presented server certificate. If omitted, the proxy
                              will not verify the server''s certificate. Should be
                              empty if mode is `ISTIO_MUTUAL`.'
                            type: string
                          clientCertificate:
                            description: REQUIRED if mode is `MUTUAL`. The path to
                              the file holding the client-side TLS certificate to
                              use. Should be empty if mode is `ISTIO_MUTUAL`.
                            type: string
                          mode:
                            description: 'REQUIRED: Indicates whether connections
                              to this port should be secured using TLS. The value
                              of this field determines how TLS is enforced.'
                            type: string
                          privateKey:
                            description: REQUIRED if mode is `MUTUAL`. The path to
                              the file holding the client's private key. Should be
                              empty if mode is `ISTIO_MUTUAL`.
                            type: string
                          sni:
                            description: SNI string to present to the server during
                              TLS handshake. Should be empty if mode is `ISTIO_MUTUAL`.
                            type: string
                          subjectAltNames:
                            description: A list of alternate names to verify the subject
                              identity in the certificate. If specified, the proxy
                              will verify that the server certificate's subject alt
                              name matches one of the specified values. Should be
                              empty if mode is `ISTIO_MUTUAL`.
                            items:
                              type: string
                            type: array
                        required:
                        - mode
                        type: object
                    required:
                    - port
                    type: object
                  type: array
                tls:
                  description: TLS related settings for connections to the upstream
                    service.
                  properties:
                    caCertificates:
                      description: 'OPTIONAL: The path to the file containing certificate
                        authority certificates to use in verifying a presented server
                        certificate. If omitted, the proxy will not verify the server''s
                        certificate. Should be empty if mode is `ISTIO_MUTUAL`.'
                      type: string
                    clientCertificate:
                      description: REQUIRED if mode is `MUTUAL`. The path to the file
                        holding the client-side TLS certificate to use. Should be
                        empty if mode is `ISTIO_MUTUAL`.
                      type: string
                    mode:
                      description: 'REQUIRED: Indicates whether connections to this
                        port should be secured using TLS. The value of this field
                        determines how TLS is enforced.'
                      type: string
                    privateKey:
                      description: REQUIRED if mode is `MUTUAL`. The path to the file
                        holding the client's private key. Should be empty if mode
                        is `ISTIO_MUTUAL`.
                      type: string
                    sni:
                      description: SNI string to present to the server during TLS
                        handshake. Should be empty if mode is `ISTIO_MUTUAL`.
                      type: string
                    subjectAltNames:
                      description: A list of alternate names to verify the subject
                        identity in the certificate. If specified, the proxy will
                        verify that the server certificate's subject alt name matches
                        one of the specified values. Should be empty if mode is `ISTIO_MUTUAL`.
                      items:
                        type: string
                      type: array
                  required:
                  - mode
                  type: object
              type: object
          required:
          - host
          type: object
      required:
      - spec
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:07Z"
  generation: 1
  name: disks.openebs.io
  resourceVersion: "1008"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/disks.openebs.io
  uid: 11ce5c2b-1062-4dbc-a71f-ab57ea1d9dc6
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.capacity.storage
    name: Size
    type: string
  - JSONPath: .status.state
    name: State
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  conversion:
    strategy: None
  group: openebs.io
  names:
    kind: Disk
    listKind: DiskList
    plural: disks
    shortNames:
    - disk
    singular: disk
  preserveUnknownFields: true
  scope: Cluster
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:56Z"
  generation: 1
  labels:
    app: fluentbit-operator
    chart: fluentbit-operator-0.1.0
    heritage: Tiller
    release: logging-fluentbit-operator
  name: fluentbits.logging.kubesphere.io
  resourceVersion: "1232"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/fluentbits.logging.kubesphere.io
  uid: c466ec39-08d1-44f7-bfe4-e48bb5a0915f
spec:
  conversion:
    strategy: None
  group: logging.kubesphere.io
  names:
    kind: FluentBit
    listKind: FluentBitList
    plural: fluentbits
    singular: fluentbit
  preserveUnknownFields: true
  scope: Namespaced
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:41:41Z"
  generation: 2
  name: prometheuses.monitoring.coreos.com
  resourceVersion: "1892"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/prometheuses.monitoring.coreos.com
  uid: 7c1424d4-f53a-4b5d-96f7-36650f7b281f
spec:
  conversion:
    strategy: None
  group: monitoring.coreos.com
  names:
    kind: Prometheus
    listKind: PrometheusList
    plural: prometheuses
    singular: prometheus
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        spec:
          description: 'PrometheusSpec is a specification of the desired behavior
            of the Prometheus cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
          properties:
            additionalAlertManagerConfigs:
              description: SecretKeySelector selects a key of a Secret.
              properties:
                key:
                  description: The key of the secret to select from.  Must be a valid
                    secret key.
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                optional:
                  description: Specify whether the Secret or it's key must be defined
                  type: boolean
              required:
              - key
              type: object
            additionalAlertRelabelConfigs:
              description: SecretKeySelector selects a key of a Secret.
              properties:
                key:
                  description: The key of the secret to select from.  Must be a valid
                    secret key.
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                optional:
                  description: Specify whether the Secret or it's key must be defined
                  type: boolean
              required:
              - key
              type: object
            additionalScrapeConfigs:
              description: SecretKeySelector selects a key of a Secret.
              properties:
                key:
                  description: The key of the secret to select from.  Must be a valid
                    secret key.
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                optional:
                  description: Specify whether the Secret or it's key must be defined
                  type: boolean
              required:
              - key
              type: object
            affinity:
              description: Affinity is a group of affinity scheduling rules.
              properties:
                nodeAffinity:
                  description: Node affinity is a group of node affinity scheduling
                    rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the affinity expressions specified by this field,
                        but it may choose a node that violates one or more of the
                        expressions. The node that is most preferred is the one with
                        the greatest sum of weights, i.e. for each node that meets
                        all of the scheduling requirements (resource request, requiredDuringScheduling
                        affinity expressions, etc.), compute a sum by iterating through
                        the elements of this field and adding "weight" to the sum
                        if the node matches the corresponding matchExpressions; the
                        node(s) with the highest sum are the most preferred.
                      items:
                        description: An empty preferred scheduling term matches all
                          objects with implicit weight 0 (i.e. it's a no-op). A null
                          preferred scheduling term matches no objects (i.e. is also
                          a no-op).
                        properties:
                          preference:
                            description: A null or empty node selector term matches
                              no objects. The requirements of them are ANDed. The
                              TopologySelectorTerm type implements a subset of the
                              NodeSelectorTerm.
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements
                                  by node's labels.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchFields:
                                description: A list of node selector requirements
                                  by node's fields.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          weight:
                            description: Weight associated with matching the corresponding
                              nodeSelectorTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - preference
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: A node selector represents the union of the results
                        of one or more label queries over a set of nodes; that is,
                        it represents the OR of the selectors represented by the node
                        selector terms.
                      properties:
                        nodeSelectorTerms:
                          description: Required. A list of node selector terms. The
                            terms are ORed.
                          items:
                            description: A null or empty node selector term matches
                              no objects. The requirements of them are ANDed. The
                              TopologySelectorTerm type implements a subset of the
                              NodeSelectorTerm.
                            properties:
                              matchExpressions:
                                description: A list of node selector requirements
                                  by node's labels.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchFields:
                                description: A list of node selector requirements
                                  by node's fields.
                                items:
                                  description: A node selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: The label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: Represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists, DoesNotExist. Gt, and Lt.
                                      type: string
                                    values:
                                      description: An array of string values. If the
                                        operator is In or NotIn, the values array
                                        must be non-empty. If the operator is Exists
                                        or DoesNotExist, the values array must be
                                        empty. If the operator is Gt or Lt, the values
                                        array must have a single element, which will
                                        be interpreted as an integer. This array is
                                        replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                            type: object
                          type: array
                      required:
                      - nodeSelectorTerms
                      type: object
                  type: object
                podAffinity:
                  description: Pod affinity is a group of inter pod affinity scheduling
                    rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the affinity expressions specified by this field,
                        but it may choose a node that violates one or more of the
                        expressions. The node that is most preferred is the one with
                        the greatest sum of weights, i.e. for each node that meets
                        all of the scheduling requirements (resource request, requiredDuringScheduling
                        affinity expressions, etc.), compute a sum by iterating through
                        the elements of this field and adding "weight" to the sum
                        if the node has pods which matches the corresponding podAffinityTerm;
                        the node(s) with the highest sum are the most preferred.
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm
                          fields are added per-node to find the most preferred node(s)
                        properties:
                          podAffinityTerm:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          weight:
                            description: weight associated with matching the corresponding
                              podAffinityTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - podAffinityTerm
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: If the affinity requirements specified by this
                        field are not met at scheduling time, the pod will not be
                        scheduled onto the node. If the affinity requirements specified
                        by this field cease to be met at some point during pod execution
                        (e.g. due to a pod label update), the system may or may not
                        try to eventually evict the pod from its node. When there
                        are multiple elements, the lists of nodes corresponding to
                        each podAffinityTerm are intersected, i.e. all terms must
                        be satisfied.
                      items:
                        description: Defines a set of pods (namely those matching
                          the labelSelector relative to the given namespace(s)) that
                          this pod should be co-located (affinity) or not co-located
                          (anti-affinity) with, where co-located is defined as running
                          on a node whose value of the label with key <topologyKey>
                          matches that of any node on which a pod of the set of pods
                          is running
                        properties:
                          labelSelector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          namespaces:
                            description: namespaces specifies which namespaces the
                              labelSelector applies to (matches against); null or
                              empty list means "this pod's namespace"
                            items:
                              type: string
                            type: array
                          topologyKey:
                            description: This pod should be co-located (affinity)
                              or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where
                              co-located is defined as running on a node whose value
                              of the label with key topologyKey matches that of any
                              node on which any of the selected pods is running. Empty
                              topologyKey is not allowed.
                            type: string
                        required:
                        - topologyKey
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  description: Pod anti affinity is a group of inter pod anti affinity
                    scheduling rules.
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      description: The scheduler will prefer to schedule pods to nodes
                        that satisfy the anti-affinity expressions specified by this
                        field, but it may choose a node that violates one or more
                        of the expressions. The node that is most preferred is the
                        one with the greatest sum of weights, i.e. for each node that
                        meets all of the scheduling requirements (resource request,
                        requiredDuringScheduling anti-affinity expressions, etc.),
                        compute a sum by iterating through the elements of this field
                        and adding "weight" to the sum if the node has pods which
                        matches the corresponding podAffinityTerm; the node(s) with
                        the highest sum are the most preferred.
                      items:
                        description: The weights of all of the matched WeightedPodAffinityTerm
                          fields are added per-node to find the most preferred node(s)
                        properties:
                          podAffinityTerm:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          weight:
                            description: weight associated with matching the corresponding
                              podAffinityTerm, in the range 1-100.
                            format: int32
                            type: integer
                        required:
                        - weight
                        - podAffinityTerm
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      description: If the anti-affinity requirements specified by
                        this field are not met at scheduling time, the pod will not
                        be scheduled onto the node. If the anti-affinity requirements
                        specified by this field cease to be met at some point during
                        pod execution (e.g. due to a pod label update), the system
                        may or may not try to eventually evict the pod from its node.
                        When there are multiple elements, the lists of nodes corresponding
                        to each podAffinityTerm are intersected, i.e. all terms must
                        be satisfied.
                      items:
                        description: Defines a set of pods (namely those matching
                          the labelSelector relative to the given namespace(s)) that
                          this pod should be co-located (affinity) or not co-located
                          (anti-affinity) with, where co-located is defined as running
                          on a node whose value of the label with key <topologyKey>
                          matches that of any node on which a pod of the set of pods
                          is running
                        properties:
                          labelSelector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          namespaces:
                            description: namespaces specifies which namespaces the
                              labelSelector applies to (matches against); null or
                              empty list means "this pod's namespace"
                            items:
                              type: string
                            type: array
                          topologyKey:
                            description: This pod should be co-located (affinity)
                              or not co-located (anti-affinity) with the pods matching
                              the labelSelector in the specified namespaces, where
                              co-located is defined as running on a node whose value
                              of the label with key topologyKey matches that of any
                              node on which any of the selected pods is running. Empty
                              topologyKey is not allowed.
                            type: string
                        required:
                        - topologyKey
                        type: object
                      type: array
                  type: object
              type: object
            alerting:
              description: AlertingSpec defines parameters for alerting configuration
                of Prometheus servers.
              properties:
                alertmanagers:
                  description: AlertmanagerEndpoints Prometheus should fire alerts
                    against.
                  items:
                    description: AlertmanagerEndpoints defines a selection of a single
                      Endpoints object containing alertmanager IPs to fire alerts
                      against.
                    properties:
                      bearerTokenFile:
                        description: BearerTokenFile to read from filesystem to use
                          when authenticating to Alertmanager.
                        type: string
                      name:
                        description: Name of Endpoints object in Namespace.
                        type: string
                      namespace:
                        description: Namespace of Endpoints object.
                        type: string
                      pathPrefix:
                        description: Prefix for the HTTP path alerts are pushed to.
                        type: string
                      port:
                        anyOf:
                        - type: string
                        - type: integer
                      scheme:
                        description: Scheme to use when firing alerts.
                        type: string
                      tlsConfig:
                        description: TLSConfig specifies TLS configuration parameters.
                        properties:
                          caFile:
                            description: The CA cert to use for the targets.
                            type: string
                          certFile:
                            description: The client cert file for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: The client key file for the targets.
                            type: string
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                    required:
                    - namespace
                    - name
                    - port
                    type: object
                  type: array
              required:
              - alertmanagers
              type: object
            apiserverConfig:
              description: 'APIServerConfig defines a host and auth methods to access
                apiserver. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config'
              properties:
                basicAuth:
                  description: 'BasicAuth allow an endpoint to authenticate over basic
                    authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                  properties:
                    password:
                      description: SecretKeySelector selects a key of a Secret.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        optional:
                          description: Specify whether the Secret or it's key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    username:
                      description: SecretKeySelector selects a key of a Secret.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        optional:
                          description: Specify whether the Secret or it's key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                  type: object
                bearerToken:
                  description: Bearer token for accessing apiserver.
                  type: string
                bearerTokenFile:
                  description: File to read bearer token for accessing apiserver.
                  type: string
                host:
                  description: Host of apiserver. A valid string consisting of a hostname
                    or IP followed by an optional port number
                  type: string
                tlsConfig:
                  description: TLSConfig specifies TLS configuration parameters.
                  properties:
                    caFile:
                      description: The CA cert to use for the targets.
                      type: string
                    certFile:
                      description: The client cert file for the targets.
                      type: string
                    insecureSkipVerify:
                      description: Disable target certificate validation.
                      type: boolean
                    keyFile:
                      description: The client key file for the targets.
                      type: string
                    serverName:
                      description: Used to verify the hostname for the targets.
                      type: string
                  type: object
              required:
              - host
              type: object
            baseImage:
              description: Base image to use for a Prometheus deployment.
              type: string
            configMaps:
              description: ConfigMaps is a list of ConfigMaps in the same namespace
                as the Prometheus object, which shall be mounted into the Prometheus
                Pods. The ConfigMaps are mounted into /etc/prometheus/configmaps/<configmap-name>.
              items:
                type: string
              type: array
            containers:
              description: Containers allows injecting additional containers. This
                is meant to allow adding an authentication proxy to a Prometheus pod.
              items:
                description: A single application container that you want to run within
                  a pod.
                properties:
                  args:
                    description: 'Arguments to the entrypoint. The docker image''s
                      CMD is used if this is not provided. Variable references $(VAR_NAME)
                      are expanded using the container''s environment. If a variable
                      cannot be resolved, the reference in the input string will be
                      unchanged. The $(VAR_NAME) syntax can be escaped with a double
                      $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
                      regardless of whether the variable exists or not. Cannot be
                      updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                    items:
                      type: string
                    type: array
                  command:
                    description: 'Entrypoint array. Not executed within a shell. The
                      docker image''s ENTRYPOINT is used if this is not provided.
                      Variable references $(VAR_NAME) are expanded using the container''s
                      environment. If a variable cannot be resolved, the reference
                      in the input string will be unchanged. The $(VAR_NAME) syntax
                      can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                      will never be expanded, regardless of whether the variable exists
                      or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                    items:
                      type: string
                    type: array
                  env:
                    description: List of environment variables to set in the container.
                      Cannot be updated.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previous defined environment variables in the
                            container and any service environment variables. If a
                            variable cannot be resolved, the reference in the input
                            string will be unchanged. The $(VAR_NAME) syntax can be
                            escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                            will never be expanded, regardless of whether the variable
                            exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: EnvVarSource represents a source for the value
                            of an EnvVar.
                          properties:
                            configMapKeyRef:
                              description: Selects a key from a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or it's
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                            fieldRef:
                              description: ObjectFieldSelector selects an APIVersioned
                                field of an object.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                            resourceFieldRef:
                              description: ResourceFieldSelector represents container
                                resources (cpu, memory) and their output format
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor: {}
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  envFrom:
                    description: List of sources to populate environment variables
                      in the container. The keys defined within a source must be a
                      C_IDENTIFIER. All invalid keys will be reported as an event
                      when the container is starting. When a key exists in multiple
                      sources, the value associated with the last source will take
                      precedence. Values defined by an Env with a duplicate key will
                      take precedence. Cannot be updated.
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps
                      properties:
                        configMapRef:
                          description: |-
                            ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

                            The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                          type: object
                        prefix:
                          description: An optional identifier to prepend to each key
                            in the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: |-
                            SecretEnvSource selects a Secret to populate the environment variables with.

                            The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                          type: object
                      type: object
                    type: array
                  image:
                    description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                      This field is optional to allow higher level config management
                      to default or override container images in workload controllers
                      like Deployments and StatefulSets.'
                    type: string
                  imagePullPolicy:
                    description: 'Image pull policy. One of Always, Never, IfNotPresent.
                      Defaults to Always if :latest tag is specified, or IfNotPresent
                      otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                    type: string
                  lifecycle:
                    description: Lifecycle describes actions that the management system
                      should take in response to container lifecycle events. For the
                      PostStart and PreStop lifecycle handlers, management of the
                      container blocks until the action is complete, unless the container
                      process fails, in which case the handler is aborted.
                    properties:
                      postStart:
                        description: Handler defines a specific action that should
                          be taken
                        properties:
                          exec:
                            description: ExecAction describes a "run in container"
                              action.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          httpGet:
                            description: HTTPGetAction describes an action based on
                              HTTP Get requests.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: string
                                - type: integer
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          tcpSocket:
                            description: TCPSocketAction describes an action based
                              on opening a socket
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: string
                                - type: integer
                            required:
                            - port
                            type: object
                        type: object
                      preStop:
                        description: Handler defines a specific action that should
                          be taken
                        properties:
                          exec:
                            description: ExecAction describes a "run in container"
                              action.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          httpGet:
                            description: HTTPGetAction describes an action based on
                              HTTP Get requests.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: string
                                - type: integer
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          tcpSocket:
                            description: TCPSocketAction describes an action based
                              on opening a socket
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: string
                                - type: integer
                            required:
                            - port
                            type: object
                        type: object
                    type: object
                  livenessProbe:
                    description: Probe describes a health check to be performed against
                      a container to determine whether it is alive or ready to receive
                      traffic.
                    properties:
                      exec:
                        description: ExecAction describes a "run in container" action.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      httpGet:
                        description: HTTPGetAction describes an action based on HTTP
                          Get requests.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness. Minimum value is 1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocketAction describes an action based on
                          opening a socket
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                        required:
                        - port
                        type: object
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  name:
                    description: Name of the container specified as a DNS_LABEL. Each
                      container in a pod must have a unique name (DNS_LABEL). Cannot
                      be updated.
                    type: string
                  ports:
                    description: List of ports to expose from the container. Exposing
                      a port here gives the system additional information about the
                      network connections a container uses, but is primarily informational.
                      Not specifying a port here DOES NOT prevent that port from being
                      exposed. Any port which is listening on the default "0.0.0.0"
                      address inside a container will be accessible from the network.
                      Cannot be updated.
                    items:
                      description: ContainerPort represents a network port in a single
                        container.
                      properties:
                        containerPort:
                          description: Number of port to expose on the pod's IP address.
                            This must be a valid port number, 0 < x < 65536.
                          format: int32
                          type: integer
                        hostIP:
                          description: What host IP to bind the external port to.
                          type: string
                        hostPort:
                          description: Number of port to expose on the host. If specified,
                            this must be a valid port number, 0 < x < 65536. If HostNetwork
                            is specified, this must match ContainerPort. Most containers
                            do not need this.
                          format: int32
                          type: integer
                        name:
                          description: If specified, this must be an IANA_SVC_NAME
                            and unique within the pod. Each named port in a pod must
                            have a unique name. Name for the port that can be referred
                            to by services.
                          type: string
                        protocol:
                          description: Protocol for port. Must be UDP, TCP, or SCTP.
                            Defaults to "TCP".
                          type: string
                      required:
                      - containerPort
                      type: object
                    type: array
                  readinessProbe:
                    description: Probe describes a health check to be performed against
                      a container to determine whether it is alive or ready to receive
                      traffic.
                    properties:
                      exec:
                        description: ExecAction describes a "run in container" action.
                        properties:
                          command:
                            description: Command is the command line to execute inside
                              the container, the working directory for the command  is
                              root ('/') in the container's filesystem. The command
                              is simply exec'd, it is not run inside a shell, so traditional
                              shell instructions ('|', etc) won't work. To use a shell,
                              you need to explicitly call out to that shell. Exit
                              status of 0 is treated as live/healthy and non-zero
                              is unhealthy.
                            items:
                              type: string
                            type: array
                        type: object
                      failureThreshold:
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        type: integer
                      httpGet:
                        description: HTTPGetAction describes an action based on HTTP
                          Get requests.
                        properties:
                          host:
                            description: Host name to connect to, defaults to the
                              pod IP. You probably want to set "Host" in httpHeaders
                              instead.
                            type: string
                          httpHeaders:
                            description: Custom headers to set in the request. HTTP
                              allows repeated headers.
                            items:
                              description: HTTPHeader describes a custom header to
                                be used in HTTP probes
                              properties:
                                name:
                                  description: The header field name
                                  type: string
                                value:
                                  description: The header field value
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          path:
                            description: Path to access on the HTTP server.
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                          scheme:
                            description: Scheme to use for connecting to the host.
                              Defaults to HTTP.
                            type: string
                        required:
                        - port
                        type: object
                      initialDelaySeconds:
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        type: integer
                      successThreshold:
                        description: Minimum consecutive successes for the probe to
                          be considered successful after having failed. Defaults to
                          1. Must be 1 for liveness. Minimum value is 1.
                        format: int32
                        type: integer
                      tcpSocket:
                        description: TCPSocketAction describes an action based on
                          opening a socket
                        properties:
                          host:
                            description: 'Optional: Host name to connect to, defaults
                              to the pod IP.'
                            type: string
                          port:
                            anyOf:
                            - type: string
                            - type: integer
                        required:
                        - port
                        type: object
                      timeoutSeconds:
                        description: 'Number of seconds after which the probe times
                          out. Defaults to 1 second. Minimum value is 1. More info:
                          https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                    type: object
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                  securityContext:
                    description: SecurityContext holds security configuration that
                      will be applied to a container. Some fields are present in both
                      SecurityContext and PodSecurityContext.  When both are set,
                      the values in SecurityContext take precedence.
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN'
                        type: boolean
                      capabilities:
                        description: Adds and removes POSIX capabilities from running
                          containers.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: SELinuxOptions are the labels to be applied to
                          the container
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                    type: object
                  stdin:
                    description: Whether this container should allocate a buffer for
                      stdin in the container runtime. If this is not set, reads from
                      stdin in the container will always result in EOF. Default is
                      false.
                    type: boolean
                  stdinOnce:
                    description: Whether the container runtime should close the stdin
                      channel after it has been opened by a single attach. When stdin
                      is true the stdin stream will remain open across multiple attach
                      sessions. If stdinOnce is set to true, stdin is opened on container
                      start, is empty until the first client attaches to stdin, and
                      then remains open and accepts data until the client disconnects,
                      at which time stdin is closed and remains closed until the container
                      is restarted. If this flag is false, a container processes that
                      reads from stdin will never receive an EOF. Default is false
                    type: boolean
                  terminationMessagePath:
                    description: 'Optional: Path at which the file to which the container''s
                      termination message will be written is mounted into the container''s
                      filesystem. Message written is intended to be brief final status,
                      such as an assertion failure message. Will be truncated by the
                      node if greater than 4096 bytes. The total message length across
                      all containers will be limited to 12kb. Defaults to /dev/termination-log.
                      Cannot be updated.'
                    type: string
                  terminationMessagePolicy:
                    description: Indicate how the termination message should be populated.
                      File will use the contents of terminationMessagePath to populate
                      the container status message on both success and failure. FallbackToLogsOnError
                      will use the last chunk of container log output if the termination
                      message file is empty and the container exited with an error.
                      The log output is limited to 2048 bytes or 80 lines, whichever
                      is smaller. Defaults to File. Cannot be updated.
                    type: string
                  tty:
                    description: Whether this container should allocate a TTY for
                      itself, also requires 'stdin' to be true. Default is false.
                    type: boolean
                  volumeDevices:
                    description: volumeDevices is the list of block devices to be
                      used by the container. This is an alpha feature and may change
                      in the future.
                    items:
                      description: volumeDevice describes a mapping of a raw block
                        device within a container.
                      properties:
                        devicePath:
                          description: devicePath is the path inside of the container
                            that the device will be mapped to.
                          type: string
                        name:
                          description: name must match the name of a persistentVolumeClaim
                            in the pod
                          type: string
                      required:
                      - name
                      - devicePath
                      type: object
                    type: array
                  volumeMounts:
                    description: Pod volumes to mount into the container's filesystem.
                      Cannot be updated.
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: Path within the container at which the volume
                            should be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are
                            propagated from the host to container and the other way
                            around. When not set, MountPropagationNone is used. This
                            field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise
                            (false or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's
                            volume should be mounted. Defaults to "" (volume's root).
                          type: string
                      required:
                      - name
                      - mountPath
                      type: object
                    type: array
                  workingDir:
                    description: Container's working directory. If not specified,
                      the container runtime's default will be used, which might be
                      configured in the container image. Cannot be updated.
                    type: string
                required:
                - name
                type: object
              type: array
            evaluationInterval:
              description: Interval between consecutive evaluations.
              type: string
            externalLabels:
              description: The labels to add to any time series or alerts when communicating
                with external systems (federation, remote storage, Alertmanager).
              type: object
            externalUrl:
              description: The external URL the Prometheus instances will be available
                under. This is necessary to generate correct URLs. This is necessary
                if Prometheus is not served from root of a DNS name.
              type: string
            image:
              description: Image if specified has precedence over baseImage, tag and
                sha combinations. Specifying the version is still necessary to ensure
                the Prometheus Operator knows what version of Prometheus is being
                configured.
              type: string
            imagePullSecrets:
              description: An optional list of references to secrets in the same namespace
                to use for pulling prometheus and alertmanager images from registries
                see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
              items:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                type: object
              type: array
            listenLocal:
              description: ListenLocal makes the Prometheus server listen on loopback,
                so that it does not bind against the Pod IP.
              type: boolean
            logLevel:
              description: Log level for Prometheus to be configured with.
              type: string
            nodeSelector:
              description: Define which Nodes the Pods are scheduled on.
              type: object
            paused:
              description: When a Prometheus deployment is paused, no actions except
                for deletion will be performed on the underlying objects.
              type: boolean
            podMetadata:
              description: ObjectMeta is metadata that all persisted resources must
                have, which includes all objects users must create.
              properties:
                annotations:
                  description: 'Annotations is an unstructured key value map stored
                    with a resource that may be set by external tools to store and
                    retrieve arbitrary metadata. They are not queryable and should
                    be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                  type: object
                clusterName:
                  description: The name of the cluster which the object belongs to.
                    This is used to distinguish resources with same name and namespace
                    in different clusters. This field is not set anywhere right now
                    and apiserver is going to ignore it if set in create or update
                    request.
                  type: string
                creationTimestamp:
                  description: Time is a wrapper around time.Time which supports correct
                    marshaling to YAML and JSON.  Wrappers are provided for many of
                    the factory methods that the time package offers.
                  format: date-time
                  type: string
                deletionGracePeriodSeconds:
                  description: Number of seconds allowed for this object to gracefully
                    terminate before it will be removed from the system. Only set
                    when deletionTimestamp is also set. May only be shortened. Read-only.
                  format: int64
                  type: integer
                deletionTimestamp:
                  description: Time is a wrapper around time.Time which supports correct
                    marshaling to YAML and JSON.  Wrappers are provided for many of
                    the factory methods that the time package offers.
                  format: date-time
                  type: string
                finalizers:
                  description: Must be empty before the object is deleted from the
                    registry. Each entry is an identifier for the responsible component
                    that will remove the entry from the list. If the deletionTimestamp
                    of the object is non-nil, entries in this list can only be removed.
                  items:
                    type: string
                  type: array
                generateName:
                  description: |-
                    GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                    If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                    Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                  type: string
                generation:
                  description: A sequence number representing a specific generation
                    of the desired state. Populated by the system. Read-only.
                  format: int64
                  type: integer
                initializers:
                  description: Initializers tracks the progress of initialization.
                  properties:
                    pending:
                      description: Pending is a list of initializers that must execute
                        in order before this object is visible. When the last pending
                        initializer is removed, and no failing result is set, the
                        initializers struct will be set to nil and the object is considered
                        as initialized and visible to all clients.
                      items:
                        description: Initializer is information about an initializer
                          that has not yet completed.
                        properties:
                          name:
                            description: name of the process that is responsible for
                              initializing this object.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    result:
                      description: Status is a return value for calls that don't return
                        other objects.
                      properties:
                        apiVersion:
                          description: 'APIVersion defines the versioned schema of
                            this representation of an object. Servers should convert
                            recognized schemas to the latest internal value, and may
                            reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                          type: string
                        code:
                          description: Suggested HTTP return code for this status,
                            0 if not set.
                          format: int32
                          type: integer
                        details:
                          description: StatusDetails is a set of additional properties
                            that MAY be set by the server to provide additional information
                            about a response. The Reason field of a Status object
                            defines what attributes will be set. Clients must ignore
                            fields that do not match the defined type of each attribute,
                            and should assume that any attribute may be empty, invalid,
                            or under defined.
                          properties:
                            causes:
                              description: The Causes array includes more details
                                associated with the StatusReason failure. Not all
                                StatusReasons may provide detailed causes.
                              items:
                                description: StatusCause provides more information
                                  about an api.Status failure, including cases when
                                  multiple errors are encountered.
                                properties:
                                  field:
                                    description: |-
                                      The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                      Examples:
                                        "name" - the field "name" on the current resource
                                        "items[0].name" - the field "name" on the first array entry in "items"
                                    type: string
                                  message:
                                    description: A human-readable description of the
                                      cause of the error.  This field may be presented
                                      as-is to a reader.
                                    type: string
                                  reason:
                                    description: A machine-readable description of
                                      the cause of the error. If this value is empty
                                      there is no information available.
                                    type: string
                                type: object
                              type: array
                            group:
                              description: The group attribute of the resource associated
                                with the status StatusReason.
                              type: string
                            kind:
                              description: 'The kind attribute of the resource associated
                                with the status StatusReason. On some operations may
                                differ from the requested resource Kind. More info:
                                https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: The name attribute of the resource associated
                                with the status StatusReason (when there is a single
                                name which can be described).
                              type: string
                            retryAfterSeconds:
                              description: If specified, the time in seconds before
                                the operation should be retried. Some errors may indicate
                                the client must take an alternate action - for those
                                errors this field may indicate how long to wait before
                                taking the alternate action.
                              format: int32
                              type: integer
                            uid:
                              description: 'UID of the resource. (when there is a
                                single resource which can be described). More info:
                                http://kubernetes.io/docs/user-guide/identifiers#uids'
                              type: string
                          type: object
                        kind:
                          description: 'Kind is a string value representing the REST
                            resource this object represents. Servers may infer this
                            from the endpoint the client submits requests to. Cannot
                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        message:
                          description: A human-readable description of the status
                            of this operation.
                          type: string
                        metadata:
                          description: ListMeta describes metadata that synthetic
                            resources must have, including lists and various status
                            objects. A resource may have only one of {ObjectMeta,
                            ListMeta}.
                          properties:
                            continue:
                              description: continue may be set if the user set a limit
                                on the number of items returned, and indicates that
                                the server has more data available. The value is opaque
                                and may be used to issue another request to the endpoint
                                that served this list to retrieve the next set of
                                available objects. Continuing a consistent list may
                                not be possible if the server configuration has changed
                                or more than a few minutes have passed. The resourceVersion
                                field returned when using this continue value will
                                be identical to the value in the first response, unless
                                you have received this token from an error message.
                              type: string
                            resourceVersion:
                              description: 'String that identifies the server''s internal
                                version of this object that can be used by clients
                                to determine when objects have changed. Value must
                                be treated as opaque by clients and passed unmodified
                                back to the server. Populated by the system. Read-only.
                                More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            selfLink:
                              description: selfLink is a URL representing this object.
                                Populated by the system. Read-only.
                              type: string
                          type: object
                        reason:
                          description: A machine-readable description of why this
                            operation is in the "Failure" status. If this value is
                            empty there is no information available. A Reason clarifies
                            an HTTP status code but does not override it.
                          type: string
                        status:
                          description: 'Status of the operation. One of: "Success"
                            or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                          type: string
                      type: object
                  required:
                  - pending
                  type: object
                labels:
                  description: 'Map of string keys and values that can be used to
                    organize and categorize (scope and select) objects. May match
                    selectors of replication controllers and services. More info:
                    http://kubernetes.io/docs/user-guide/labels'
                  type: object
                name:
                  description: 'Name must be unique within a namespace. Is required
                    when creating resources, although some resources may allow a client
                    to request the generation of an appropriate name automatically.
                    Name is primarily intended for creation idempotence and configuration
                    definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
                namespace:
                  description: |-
                    Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                    Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                  type: string
                ownerReferences:
                  description: List of objects depended by this object. If ALL objects
                    in the list have been deleted, this object will be garbage collected.
                    If this object is managed by a controller, then an entry in this
                    list will point to this controller, with the controller field
                    set to true. There cannot be more than one managing controller.
                  items:
                    description: OwnerReference contains enough information to let
                      you identify an owning object. Currently, an owning object must
                      be in the same namespace, so there is no namespace field.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      blockOwnerDeletion:
                        description: If true, AND if the owner has the "foregroundDeletion"
                          finalizer, then the owner cannot be deleted from the key-value
                          store until this reference is removed. Defaults to false.
                          To set this field, a user needs "delete" permission of the
                          owner, otherwise 422 (Unprocessable Entity) will be returned.
                        type: boolean
                      controller:
                        description: If true, this reference points to the managing
                          controller.
                        type: boolean
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    - uid
                    type: object
                  type: array
                resourceVersion:
                  description: |-
                    An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                    Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                  type: string
                selfLink:
                  description: SelfLink is a URL representing this object. Populated
                    by the system. Read-only.
                  type: string
                uid:
                  description: |-
                    UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                    Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                  type: string
              type: object
            priorityClassName:
              description: Priority class assigned to the Pods
              type: string
            query:
              description: QuerySpec defines the query command line flags when starting
                Prometheus.
              properties:
                lookbackDelta:
                  description: The delta difference allowed for retrieving metrics
                    during expression evaluations.
                  type: string
                maxConcurrency:
                  description: Number of concurrent queries that can be run at once.
                  format: int32
                  type: integer
                timeout:
                  description: Maximum time a query may take before being aborted.
                  type: string
              type: object
            remoteRead:
              description: If specified, the remote_read spec. This is an experimental
                feature, it may change in any upcoming release in a breaking way.
              items:
                description: RemoteReadSpec defines the remote_read configuration
                  for prometheus.
                properties:
                  basicAuth:
                    description: 'BasicAuth allow an endpoint to authenticate over
                      basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                    properties:
                      password:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the Secret or it's key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      username:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the Secret or it's key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                  bearerToken:
                    description: bearer token for remote read.
                    type: string
                  bearerTokenFile:
                    description: File to read bearer token for remote read.
                    type: string
                  proxyUrl:
                    description: Optional ProxyURL
                    type: string
                  readRecent:
                    description: Whether reads should be made for queries for time
                      ranges that the local storage should have complete data for.
                    type: boolean
                  remoteTimeout:
                    description: Timeout for requests to the remote read endpoint.
                    type: string
                  requiredMatchers:
                    description: An optional list of equality matchers which have
                      to be present in a selector to query the remote read endpoint.
                    type: object
                  tlsConfig:
                    description: TLSConfig specifies TLS configuration parameters.
                    properties:
                      caFile:
                        description: The CA cert to use for the targets.
                        type: string
                      certFile:
                        description: The client cert file for the targets.
                        type: string
                      insecureSkipVerify:
                        description: Disable target certificate validation.
                        type: boolean
                      keyFile:
                        description: The client key file for the targets.
                        type: string
                      serverName:
                        description: Used to verify the hostname for the targets.
                        type: string
                    type: object
                  url:
                    description: The URL of the endpoint to send samples to.
                    type: string
                required:
                - url
                type: object
              type: array
            remoteWrite:
              description: If specified, the remote_write spec. This is an experimental
                feature, it may change in any upcoming release in a breaking way.
              items:
                description: RemoteWriteSpec defines the remote_write configuration
                  for prometheus.
                properties:
                  basicAuth:
                    description: 'BasicAuth allow an endpoint to authenticate over
                      basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                    properties:
                      password:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the Secret or it's key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      username:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the Secret or it's key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                  bearerToken:
                    description: File to read bearer token for remote write.
                    type: string
                  bearerTokenFile:
                    description: File to read bearer token for remote write.
                    type: string
                  proxyUrl:
                    description: Optional ProxyURL
                    type: string
                  queueConfig:
                    description: QueueConfig allows the tuning of remote_write queue_config
                      parameters. This object is referenced in the RemoteWriteSpec
                      object.
                    properties:
                      batchSendDeadline:
                        description: BatchSendDeadline is the maximum time a sample
                          will wait in buffer.
                        type: string
                      capacity:
                        description: Capacity is the number of samples to buffer per
                          shard before we start dropping them.
                        format: int32
                        type: integer
                      maxBackoff:
                        description: MaxBackoff is the maximum retry delay.
                        type: string
                      maxRetries:
                        description: MaxRetries is the maximum number of times to
                          retry a batch on recoverable errors.
                        format: int32
                        type: integer
                      maxSamplesPerSend:
                        description: MaxSamplesPerSend is the maximum number of samples
                          per send.
                        format: int32
                        type: integer
                      maxShards:
                        description: MaxShards is the maximum number of shards, i.e.
                          amount of concurrency.
                        format: int32
                        type: integer
                      minBackoff:
                        description: MinBackoff is the initial retry delay. Gets doubled
                          for every retry.
                        type: string
                    type: object
                  remoteTimeout:
                    description: Timeout for requests to the remote write endpoint.
                    type: string
                  tlsConfig:
                    description: TLSConfig specifies TLS configuration parameters.
                    properties:
                      caFile:
                        description: The CA cert to use for the targets.
                        type: string
                      certFile:
                        description: The client cert file for the targets.
                        type: string
                      insecureSkipVerify:
                        description: Disable target certificate validation.
                        type: boolean
                      keyFile:
                        description: The client key file for the targets.
                        type: string
                      serverName:
                        description: Used to verify the hostname for the targets.
                        type: string
                    type: object
                  url:
                    description: The URL of the endpoint to send samples to.
                    type: string
                  writeRelabelConfigs:
                    description: The list of remote write relabel configurations.
                    items:
                      description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                      properties:
                        action:
                          description: Action to perform based on regex matching.
                            Default is 'replace'
                          type: string
                        modulus:
                          description: Modulus to take of the hash of the source label
                            values.
                          format: int64
                          type: integer
                        regex:
                          description: Regular expression against which the extracted
                            value is matched. defailt is '(.*)'
                          type: string
                        replacement:
                          description: Replacement value against which a regex replace
                            is performed if the regular expression matches. Regex
                            capture groups are available. Default is '$1'
                          type: string
                        separator:
                          description: Separator placed between concatenated source
                            label values. default is ';'.
                          type: string
                        sourceLabels:
                          description: The source labels select values from existing
                            labels. Their content is concatenated using the configured
                            separator and matched against the configured regular expression
                            for the replace, keep, and drop actions.
                          items:
                            type: string
                          type: array
                        targetLabel:
                          description: Label to which the resulting value is written
                            in a replace action. It is mandatory for replace actions.
                            Regex capture groups are available.
                          type: string
                      type: object
                    type: array
                required:
                - url
                type: object
              type: array
            replicas:
              description: Number of instances to deploy for a Prometheus deployment.
              format: int32
              type: integer
            resources:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            retention:
              description: Time duration Prometheus shall retain data for. Default
                is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)`
                (milliseconds seconds minutes hours days weeks years).
              type: string
            routePrefix:
              description: The route prefix Prometheus registers HTTP handlers for.
                This is useful, if using ExternalURL and a proxy is rewriting HTTP
                routes of a request, and the actual ExternalURL is still true, but
                the server serves requests under a different route prefix. For example
                for use with `kubectl proxy`.
              type: string
            ruleNamespaceSelector:
              description: A label selector is a label query over a set of resources.
                The result of matchLabels and matchExpressions are ANDed. An empty
                label selector matches all objects. A null label selector matches
                no objects.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            ruleSelector:
              description: A label selector is a label query over a set of resources.
                The result of matchLabels and matchExpressions are ANDed. An empty
                label selector matches all objects. A null label selector matches
                no objects.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            rules:
              description: /--rules.*/ command-line arguments
              properties:
                alert:
                  description: /--rules.alert.*/ command-line arguments
                  properties:
                    forGracePeriod:
                      description: Minimum duration between alert and restored 'for'
                        state. This is maintained only for alerts with configured
                        'for' time greater than grace period.
                      type: string
                    forOutageTolerance:
                      description: Max time to tolerate prometheus outage for restoring
                        'for' state of alert.
                      type: string
                    resendDelay:
                      description: Minimum amount of time to wait before resending
                        an alert to Alertmanager.
                      type: string
                  type: object
              type: object
            scrapeInterval:
              description: Interval between consecutive scrapes.
              type: string
            secrets:
              description: Secrets is a list of Secrets in the same namespace as the
                Prometheus object, which shall be mounted into the Prometheus Pods.
                The Secrets are mounted into /etc/prometheus/secrets/<secret-name>.
              items:
                type: string
              type: array
            securityContext:
              description: PodSecurityContext holds pod-level security attributes
                and common container settings. Some fields are also present in container.securityContext.  Field
                values of container.securityContext take precedence over field values
                of PodSecurityContext.
              properties:
                fsGroup:
                  description: |-
                    A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

                    1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

                    If unset, the Kubelet will not modify the ownership and permissions of any volume.
                  format: int64
                  type: integer
                runAsGroup:
                  description: The GID to run the entrypoint of the container process.
                    Uses runtime default if unset. May also be set in SecurityContext.  If
                    set in both SecurityContext and PodSecurityContext, the value
                    specified in SecurityContext takes precedence for that container.
                  format: int64
                  type: integer
                runAsNonRoot:
                  description: Indicates that the container must run as a non-root
                    user. If true, the Kubelet will validate the image at runtime
                    to ensure that it does not run as UID 0 (root) and fail to start
                    the container if it does. If unset or false, no such validation
                    will be performed. May also be set in SecurityContext.  If set
                    in both SecurityContext and PodSecurityContext, the value specified
                    in SecurityContext takes precedence.
                  type: boolean
                runAsUser:
                  description: The UID to run the entrypoint of the container process.
                    Defaults to user specified in image metadata if unspecified. May
                    also be set in SecurityContext.  If set in both SecurityContext
                    and PodSecurityContext, the value specified in SecurityContext
                    takes precedence for that container.
                  format: int64
                  type: integer
                seLinuxOptions:
                  description: SELinuxOptions are the labels to be applied to the
                    container
                  properties:
                    level:
                      description: Level is SELinux level label that applies to the
                        container.
                      type: string
                    role:
                      description: Role is a SELinux role label that applies to the
                        container.
                      type: string
                    type:
                      description: Type is a SELinux type label that applies to the
                        container.
                      type: string
                    user:
                      description: User is a SELinux user label that applies to the
                        container.
                      type: string
                  type: object
                supplementalGroups:
                  description: A list of groups applied to the first process run in
                    each container, in addition to the container's primary GID.  If
                    unspecified, no groups will be added to any container.
                  items:
                    format: int64
                    type: integer
                  type: array
                sysctls:
                  description: Sysctls hold a list of namespaced sysctls used for
                    the pod. Pods with unsupported sysctls (by the container runtime)
                    might fail to launch.
                  items:
                    description: Sysctl defines a kernel parameter to be set
                    properties:
                      name:
                        description: Name of a property to set
                        type: string
                      value:
                        description: Value of a property to set
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
              type: object
            serviceAccountName:
              description: ServiceAccountName is the name of the ServiceAccount to
                use to run the Prometheus Pods.
              type: string
            serviceMonitorNamespaceSelector:
              description: A label selector is a label query over a set of resources.
                The result of matchLabels and matchExpressions are ANDed. An empty
                label selector matches all objects. A null label selector matches
                no objects.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            serviceMonitorSelector:
              description: A label selector is a label query over a set of resources.
                The result of matchLabels and matchExpressions are ANDed. An empty
                label selector matches all objects. A null label selector matches
                no objects.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            sha:
              description: SHA of Prometheus container image to be deployed. Defaults
                to the value of `version`. Similar to a tag, but the SHA explicitly
                deploys an immutable container image. Version and Tag are ignored
                if SHA is set.
              type: string
            storage:
              description: StorageSpec defines the configured storage for a group
                Prometheus servers. If neither `emptyDir` nor `volumeClaimTemplate`
                is specified, then by default an [EmptyDir](https://kubernetes.io/docs/concepts/storage/volumes/#emptydir)
                will be used.
              properties:
                emptyDir:
                  description: Represents an empty directory for a pod. Empty directory
                    volumes support ownership management and SELinux relabeling.
                  properties:
                    medium:
                      description: 'What type of storage medium should back this directory.
                        The default is "" which means to use the node''s default medium.
                        Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                      type: string
                    sizeLimit: {}
                  type: object
                volumeClaimTemplate:
                  description: PersistentVolumeClaim is a user's request for and claim
                    to a persistent volume
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      description: ObjectMeta is metadata that all persisted resources
                        must have, which includes all objects users must create.
                      properties:
                        annotations:
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        clusterName:
                          description: The name of the cluster which the object belongs
                            to. This is used to distinguish resources with same name
                            and namespace in different clusters. This field is not
                            set anywhere right now and apiserver is going to ignore
                            it if set in create or update request.
                          type: string
                        creationTimestamp:
                          description: Time is a wrapper around time.Time which supports
                            correct marshaling to YAML and JSON.  Wrappers are provided
                            for many of the factory methods that the time package
                            offers.
                          format: date-time
                          type: string
                        deletionGracePeriodSeconds:
                          description: Number of seconds allowed for this object to
                            gracefully terminate before it will be removed from the
                            system. Only set when deletionTimestamp is also set. May
                            only be shortened. Read-only.
                          format: int64
                          type: integer
                        deletionTimestamp:
                          description: Time is a wrapper around time.Time which supports
                            correct marshaling to YAML and JSON.  Wrappers are provided
                            for many of the factory methods that the time package
                            offers.
                          format: date-time
                          type: string
                        finalizers:
                          description: Must be empty before the object is deleted
                            from the registry. Each entry is an identifier for the
                            responsible component that will remove the entry from
                            the list. If the deletionTimestamp of the object is non-nil,
                            entries in this list can only be removed.
                          items:
                            type: string
                          type: array
                        generateName:
                          description: |-
                            GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                            If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                            Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                          type: string
                        generation:
                          description: A sequence number representing a specific generation
                            of the desired state. Populated by the system. Read-only.
                          format: int64
                          type: integer
                        initializers:
                          description: Initializers tracks the progress of initialization.
                          properties:
                            pending:
                              description: Pending is a list of initializers that
                                must execute in order before this object is visible.
                                When the last pending initializer is removed, and
                                no failing result is set, the initializers struct
                                will be set to nil and the object is considered as
                                initialized and visible to all clients.
                              items:
                                description: Initializer is information about an initializer
                                  that has not yet completed.
                                properties:
                                  name:
                                    description: name of the process that is responsible
                                      for initializing this object.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            result:
                              description: Status is a return value for calls that
                                don't return other objects.
                              properties:
                                apiVersion:
                                  description: 'APIVersion defines the versioned schema
                                    of this representation of an object. Servers should
                                    convert recognized schemas to the latest internal
                                    value, and may reject unrecognized values. More
                                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                  type: string
                                code:
                                  description: Suggested HTTP return code for this
                                    status, 0 if not set.
                                  format: int32
                                  type: integer
                                details:
                                  description: StatusDetails is a set of additional
                                    properties that MAY be set by the server to provide
                                    additional information about a response. The Reason
                                    field of a Status object defines what attributes
                                    will be set. Clients must ignore fields that do
                                    not match the defined type of each attribute,
                                    and should assume that any attribute may be empty,
                                    invalid, or under defined.
                                  properties:
                                    causes:
                                      description: The Causes array includes more
                                        details associated with the StatusReason failure.
                                        Not all StatusReasons may provide detailed
                                        causes.
                                      items:
                                        description: StatusCause provides more information
                                          about an api.Status failure, including cases
                                          when multiple errors are encountered.
                                        properties:
                                          field:
                                            description: |-
                                              The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                              Examples:
                                                "name" - the field "name" on the current resource
                                                "items[0].name" - the field "name" on the first array entry in "items"
                                            type: string
                                          message:
                                            description: A human-readable description
                                              of the cause of the error.  This field
                                              may be presented as-is to a reader.
                                            type: string
                                          reason:
                                            description: A machine-readable description
                                              of the cause of the error. If this value
                                              is empty there is no information available.
                                            type: string
                                        type: object
                                      type: array
                                    group:
                                      description: The group attribute of the resource
                                        associated with the status StatusReason.
                                      type: string
                                    kind:
                                      description: 'The kind attribute of the resource
                                        associated with the status StatusReason. On
                                        some operations may differ from the requested
                                        resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: The name attribute of the resource
                                        associated with the status StatusReason (when
                                        there is a single name which can be described).
                                      type: string
                                    retryAfterSeconds:
                                      description: If specified, the time in seconds
                                        before the operation should be retried. Some
                                        errors may indicate the client must take an
                                        alternate action - for those errors this field
                                        may indicate how long to wait before taking
                                        the alternate action.
                                      format: int32
                                      type: integer
                                    uid:
                                      description: 'UID of the resource. (when there
                                        is a single resource which can be described).
                                        More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                      type: string
                                  type: object
                                kind:
                                  description: 'Kind is a string value representing
                                    the REST resource this object represents. Servers
                                    may infer this from the endpoint the client submits
                                    requests to. Cannot be updated. In CamelCase.
                                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                  type: string
                                message:
                                  description: A human-readable description of the
                                    status of this operation.
                                  type: string
                                metadata:
                                  description: ListMeta describes metadata that synthetic
                                    resources must have, including lists and various
                                    status objects. A resource may have only one of
                                    {ObjectMeta, ListMeta}.
                                  properties:
                                    continue:
                                      description: continue may be set if the user
                                        set a limit on the number of items returned,
                                        and indicates that the server has more data
                                        available. The value is opaque and may be
                                        used to issue another request to the endpoint
                                        that served this list to retrieve the next
                                        set of available objects. Continuing a consistent
                                        list may not be possible if the server configuration
                                        has changed or more than a few minutes have
                                        passed. The resourceVersion field returned
                                        when using this continue value will be identical
                                        to the value in the first response, unless
                                        you have received this token from an error
                                        message.
                                      type: string
                                    resourceVersion:
                                      description: 'String that identifies the server''s
                                        internal version of this object that can be
                                        used by clients to determine when objects
                                        have changed. Value must be treated as opaque
                                        by clients and passed unmodified back to the
                                        server. Populated by the system. Read-only.
                                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                      type: string
                                    selfLink:
                                      description: selfLink is a URL representing
                                        this object. Populated by the system. Read-only.
                                      type: string
                                  type: object
                                reason:
                                  description: A machine-readable description of why
                                    this operation is in the "Failure" status. If
                                    this value is empty there is no information available.
                                    A Reason clarifies an HTTP status code but does
                                    not override it.
                                  type: string
                                status:
                                  description: 'Status of the operation. One of: "Success"
                                    or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                  type: string
                              type: object
                          required:
                          - pending
                          type: object
                        labels:
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                        name:
                          description: 'Name must be unique within a namespace. Is
                            required when creating resources, although some resources
                            may allow a client to request the generation of an appropriate
                            name automatically. Name is primarily intended for creation
                            idempotence and configuration definition. Cannot be updated.
                            More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        namespace:
                          description: |-
                            Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                            Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                          type: string
                        ownerReferences:
                          description: List of objects depended by this object. If
                            ALL objects in the list have been deleted, this object
                            will be garbage collected. If this object is managed by
                            a controller, then an entry in this list will point to
                            this controller, with the controller field set to true.
                            There cannot be more than one managing controller.
                          items:
                            description: OwnerReference contains enough information
                              to let you identify an owning object. Currently, an
                              owning object must be in the same namespace, so there
                              is no namespace field.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              blockOwnerDeletion:
                                description: If true, AND if the owner has the "foregroundDeletion"
                                  finalizer, then the owner cannot be deleted from
                                  the key-value store until this reference is removed.
                                  Defaults to false. To set this field, a user needs
                                  "delete" permission of the owner, otherwise 422
                                  (Unprocessable Entity) will be returned.
                                type: boolean
                              controller:
                                description: If true, this reference points to the
                                  managing controller.
                                type: boolean
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                type: string
                            required:
                            - apiVersion
                            - kind
                            - name
                            - uid
                            type: object
                          type: array
                        resourceVersion:
                          description: |-
                            An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                            Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        selfLink:
                          description: SelfLink is a URL representing this object.
                            Populated by the system. Read-only.
                          type: string
                        uid:
                          description: |-
                            UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                            Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                          type: string
                      type: object
                    spec:
                      description: PersistentVolumeClaimSpec describes the common
                        attributes of storage devices and allows a Source for provider-specific
                        attributes
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes
                            the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: TypedLocalObjectReference contains enough information
                            to let you locate the typed referenced object inside the
                            same namespace.
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource
                                being referenced. If APIGroup is not specified, the
                                specified Kind must be in the core API group. For
                                any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: ResourceRequirements describes the compute
                            resource requirements.
                          properties:
                            limits:
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        selector:
                          description: A label selector is a label query over a set
                            of resources. The result of matchLabels and matchExpressions
                            are ANDed. An empty label selector matches all objects.
                            A null label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required
                            by the claim. Value of Filesystem is implied when not
                            included in claim spec. This is an alpha feature and may
                            change in the future.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                    status:
                      description: PersistentVolumeClaimStatus is the current status
                        of a persistent volume claim.
                      properties:
                        accessModes:
                          description: 'AccessModes contains the actual access modes
                            the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        capacity:
                          description: Represents the actual resources of the underlying
                            volume.
                          type: object
                        conditions:
                          description: Current Condition of persistent volume claim.
                            If underlying persistent volume is being resized then
                            the Condition will be set to 'ResizeStarted'.
                          items:
                            description: PersistentVolumeClaimCondition contails details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: Time is a wrapper around time.Time which
                                  supports correct marshaling to YAML and JSON.  Wrappers
                                  are provided for many of the factory methods that
                                  the time package offers.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: Time is a wrapper around time.Time which
                                  supports correct marshaling to YAML and JSON.  Wrappers
                                  are provided for many of the factory methods that
                                  the time package offers.
                                format: date-time
                                type: string
                              message:
                                description: Human-readable message indicating details
                                  about last transition.
                                type: string
                              reason:
                                description: Unique, this should be a short, machine
                                  understandable string that gives the reason for
                                  condition's last transition. If it reports "ResizeStarted"
                                  that means the underlying persistent volume is being
                                  resized.
                                type: string
                              status:
                                type: string
                              type:
                                type: string
                            required:
                            - type
                            - status
                            type: object
                          type: array
                        phase:
                          description: Phase represents the current phase of PersistentVolumeClaim.
                          type: string
                      type: object
                  type: object
              type: object
            tag:
              description: Tag of Prometheus container image to be deployed. Defaults
                to the value of `version`. Version is ignored if Tag is set.
              type: string
            thanos:
              description: ThanosSpec defines parameters for a Prometheus server within
                a Thanos deployment.
              properties:
                baseImage:
                  description: Thanos base image if other than default.
                  type: string
                gcs:
                  description: 'Deprecated: ThanosGCSSpec should be configured with
                    an ObjectStorageConfig secret starting with Thanos v0.2.0. ThanosGCSSpec
                    will be removed.'
                  properties:
                    bucket:
                      description: Google Cloud Storage bucket name for stored blocks.
                        If empty it won't store any block inside Google Cloud Storage.
                      type: string
                    credentials:
                      description: SecretKeySelector selects a key of a Secret.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        optional:
                          description: Specify whether the Secret or it's key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                  type: object
                image:
                  description: Image if specified has precedence over baseImage, tag
                    and sha combinations. Specifying the version is still necessary
                    to ensure the Prometheus Operator knows what version of Thanos
                    is being configured.
                  type: string
                objectStorageConfig:
                  description: SecretKeySelector selects a key of a Secret.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be
                        a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    optional:
                      description: Specify whether the Secret or it's key must be
                        defined
                      type: boolean
                  required:
                  - key
                  type: object
                peers:
                  description: Peers is a DNS name for Thanos to discover peers through.
                  type: string
                resources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                s3:
                  description: 'Deprecated: ThanosS3Spec should be configured with
                    an ObjectStorageConfig secret starting with Thanos v0.2.0. ThanosS3Spec
                    will be removed.'
                  properties:
                    accessKey:
                      description: SecretKeySelector selects a key of a Secret.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        optional:
                          description: Specify whether the Secret or it's key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    bucket:
                      description: S3-Compatible API bucket name for stored blocks.
                      type: string
                    encryptsse:
                      description: Whether to use Server Side Encryption
                      type: boolean
                    endpoint:
                      description: S3-Compatible API endpoint for stored blocks.
                      type: string
                    insecure:
                      description: Whether to use an insecure connection with an S3-Compatible
                        API.
                      type: boolean
                    secretKey:
                      description: SecretKeySelector selects a key of a Secret.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        optional:
                          description: Specify whether the Secret or it's key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    signatureVersion2:
                      description: Whether to use S3 Signature Version 2; otherwise
                        Signature Version 4 will be used.
                      type: boolean
                  type: object
                sha:
                  description: SHA of Thanos container image to be deployed. Defaults
                    to the value of `version`. Similar to a tag, but the SHA explicitly
                    deploys an immutable container image. Version and Tag are ignored
                    if SHA is set.
                  type: string
                tag:
                  description: Tag of Thanos sidecar container image to be deployed.
                    Defaults to the value of `version`. Version is ignored if Tag
                    is set.
                  type: string
                version:
                  description: Version describes the version of Thanos to use.
                  type: string
              type: object
            tolerations:
              description: If specified, the pod's tolerations.
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
            version:
              description: Version of Prometheus to be deployed.
              type: string
          type: object
        status:
          description: 'PrometheusStatus is the most recent observed status of the
            Prometheus cluster. Read-only. Not included when requesting from the apiserver,
            only from the Prometheus Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
          properties:
            availableReplicas:
              description: Total number of available pods (ready for at least minReadySeconds)
                targeted by this Prometheus deployment.
              format: int32
              type: integer
            paused:
              description: Represents whether any actions on the underlaying managed
                objects are being performed. Only delete actions will be performed.
              type: boolean
            replicas:
              description: Total number of non-terminated pods targeted by this Prometheus
                deployment (their labels match the selector).
              format: int32
              type: integer
            unavailableReplicas:
              description: Total number of unavailable pods targeted by this Prometheus
                deployment.
              format: int32
              type: integer
            updatedReplicas:
              description: Total number of non-terminated pods targeted by this Prometheus
                deployment that have the desired version spec.
              format: int32
              type: integer
          required:
          - paused
          - replicas
          - updatedReplicas
          - availableReplicas
          - unavailableReplicas
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: prometheusrules.monitoring.coreos.com
spec:
  conversion:
    strategy: None
  group: monitoring.coreos.com
  names:
    kind: PrometheusRule
    listKind: PrometheusRuleList
    plural: prometheusrules
    singular: prometheusrule
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: ObjectMeta is metadata that all persisted resources must have,
            which includes all objects users must create.
          properties:
            annotations:
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many of the
                factory methods that the time package offers.
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many of the
                factory methods that the time package offers.
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed.
              items:
                type: string
              type: array
            generateName:
              description: |-
                GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

                If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

                Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            initializers:
              description: Initializers tracks the progress of initialization.
              properties:
                pending:
                  description: Pending is a list of initializers that must execute
                    in order before this object is visible. When the last pending
                    initializer is removed, and no failing result is set, the initializers
                    struct will be set to nil and the object is considered as initialized
                    and visible to all clients.
                  items:
                    description: Initializer is information about an initializer that
                      has not yet completed.
                    properties:
                      name:
                        description: name of the process that is responsible for initializing
                          this object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                result:
                  description: Status is a return value for calls that don't return
                    other objects.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    code:
                      description: Suggested HTTP return code for this status, 0 if
                        not set.
                      format: int32
                      type: integer
                    details:
                      description: StatusDetails is a set of additional properties
                        that MAY be set by the server to provide additional information
                        about a response. The Reason field of a Status object defines
                        what attributes will be set. Clients must ignore fields that
                        do not match the defined type of each attribute, and should
                        assume that any attribute may be empty, invalid, or under
                        defined.
                      properties:
                        causes:
                          description: The Causes array includes more details associated
                            with the StatusReason failure. Not all StatusReasons may
                            provide detailed causes.
                          items:
                            description: StatusCause provides more information about
                              an api.Status failure, including cases when multiple
                              errors are encountered.
                            properties:
                              field:
                                description: |-
                                  The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

                                  Examples:
                                    "name" - the field "name" on the current resource
                                    "items[0].name" - the field "name" on the first array entry in "items"
                                type: string
                              message:
                                description: A human-readable description of the cause
                                  of the error.  This field may be presented as-is
                                  to a reader.
                                type: string
                              reason:
                                description: A machine-readable description of the
                                  cause of the error. If this value is empty there
                                  is no information available.
                                type: string
                            type: object
                          type: array
                        group:
                          description: The group attribute of the resource associated
                            with the status StatusReason.
                          type: string
                        kind:
                          description: 'The kind attribute of the resource associated
                            with the status StatusReason. On some operations may differ
                            from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: The name attribute of the resource associated
                            with the status StatusReason (when there is a single name
                            which can be described).
                          type: string
                        retryAfterSeconds:
                          description: If specified, the time in seconds before the
                            operation should be retried. Some errors may indicate
                            the client must take an alternate action - for those errors
                            this field may indicate how long to wait before taking
                            the alternate action.
                          format: int32
                          type: integer
                        uid:
                          description: 'UID of the resource. (when there is a single
                            resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                          type: string
                      type: object
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    message:
                      description: A human-readable description of the status of this
                        operation.
                      type: string
                    metadata:
                      description: ListMeta describes metadata that synthetic resources
                        must have, including lists and various status objects. A resource
                        may have only one of {ObjectMeta, ListMeta}.
                      properties:
                        continue:
                          description: continue may be set if the user set a limit
                            on the number of items returned, and indicates that the
                            server has more data available. The value is opaque and
                            may be used to issue another request to the endpoint that
                            served this list to retrieve the next set of available
                            objects. Continuing a consistent list may not be possible
                            if the server configuration has changed or more than a
                            few minutes have passed. The resourceVersion field returned
                            when using this continue value will be identical to the
                            value in the first response, unless you have received
                            this token from an error message.
                          type: string
                        resourceVersion:
                          description: 'String that identifies the server''s internal
                            version of this object that can be used by clients to
                            determine when objects have changed. Value must be treated
                            as opaque by clients and passed unmodified back to the
                            server. Populated by the system. Read-only. More info:
                            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        selfLink:
                          description: selfLink is a URL representing this object.
                            Populated by the system. Read-only.
                          type: string
                      type: object
                    reason:
                      description: A machine-readable description of why this operation
                        is in the "Failure" status. If this value is empty there is
                        no information available. A Reason clarifies an HTTP status
                        code but does not override it.
                      type: string
                    status:
                      description: 'Status of the operation. One of: "Success" or
                        "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                      type: string
                  type: object
              required:
              - pending
              type: object
            labels:
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: |-
                Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

                Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                description: OwnerReference contains enough information to let you
                  identify an owning object. Currently, an owning object must be in
                  the same namespace, so there is no namespace field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: |-
                An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

                Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
              type: string
            selfLink:
              description: SelfLink is a URL representing this object. Populated by
                the system. Read-only.
              type: string
            uid:
              description: |-
                UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

                Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
              type: string
          type: object
        spec:
          description: PrometheusRuleSpec contains specification parameters for a
            Rule.
          properties:
            groups:
              description: Content of Prometheus rule file
              items:
                description: RuleGroup is a list of sequentially evaluated recording
                  and alerting rules.
                properties:
                  interval:
                    type: string
                  name:
                    type: string
                  rules:
                    items:
                      description: Rule describes an alerting or recording rule.
                      properties:
                        alert:
                          type: string
                        annotations:
                          type: object
                        expr:
                          anyOf:
                          - type: string
                          - type: integer
                        for:
                          type: string
                        labels:
                          type: object
                        record:
                          type: string
                      required:
                      - expr
                      type: object
                    type: array
                required:
                - name
                - rules
                type: object
              type: array
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:56Z"
  generation: 1
  labels:
    controller-tools.k8s.io: "1.0"
  name: s2ibinaries.devops.kubesphere.io
  resourceVersion: "1209"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/s2ibinaries.devops.kubesphere.io
  uid: 44b88777-7d86-44cd-8bc5-1de617b533c6
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.fileName
    name: FileName
    type: string
  - JSONPath: .spec.md5
    name: MD5
    type: string
  - JSONPath: .spec.size
    name: Size
    type: string
  - JSONPath: .status.phase
    name: Phase
    type: string
  conversion:
    strategy: None
  group: devops.kubesphere.io
  names:
    kind: S2iBinary
    listKind: S2iBinaryList
    plural: s2ibinaries
    singular: s2ibinary
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            downloadURL:
              description: DownloadURL in KubeSphere
              type: string
            fileName:
              description: FileName is filename of binary
              type: string
            md5:
              description: MD5 is Binary's MD5 Hash
              type: string
            size:
              description: Size is the file size of file
              type: string
            uploadTimeStamp:
              description: UploadTime is last upload time
              format: date-time
              type: string
          type: object
        status:
          properties:
            phase:
              description: Phase is status of S2iBinary . Possible value is "Ready","UnableToDownload"
              type: string
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:56Z"
  generation: 1
  labels:
    controller-tools.k8s.io: "1.0"
  name: s2ibuilders.devops.kubesphere.io
  resourceVersion: "1217"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/s2ibuilders.devops.kubesphere.io
  uid: a309ad22-6f56-4df7-a61d-708e57e98c8e
spec:
  additionalPrinterColumns:
  - JSONPath: .status.runCount
    name: RunCount
    type: integer
  - JSONPath: .status.lastRunState
    name: LastRunState
    type: string
  - JSONPath: .status.lastRunName
    name: LastRunName
    type: string
  - JSONPath: .status.lastRunStartTime
    name: LastRunStartTime
    type: date
  conversion:
    strategy: None
  group: devops.kubesphere.io
  names:
    kind: S2iBuilder
    listKind: S2iBuilderList
    plural: s2ibuilders
    shortNames:
    - s2ib
    singular: s2ibuilder
  preserveUnknownFields: true
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            config:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              properties:
                addHost:
                  description: AddHost Add a line to /etc/hosts for test purpose or
                    private use in LAN. Its format is host:IP,muliple hosts can be
                    added  by using multiple --add-host
                  items:
                    type: string
                  type: array
                asDockerfile:
                  description: AsDockerfile indicates the path where the Dockerfile
                    should be written instead of building a new image.
                  type: string
                assembleUser:
                  description: AssembleUser specifies the user to run the assemble
                    script in container
                  type: string
                blockOnBuild:
                  description: BlockOnBuild prevents s2i from performing a docker
                    build operation if one is necessary to execute ONBUILD commands,
                    or to layer source code into the container for images that don't
                    have a tar binary available, if the image contains ONBUILD commands
                    that would be executed.
                  type: boolean
                buildVolumes:
                  description: BuildVolumes specifies a list of volumes to mount to
                    container running the build.
                  items:
                    type: string
                  type: array
                builderBaseImageVersion:
                  description: BuilderBaseImageVersion provides optional version information
                    about the builder base image.
                  type: string
                builderImage:
                  description: BuilderImage describes which image is used for building
                    the result images.
                  type: string
                builderImageVersion:
                  description: BuilderImageVersion provides optional version information
                    about the builder image.
                  type: string
                builderPullPolicy:
                  description: BuilderPullPolicy specifies when to pull the builder
                    image
                  type: string
                callbackUrl:
                  description: CallbackURL is a URL which is called upon successful
                    build to inform about that fact.
                  type: string
                cgroupLimits:
                  description: CGroupLimits describes the cgroups limits that will
                    be applied to any containers run by s2i.
                  type: object
                contextDir:
                  description: Specify a relative directory inside the application
                    repository that should be used as a root directory for the application.
                  type: string
                description:
                  description: Description is a result image description label. The
                    default is no description.
                  type: string
                destination:
                  description: Destination specifies a location where the untar operation
                    will place its artifacts.
                  type: string
                displayName:
                  description: DisplayName is a result image display-name label. This
                    defaults to the output image name.
                  type: string
                dockerConfig:
                  description: DockerConfig describes how to access host docker daemon.
                  type: object
                dockerNetworkMode:
                  description: DockerNetworkMode is used to set the docker network
                    setting to --net=container:<id> when the builder is invoked from
                    a container.
                  type: string
                dropCapabilities:
                  description: DropCapabilities contains a list of capabilities to
                    drop when executing containers
                  items:
                    type: string
                  type: array
                environment:
                  description: Environment is a map of environment variables to be
                    passed to the image.
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                excludeRegExp:
                  description: ExcludeRegExp contains a string representation of the
                    regular expression desired for deciding which files to exclude
                    from the tar stream
                  type: string
                export:
                  description: Export Push the result image to specify image registry
                    in tag
                  type: boolean
                gitSecretRef:
                  description: GitSecretRef is the BasicAuth Secret of Git Clone
                  type: object
                hasOnBuild:
                  description: HasOnBuild will be set to true if the builder image
                    contains ONBUILD instructions
                  type: boolean
                imageName:
                  description: ImageName Contains the registry address and reponame,
                    tag should set by field tag alone
                  type: string
                imageScriptsUrl:
                  description: ImageScriptsURL is the default location to find the
                    assemble/run scripts for a builder image. This url can be a reference
                    within the builder image if the scheme is specified as image://
                  type: string
                imageWorkDir:
                  description: ImageWorkDir is the default working directory for the
                    builder image.
                  type: string
                incremental:
                  description: Incremental describes whether to try to perform incremental
                    build.
                  type: boolean
                incrementalAuthentication:
                  description: IncrementalAuthentication holds the authentication
                    information for pulling the previous image from private repositories
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    secretRef:
                      type: object
                    serverAddress:
                      type: string
                    username:
                      type: string
                  type: object
                incrementalFromTag:
                  description: IncrementalFromTag sets an alternative image tag to
                    look for existing artifacts. Tag is used by default if this is
                    not set.
                  type: string
                injections:
                  description: Injections specifies a list source/destination folders
                    that are injected to the container that runs assemble. All files
                    we inject will be truncated after the assemble script finishes.
                  items:
                    properties:
                      destination:
                        description: Destination is the path to mount the volume to
                          - absolute or relative.
                        type: string
                      keep:
                        description: Keep indicates if the mounted data should be
                          kept in the final image.
                        type: boolean
                      source:
                        description: Source is a reference to the volume source.
                        type: string
                    type: object
                  type: array
                isBinaryURL:
                  description: IsBinaryURL explain the type of SourceURL. If it is
                    IsBinaryURL, it will download the file directly without using
                    git.
                  type: boolean
                keepSymlinks:
                  description: KeepSymlinks indicates to copy symlinks as symlinks.
                    Default behavior is to follow symlinks and copy files by content.
                  type: boolean
                labelNamespace:
                  description: LabelNamespace provides the namespace under which the
                    labels will be generated.
                  type: string
                labels:
                  description: Labels specify labels and their values to be applied
                    to the resulting image. Label keys must have non-zero length.
                    The labels defined here override generated labels in case they
                    have the same name.
                  type: object
                layeredBuild:
                  description: LayeredBuild describes if this is build which layered
                    scripts and sources on top of BuilderImage.
                  type: boolean
                nodeAffinityKey:
                  description: The key of Node Affinity.
                  type: string
                nodeAffinityValues:
                  description: The values of Node Affinity.
                  items:
                    type: string
                  type: array
                outputBuildResult:
                  description: Whether output build result to status.
                  type: boolean
                outputImageName:
                  description: OutputImageName is a result image name without tag,
                    default is latest. tag will append to ImageName in the end
                  type: string
                preserveWorkingDir:
                  description: PreserveWorkingDir describes if working directory should
                    be left after processing.
                  type: boolean
                previousImagePullPolicy:
                  description: PreviousImagePullPolicy specifies when to pull the
                    previously build image when doing incremental build
                  type: string
                pullAuthentication:
                  description: PullAuthentication holds the authentication information
                    for pulling the Docker images from private repositories
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    secretRef:
                      type: object
                    serverAddress:
                      type: string
                    username:
                      type: string
                  type: object
                pushAuthentication:
                  description: PullAuthentication holds the authentication information
                    for pulling the Docker images from private repositories
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    secretRef:
                      type: object
                    serverAddress:
                      type: string
                    username:
                      type: string
                  type: object
                removePreviousImage:
                  description: RemovePreviousImage describes if previous image should
                    be removed after successful build. This applies only to incremental
                    builds.
                  type: boolean
                revisionId:
                  description: The RevisionId is a branch name or a SHA-1 hash of
                    every important thing about the commit
                  type: string
                runImage:
                  description: RunImage will trigger a "docker run ..." invocation
                    of the produced image so the user can see if it operates as he
                    would expect
                  type: boolean
                runtimeArtifacts:
                  description: RuntimeArtifacts specifies a list of source/destination
                    pairs that will be copied from builder to a runtime image. Source
                    can be a file or directory. Destination must be a directory. Regardless
                    whether it is an absolute or relative path, it will be placed
                    into image's WORKDIR. Destination also can be empty or equals
                    to ".", in this case it just refers to a root of WORKDIR. In case
                    it's empty, S2I will try to get this list from io.openshift.s2i.assemble-input-files
                    label on a RuntimeImage.
                  items:
                    properties:
                      destination:
                        description: Destination is the path to mount the volume to
                          - absolute or relative.
                        type: string
                      keep:
                        description: Keep indicates if the mounted data should be
                          kept in the final image.
                        type: boolean
                      source:
                        description: Source is a reference to the volume source.
                        type: string
                    type: object
                  type: array
                runtimeAuthentication:
                  description: RuntimeAuthentication holds the authentication information
                    for pulling the runtime Docker images from private repositories.
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    secretRef:
                      type: object
                    serverAddress:
                      type: string
                    username:
                      type: string
                  type: object
                runtimeImage:
                  description: RuntimeImage specifies the image that will be a base
                    for resulting image and will be used for running an application.
                    By default, BuilderImage is used for building and running, but
                    the latter may be overridden.
                  type: string
                runtimeImagePullPolicy:
                  description: RuntimeImagePullPolicy specifies when to pull a runtime
                    image.
                  type: string
                scriptDownloadProxyConfig:
                  description: ScriptDownloadProxyConfig optionally specifies the
                    http and https proxy to use when downloading scripts
                  properties:
                    httpProxy:
                      type: string
                    httpsProxy:
                      type: string
                  type: object
                scriptsUrl:
                  description: ScriptsURL is a URL describing where to fetch the S2I
                    scripts from during build process. This url can be a reference
                    within the builder image if the scheme is specified as image://
                  type: string
                securityOpt:
                  description: SecurityOpt are passed as options to the docker containers
                    launched by s2i.
                  items:
                    type: string
                  type: array
                sourceUrl:
                  description: SourceURL is  url of the codes such as https://github.com/a/b.git
                  type: string
                tag:
                  description: Tag is a result image tag name.
                  type: string
                taintKey:
                  description: The name of taint.
                  type: string
                usage:
                  description: Usage allows for properly shortcircuiting s2i logic
                    when `s2i usage` is invoked
                  type: boolean
                workingDir:
                  description: WorkingDir describes temporary directory used for downloading
                    sources, scripts and tar operations.
                  type: string
                workingSourceDir:
                  description: WorkingSourceDir describes the subdirectory off of
                    WorkingDir set up during the repo download that is later used
                    as the root for ignore processing
                  type: string
              required:
              - imageName
              - sourceUrl
              type: object
            fromTemplate:
              description: FromTemplate define some inputs from user
              properties:
                builderImage:
                  description: BaseImage specify which version of this template to
                    use
                  type: string
                name:
                  description: Name specify a template to use, so many fields in Config
                    can left empty
                  type: string
                parameters:
                  description: Parameters must use with `template`, fill some parameters
                    which template will use
                  items:
                    properties:
                      defaultValue:
                        type: string
                      description:
                        type: string
                      key:
                        type: string
                      optValues:
                        items:
                          type: string
                        type: array
                      required:
                        type: boolean
                      type:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
              type: object
          type: object
        status:
          properties:
            lastRunName:
              description: LastRunState return the name of the newest run of this
                builder
              type: string
            lastRunStartTime:
              description: LastRunStartTime return the startTime of the newest run
                of this builder
              format: date-time
              type: string
            lastRunState:
              description: LastRunState return the state of the newest run of this
                builder
              type: string
            runCount:
              description: RunCount represent the sum of s2irun of this builder
              format: int64
              type: integer
          required:
          - runCount
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: s2ibuildertemplates.devops.kubesphere.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.codeFramework
    name: Framework
    type: string
  - JSONPath: .spec.defaultBaseImage
    name: DefaultBaseImage
    type: string
  - JSONPath: .spec.version
    name: Version
    type: string
  conversion:
    strategy: None
  group: devops.kubesphere.io
  names:
    kind: S2iBuilderTemplate
    listKind: S2iBuilderTemplateList
    plural: s2ibuildertemplates
    shortNames:
    - s2ibt
    singular: s2ibuildertemplate
  preserveUnknownFields: true
  scope: Cluster
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            codeFramework:
              description: CodeFramework means which language this template is designed
                for and which framework is using if has framework. Like Java, NodeJS
                etc
              type: string
            containerInfo:
              description: Images are the images this template will use.
              items:
                properties:
                  buildVolumes:
                    description: BuildVolumes specifies a list of volumes to mount
                      to container running the build.
                    items:
                      type: string
                    type: array
                  builderImage:
                    description: BaseImage are the images this template will use.
                    type: string
                  runtimeArtifacts:
                    items:
                      properties:
                        destination:
                          description: Destination is the path to mount the volume
                            to - absolute or relative.
                          type: string
                        keep:
                          description: Keep indicates if the mounted data should be
                            kept in the final image.
                          type: boolean
                        source:
                          description: Source is a reference to the volume source.
                          type: string
                      type: object
                    type: array
                  runtimeImage:
                    type: string
                type: object
              type: array
            defaultBaseImage:
              description: DefaultBaseImage is the image that will be used by default
              type: string
            description:
              description: Description illustrate the purpose of this template
              type: string
            environment:
              description: Parameters is a set of environment variables to be passed
                to the image.
              items:
                properties:
                  defaultValue:
                    type: string
                  description:
                    type: string
                  key:
                    type: string
                  optValues:
                    items:
                      type: string
                    type: array
                  required:
                    type: boolean
                  type:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            iconPath:
              description: IconPath is used for frontend display
              type: string
            version:
              description: Version of template
              type: string
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: s2iruns.devops.kubesphere.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.runState
    name: State
    type: string
  - JSONPath: .status.kubernetesJobName
    name: K8sJobName
    type: string
  - JSONPath: .status.startTime
    name: StartTime
    type: date
  - JSONPath: .status.completionTime
    name: CompletionTime
    type: date
  - JSONPath: .status.s2iBuildResult.imageName
    name: ImageName
    type: string
  conversion:
    strategy: None
  group: devops.kubesphere.io
  names:
    kind: S2iRun
    listKind: S2iRunList
    plural: s2iruns
    shortNames:
    - s2ir
    singular: s2irun
  preserveUnknownFields: true
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            backoffLimit:
              description: BackoffLimit limits the restart count of each s2irun. Default
                is 0
              format: int32
              type: integer
            builderName:
              description: BuilderName specify the name of s2ibuilder, required
              type: string
            newRevisionId:
              description: NewRevisionId override the default NewRevisionId in its
                s2ibuilder.
              type: string
            newSourceURL:
              description: NewSourceURL is used to download new binary artifacts
              type: string
            newTag:
              description: NewTag override the default tag in its s2ibuilder, image
                name cannot be changed.
              type: string
            secondsAfterFinished:
              description: SecondsAfterFinished if is set and greater than zero, and
                the job created by s2irun become successful or failed , the job will
                be auto deleted after SecondsAfterFinished
              format: int32
              type: integer
          required:
          - builderName
          type: object
        status:
          properties:
            completionTime:
              description: Represents time when the job was completed. It is not guaranteed
                to be set in happens-before order across separate operations. It is
                represented in RFC3339 form and is in UTC.
              format: date-time
              type: string
            kubernetesJobName:
              description: KubernetesJobName is the job name in k8s
              type: string
            logURL:
              description: LogURL is uesd for external log handler to let user know
                where is log located in
              type: string
            runState:
              description: RunState  indicates whether this job is done or failed
              type: string
            startTime:
              description: StartTime represent when this run began
              format: date-time
              type: string
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: coredns
  name: coredns
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 1m
    port: metrics
  jobLabel: k8s-app
  namespaceSelector:
    matchNames:
    - kube-system
  selector:
    matchLabels:
      k8s-app: coredns
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: servicemonitors.monitoring.coreos.com
spec:
  conversion:
    strategy: None
  group: monitoring.coreos.com
  names:
    kind: ServiceMonitor
    listKind: ServiceMonitorList
    plural: servicemonitors
    singular: servicemonitor
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        spec:
          description: ServiceMonitorSpec contains specification parameters for a
            ServiceMonitor.
          properties:
            endpoints:
              description: A list of endpoints allowed as part of this ServiceMonitor.
              items:
                description: Endpoint defines a scrapeable endpoint serving Prometheus
                  metrics.
                properties:
                  basicAuth:
                    description: 'BasicAuth allow an endpoint to authenticate over
                      basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                    properties:
                      password:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the Secret or it's key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      username:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          optional:
                            description: Specify whether the Secret or it's key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                  bearerTokenFile:
                    description: File to read bearer token for scraping targets.
                    type: string
                  honorLabels:
                    description: HonorLabels chooses the metric's labels on collisions
                      with target labels.
                    type: boolean
                  interval:
                    description: Interval at which metrics should be scraped
                    type: string
                  metricRelabelings:
                    description: MetricRelabelConfigs to apply to samples before ingestion.
                    items:
                      description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                      properties:
                        action:
                          description: Action to perform based on regex matching.
                            Default is 'replace'
                          type: string
                        modulus:
                          description: Modulus to take of the hash of the source label
                            values.
                          format: int64
                          type: integer
                        regex:
                          description: Regular expression against which the extracted
                            value is matched. defailt is '(.*)'
                          type: string
                        replacement:
                          description: Replacement value against which a regex replace
                            is performed if the regular expression matches. Regex
                            capture groups are available. Default is '$1'
                          type: string
                        separator:
                          description: Separator placed between concatenated source
                            label values. default is ';'.
                          type: string
                        sourceLabels:
                          description: The source labels select values from existing
                            labels. Their content is concatenated using the configured
                            separator and matched against the configured regular expression
                            for the replace, keep, and drop actions.
                          items:
                            type: string
                          type: array
                        targetLabel:
                          description: Label to which the resulting value is written
                            in a replace action. It is mandatory for replace actions.
                            Regex capture groups are available.
                          type: string
                      type: object
                    type: array
                  params:
                    description: Optional HTTP URL parameters
                    type: object
                  path:
                    description: HTTP path to scrape for metrics.
                    type: string
                  port:
                    description: Name of the service port this endpoint refers to.
                      Mutually exclusive with targetPort.
                    type: string
                  proxyUrl:
                    description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                      to proxy through this endpoint.
                    type: string
                  relabelings:
                    description: 'RelabelConfigs to apply to samples before ingestion.
                      More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#<relabel_config>'
                    items:
                      description: 'RelabelConfig allows dynamic rewriting of the
                        label set, being applied to samples before ingestion. It defines
                        `<metric_relabel_configs>`-section of Prometheus configuration.
                        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                      properties:
                        action:
                          description: Action to perform based on regex matching.
                            Default is 'replace'
                          type: string
                        modulus:
                          description: Modulus to take of the hash of the source label
                            values.
                          format: int64
                          type: integer
                        regex:
                          description: Regular expression against which the extracted
                            value is matched. defailt is '(.*)'
                          type: string
                        replacement:
                          description: Replacement value against which a regex replace
                            is performed if the regular expression matches. Regex
                            capture groups are available. Default is '$1'
                          type: string
                        separator:
                          description: Separator placed between concatenated source
                            label values. default is ';'.
                          type: string
                        sourceLabels:
                          description: The source labels select values from existing
                            labels. Their content is concatenated using the configured
                            separator and matched against the configured regular expression
                            for the replace, keep, and drop actions.
                          items:
                            type: string
                          type: array
                        targetLabel:
                          description: Label to which the resulting value is written
                            in a replace action. It is mandatory for replace actions.
                            Regex capture groups are available.
                          type: string
                      type: object
                    type: array
                  scheme:
                    description: HTTP scheme to use for scraping.
                    type: string
                  scrapeTimeout:
                    description: Timeout after which the scrape is ended
                    type: string
                  targetPort:
                    anyOf:
                    - type: string
                    - type: integer
                  tlsConfig:
                    description: TLSConfig specifies TLS configuration parameters.
                    properties:
                      caFile:
                        description: The CA cert to use for the targets.
                        type: string
                      certFile:
                        description: The client cert file for the targets.
                        type: string
                      insecureSkipVerify:
                        description: Disable target certificate validation.
                        type: boolean
                      keyFile:
                        description: The client key file for the targets.
                        type: string
                      serverName:
                        description: Used to verify the hostname for the targets.
                        type: string
                    type: object
                type: object
              type: array
            jobLabel:
              description: The label to use to retrieve the job name from.
              type: string
            namespaceSelector:
              description: NamespaceSelector is a selector for selecting either all
                namespaces or a list of namespaces.
              properties:
                any:
                  description: Boolean describing whether all namespaces are selected
                    in contrast to a list restricting them.
                  type: boolean
                matchNames:
                  description: List of namespace names.
                  items:
                    type: string
                  type: array
              type: object
            podTargetLabels:
              description: PodTargetLabels transfers labels on the Kubernetes Pod
                onto the target.
              items:
                type: string
              type: array
            sampleLimit:
              description: SampleLimit defines per-scrape limit on number of scraped
                samples that will be accepted.
              format: int64
              type: integer
            selector:
              description: A label selector is a label query over a set of resources.
                The result of matchLabels and matchExpressions are ANDed. An empty
                label selector matches all objects. A null label selector matches
                no objects.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            targetLabels:
              description: TargetLabels transfers labels on the Kubernetes Service
                onto the target.
              items:
                type: string
              type: array
          required:
          - endpoints
          - selector
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: servicepolicies.servicemesh.kubesphere.io
spec:
  conversion:
    strategy: None
  group: servicemesh.kubesphere.io
  names:
    kind: ServicePolicy
    listKind: ServicePolicyList
    plural: servicepolicies
    singular: servicepolicy
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            selector:
              description: Label selector for destination rules.
              type: object
            template:
              description: Template used to create a destination rule
              properties:
                spec:
                  description: Spec indicates the behavior of a destination rule.
                  properties:
                    host:
                      description: 'REQUIRED. The name of a service from the service
                        registry. Service names are looked up from the platform''s
                        service registry (e.g., Kubernetes services, Consul services,
                        etc.) and from the hosts declared by [ServiceEntries](#ServiceEntry).
                        Rules defined for services that do not exist in the service
                        registry will be ignored.  *Note for Kubernetes users*: When
                        short names are used (e.g. "reviews" instead of "reviews.default.svc.cluster.local"),
                        Istio will interpret the short name based on the namespace
                        of the rule, not the service. A rule in the "default" namespace
                        containing a host "reviews will be interpreted as "reviews.default.svc.cluster.local",
                        irrespective of the actual namespace associated with the reviews
                        service. _To avoid potential misconfigurations, it is recommended
                        to always use fully qualified domain names over short names._  Note
                        that the host field applies to both HTTP and TCP services.'
                      type: string
                    subsets:
                      description: One or more named sets that represent individual
                        versions of a service. Traffic policies can be overridden
                        at subset level.
                      items:
                        properties:
                          labels:
                            description: REQUIRED. Labels apply a filter over the
                              endpoints of a service in the service registry. See
                              route rules for examples of usage.
                            type: object
                          name:
                            description: REQUIRED. Name of the subset. The service
                              name and the subset name can be used for traffic splitting
                              in a route rule.
                            type: string
                          trafficPolicy:
                            description: Traffic policies that apply to this subset.
                              Subsets inherit the traffic policies specified at the
                              DestinationRule level. Settings specified at the subset
                              level will override the corresponding settings specified
                              at the DestinationRule level.
                            properties:
                              connectionPool:
                                description: Settings controlling the volume of connections
                                  to an upstream service
                                properties:
                                  http:
                                    description: HTTP connection pool settings.
                                    properties:
                                      maxRequestsPerConnection:
                                        description: Maximum number of requests per
                                          connection to a backend. Setting this parameter
                                          to 1 disables keep alive.
                                        format: int32
                                        type: integer
                                      maxRetries:
                                        description: Maximum number of retries that
                                          can be outstanding to all hosts in a cluster
                                          at a given time. Defaults to 3.
                                        format: int32
                                        type: integer
                                    type: object
                                  tcp:
                                    description: Settings common to both HTTP and
                                      TCP upstream connections.
                                    properties:
                                      connectTimeout:
                                        description: TCP connection timeout.
                                        type: string
                                      maxConnections:
                                        description: Maximum number of HTTP1 /TCP
                                          connections to a destination host.
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                              loadBalancer:
                                description: Settings controlling the load balancer
                                  algorithms.
                                properties:
                                  consistentHash:
                                    properties:
                                      httpCookie:
                                        description: Hash based on HTTP cookie.
                                        properties:
                                          name:
                                            description: REQUIRED. Name of the cookie.
                                            type: string
                                          path:
                                            description: Path to set for the cookie.
                                            type: string
                                          ttl:
                                            description: REQUIRED. Lifetime of the
                                              cookie.
                                            type: string
                                        required:
                                        - name
                                        - ttl
                                        type: object
                                      httpHeaderName:
                                        description: 'It is required to specify exactly
                                          one of the fields as hash key: HttpHeaderName,
                                          HttpCookie, or UseSourceIP. Hash based on
                                          a specific HTTP header.'
                                        type: string
                                      minimumRingSize:
                                        description: The minimum number of virtual
                                          nodes to use for the hash ring. Defaults
                                          to 1024. Larger ring sizes result in more
                                          granular load distributions. If the number
                                          of hosts in the load balancing pool is larger
                                          than the ring size, each host will be assigned
                                          a single virtual node.
                                        format: int64
                                        type: integer
                                      useSourceIp:
                                        description: Hash based on the source IP address.
                                        type: boolean
                                    type: object
                                  simple:
                                    description: 'It is required to specify exactly
                                      one of the fields: Simple or ConsistentHash'
                                    type: string
                                type: object
                              outlierDetection:
                                description: Settings controlling eviction of unhealthy
                                  hosts from the load balancing pool
                                properties:
                                  baseEjectionTime:
                                    description: 'Minimum ejection duration. A host
                                      will remain ejected for a period equal to the
                                      product of minimum ejection duration and the
                                      number of times the host has been ejected. This
                                      technique allows the system to automatically
                                      increase the ejection period for unhealthy upstream
                                      servers. format: 1h/1m/1s/1ms. MUST BE >=1ms.
                                      Default is 30s.'
                                    type: string
                                  consecutiveErrors:
                                    description: Number of errors before a host is
                                      ejected from the connection pool. Defaults to
                                      5. When the upstream host is accessed over HTTP,
                                      a 5xx return code qualifies as an error. When
                                      the upstream host is accessed over an opaque
                                      TCP connection, connect timeouts and connection
                                      error/failure events qualify as an error.
                                    format: int32
                                    type: integer
                                  interval:
                                    description: 'Time interval between ejection sweep
                                      analysis. format: 1h/1m/1s/1ms. MUST BE >=1ms.
                                      Default is 10s.'
                                    type: string
                                  maxEjectionPercent:
                                    description: Maximum % of hosts in the load balancing
                                      pool for the upstream service that can be ejected.
                                      Defaults to 10%.
                                    format: int32
                                    type: integer
                                type: object
                              portLevelSettings:
                                description: Traffic policies specific to individual
                                  ports. Note that port level settings will override
                                  the destination-level settings. Traffic settings
                                  specified at the destination-level will not be inherited
                                  when overridden by port-level settings, i.e. default
                                  values will be applied to fields omitted in port-level
                                  traffic policies.
                                items:
                                  properties:
                                    connectionPool:
                                      description: Settings controlling the volume
                                        of connections to an upstream service
                                      properties:
                                        http:
                                          description: HTTP connection pool settings.
                                          properties:
                                            maxRequestsPerConnection:
                                              description: Maximum number of requests
                                                per connection to a backend. Setting
                                                this parameter to 1 disables keep
                                                alive.
                                              format: int32
                                              type: integer
                                            maxRetries:
                                              description: Maximum number of retries
                                                that can be outstanding to all hosts
                                                in a cluster at a given time. Defaults
                                                to 3.
                                              format: int32
                                              type: integer
                                          type: object
                                        tcp:
                                          description: Settings common to both HTTP
                                            and TCP upstream connections.
                                          properties:
                                            connectTimeout:
                                              description: TCP connection timeout.
                                              type: string
                                            maxConnections:
                                              description: Maximum number of HTTP1
                                                /TCP connections to a destination
                                                host.
                                              format: int32
                                              type: integer
                                          type: object
                                      type: object
                                    loadBalancer:
                                      description: Settings controlling the load balancer
                                        algorithms.
                                      properties:
                                        consistentHash:
                                          properties:
                                            httpCookie:
                                              description: Hash based on HTTP cookie.
                                              properties:
                                                name:
                                                  description: REQUIRED. Name of the
                                                    cookie.
                                                  type: string
                                                path:
                                                  description: Path to set for the
                                                    cookie.
                                                  type: string
                                                ttl:
                                                  description: REQUIRED. Lifetime
                                                    of the cookie.
                                                  type: string
                                              required:
                                              - name
                                              - ttl
                                              type: object
                                            httpHeaderName:
                                              description: 'It is required to specify
                                                exactly one of the fields as hash
                                                key: HttpHeaderName, HttpCookie, or
                                                UseSourceIP. Hash based on a specific
                                                HTTP header.'
                                              type: string
                                            minimumRingSize:
                                              description: The minimum number of virtual
                                                nodes to use for the hash ring. Defaults
                                                to 1024. Larger ring sizes result
                                                in more granular load distributions.
                                                If the number of hosts in the load
                                                balancing pool is larger than the
                                                ring size, each host will be assigned
                                                a single virtual node.
                                              format: int64
                                              type: integer
                                            useSourceIp:
                                              description: Hash based on the source
                                                IP address.
                                              type: boolean
                                          type: object
                                        simple:
                                          description: 'It is required to specify
                                            exactly one of the fields: Simple or ConsistentHash'
                                          type: string
                                      type: object
                                    outlierDetection:
                                      description: Settings controlling eviction of
                                        unhealthy hosts from the load balancing pool
                                      properties:
                                        baseEjectionTime:
                                          description: 'Minimum ejection duration.
                                            A host will remain ejected for a period
                                            equal to the product of minimum ejection
                                            duration and the number of times the host
                                            has been ejected. This technique allows
                                            the system to automatically increase the
                                            ejection period for unhealthy upstream
                                            servers. format: 1h/1m/1s/1ms. MUST BE
                                            >=1ms. Default is 30s.'
                                          type: string
                                        consecutiveErrors:
                                          description: Number of errors before a host
                                            is ejected from the connection pool. Defaults
                                            to 5. When the upstream host is accessed
                                            over HTTP, a 5xx return code qualifies
                                            as an error. When the upstream host is
                                            accessed over an opaque TCP connection,
                                            connect timeouts and connection error/failure
                                            events qualify as an error.
                                          format: int32
                                          type: integer
                                        interval:
                                          description: 'Time interval between ejection
                                            sweep analysis. format: 1h/1m/1s/1ms.
                                            MUST BE >=1ms. Default is 10s.'
                                          type: string
                                        maxEjectionPercent:
                                          description: Maximum % of hosts in the load
                                            balancing pool for the upstream service
                                            that can be ejected. Defaults to 10%.
                                          format: int32
                                          type: integer
                                      type: object
                                    port:
                                      description: Specifies the port name or number
                                        of a port on the destination service on which
                                        this policy is being applied.  Names must
                                        comply with DNS label syntax (rfc1035) and
                                        therefore cannot collide with numbers. If
                                        there are multiple ports on a service with
                                        the same protocol the names should be of the
                                        form <protocol-name>-<DNS label>.
                                      properties:
                                        name:
                                          description: Valid port name
                                          type: string
                                        number:
                                          description: Valid port number
                                          format: int32
                                          type: integer
                                      type: object
                                    tls:
                                      description: TLS related settings for connections
                                        to the upstream service.
                                      properties:
                                        caCertificates:
                                          description: 'OPTIONAL: The path to the
                                            file containing certificate authority
                                            certificates to use in verifying a presented
                                            server certificate. If omitted, the proxy
                                            will not verify the server''s certificate.
                                            Should be empty if mode is `ISTIO_MUTUAL`.'
                                          type: string
                                        clientCertificate:
                                          description: REQUIRED if mode is `MUTUAL`.
                                            The path to the file holding the client-side
                                            TLS certificate to use. Should be empty
                                            if mode is `ISTIO_MUTUAL`.
                                          type: string
                                        mode:
                                          description: 'REQUIRED: Indicates whether
                                            connections to this port should be secured
                                            using TLS. The value of this field determines
                                            how TLS is enforced.'
                                          type: string
                                        privateKey:
                                          description: REQUIRED if mode is `MUTUAL`.
                                            The path to the file holding the client's
                                            private key. Should be empty if mode is
                                            `ISTIO_MUTUAL`.
                                          type: string
                                        sni:
                                          description: SNI string to present to the
                                            server during TLS handshake. Should be
                                            empty if mode is `ISTIO_MUTUAL`.
                                          type: string
                                        subjectAltNames:
                                          description: A list of alternate names to
                                            verify the subject identity in the certificate.
                                            If specified, the proxy will verify that
                                            the server certificate's subject alt name
                                            matches one of the specified values. Should
                                            be empty if mode is `ISTIO_MUTUAL`.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - mode
                                      type: object
                                  required:
                                  - port
                                  type: object
                                type: array
                              tls:
                                description: TLS related settings for connections
                                  to the upstream service.
                                properties:
                                  caCertificates:
                                    description: 'OPTIONAL: The path to the file containing
                                      certificate authority certificates to use in
                                      verifying a presented server certificate. If
                                      omitted, the proxy will not verify the server''s
                                      certificate. Should be empty if mode is `ISTIO_MUTUAL`.'
                                    type: string
                                  clientCertificate:
                                    description: REQUIRED if mode is `MUTUAL`. The
                                      path to the file holding the client-side TLS
                                      certificate to use. Should be empty if mode
                                      is `ISTIO_MUTUAL`.
                                    type: string
                                  mode:
                                    description: 'REQUIRED: Indicates whether connections
                                      to this port should be secured using TLS. The
                                      value of this field determines how TLS is enforced.'
                                    type: string
                                  privateKey:
                                    description: REQUIRED if mode is `MUTUAL`. The
                                      path to the file holding the client's private
                                      key. Should be empty if mode is `ISTIO_MUTUAL`.
                                    type: string
                                  sni:
                                    description: SNI string to present to the server
                                      during TLS handshake. Should be empty if mode
                                      is `ISTIO_MUTUAL`.
                                    type: string
                                  subjectAltNames:
                                    description: A list of alternate names to verify
                                      the subject identity in the certificate. If
                                      specified, the proxy will verify that the server
                                      certificate's subject alt name matches one of
                                      the specified values. Should be empty if mode
                                      is `ISTIO_MUTUAL`.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - mode
                                type: object
                            type: object
                        required:
                        - name
                        - labels
                        type: object
                      type: array
                    trafficPolicy:
                      description: Traffic policies to apply (load balancing policy,
                        connection pool sizes, outlier detection).
                      properties:
                        connectionPool:
                          description: Settings controlling the volume of connections
                            to an upstream service
                          properties:
                            http:
                              description: HTTP connection pool settings.
                              properties:
                                maxRequestsPerConnection:
                                  description: Maximum number of requests per connection
                                    to a backend. Setting this parameter to 1 disables
                                    keep alive.
                                  format: int32
                                  type: integer
                                maxRetries:
                                  description: Maximum number of retries that can
                                    be outstanding to all hosts in a cluster at a
                                    given time. Defaults to 3.
                                  format: int32
                                  type: integer
                              type: object
                            tcp:
                              description: Settings common to both HTTP and TCP upstream
                                connections.
                              properties:
                                connectTimeout:
                                  description: TCP connection timeout.
                                  type: string
                                maxConnections:
                                  description: Maximum number of HTTP1 /TCP connections
                                    to a destination host.
                                  format: int32
                                  type: integer
                              type: object
                          type: object
                        loadBalancer:
                          description: Settings controlling the load balancer algorithms.
                          properties:
                            consistentHash:
                              properties:
                                httpCookie:
                                  description: Hash based on HTTP cookie.
                                  properties:
                                    name:
                                      description: REQUIRED. Name of the cookie.
                                      type: string
                                    path:
                                      description: Path to set for the cookie.
                                      type: string
                                    ttl:
                                      description: REQUIRED. Lifetime of the cookie.
                                      type: string
                                  required:
                                  - name
                                  - ttl
                                  type: object
                                httpHeaderName:
                                  description: 'It is required to specify exactly
                                    one of the fields as hash key: HttpHeaderName,
                                    HttpCookie, or UseSourceIP. Hash based on a specific
                                    HTTP header.'
                                  type: string
                                minimumRingSize:
                                  description: The minimum number of virtual nodes
                                    to use for the hash ring. Defaults to 1024. Larger
                                    ring sizes result in more granular load distributions.
                                    If the number of hosts in the load balancing pool
                                    is larger than the ring size, each host will be
                                    assigned a single virtual node.
                                  format: int64
                                  type: integer
                                useSourceIp:
                                  description: Hash based on the source IP address.
                                  type: boolean
                              type: object
                            simple:
                              description: 'It is required to specify exactly one
                                of the fields: Simple or ConsistentHash'
                              type: string
                          type: object
                        outlierDetection:
                          description: Settings controlling eviction of unhealthy
                            hosts from the load balancing pool
                          properties:
                            baseEjectionTime:
                              description: 'Minimum ejection duration. A host will
                                remain ejected for a period equal to the product of
                                minimum ejection duration and the number of times
                                the host has been ejected. This technique allows the
                                system to automatically increase the ejection period
                                for unhealthy upstream servers. format: 1h/1m/1s/1ms.
                                MUST BE >=1ms. Default is 30s.'
                              type: string
                            consecutiveErrors:
                              description: Number of errors before a host is ejected
                                from the connection pool. Defaults to 5. When the
                                upstream host is accessed over HTTP, a 5xx return
                                code qualifies as an error. When the upstream host
                                is accessed over an opaque TCP connection, connect
                                timeouts and connection error/failure events qualify
                                as an error.
                              format: int32
                              type: integer
                            interval:
                              description: 'Time interval between ejection sweep analysis.
                                format: 1h/1m/1s/1ms. MUST BE >=1ms. Default is 10s.'
                              type: string
                            maxEjectionPercent:
                              description: Maximum % of hosts in the load balancing
                                pool for the upstream service that can be ejected.
                                Defaults to 10%.
                              format: int32
                              type: integer
                          type: object
                        portLevelSettings:
                          description: Traffic policies specific to individual ports.
                            Note that port level settings will override the destination-level
                            settings. Traffic settings specified at the destination-level
                            will not be inherited when overridden by port-level settings,
                            i.e. default values will be applied to fields omitted
                            in port-level traffic policies.
                          items:
                            properties:
                              connectionPool:
                                description: Settings controlling the volume of connections
                                  to an upstream service
                                properties:
                                  http:
                                    description: HTTP connection pool settings.
                                    properties:
                                      maxRequestsPerConnection:
                                        description: Maximum number of requests per
                                          connection to a backend. Setting this parameter
                                          to 1 disables keep alive.
                                        format: int32
                                        type: integer
                                      maxRetries:
                                        description: Maximum number of retries that
                                          can be outstanding to all hosts in a cluster
                                          at a given time. Defaults to 3.
                                        format: int32
                                        type: integer
                                    type: object
                                  tcp:
                                    description: Settings common to both HTTP and
                                      TCP upstream connections.
                                    properties:
                                      connectTimeout:
                                        description: TCP connection timeout.
                                        type: string
                                      maxConnections:
                                        description: Maximum number of HTTP1 /TCP
                                          connections to a destination host.
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                              loadBalancer:
                                description: Settings controlling the load balancer
                                  algorithms.
                                properties:
                                  consistentHash:
                                    properties:
                                      httpCookie:
                                        description: Hash based on HTTP cookie.
                                        properties:
                                          name:
                                            description: REQUIRED. Name of the cookie.
                                            type: string
                                          path:
                                            description: Path to set for the cookie.
                                            type: string
                                          ttl:
                                            description: REQUIRED. Lifetime of the
                                              cookie.
                                            type: string
                                        required:
                                        - name
                                        - ttl
                                        type: object
                                      httpHeaderName:
                                        description: 'It is required to specify exactly
                                          one of the fields as hash key: HttpHeaderName,
                                          HttpCookie, or UseSourceIP. Hash based on
                                          a specific HTTP header.'
                                        type: string
                                      minimumRingSize:
                                        description: The minimum number of virtual
                                          nodes to use for the hash ring. Defaults
                                          to 1024. Larger ring sizes result in more
                                          granular load distributions. If the number
                                          of hosts in the load balancing pool is larger
                                          than the ring size, each host will be assigned
                                          a single virtual node.
                                        format: int64
                                        type: integer
                                      useSourceIp:
                                        description: Hash based on the source IP address.
                                        type: boolean
                                    type: object
                                  simple:
                                    description: 'It is required to specify exactly
                                      one of the fields: Simple or ConsistentHash'
                                    type: string
                                type: object
                              outlierDetection:
                                description: Settings controlling eviction of unhealthy
                                  hosts from the load balancing pool
                                properties:
                                  baseEjectionTime:
                                    description: 'Minimum ejection duration. A host
                                      will remain ejected for a period equal to the
                                      product of minimum ejection duration and the
                                      number of times the host has been ejected. This
                                      technique allows the system to automatically
                                      increase the ejection period for unhealthy upstream
                                      servers. format: 1h/1m/1s/1ms. MUST BE >=1ms.
                                      Default is 30s.'
                                    type: string
                                  consecutiveErrors:
                                    description: Number of errors before a host is
                                      ejected from the connection pool. Defaults to
                                      5. When the upstream host is accessed over HTTP,
                                      a 5xx return code qualifies as an error. When
                                      the upstream host is accessed over an opaque
                                      TCP connection, connect timeouts and connection
                                      error/failure events qualify as an error.
                                    format: int32
                                    type: integer
                                  interval:
                                    description: 'Time interval between ejection sweep
                                      analysis. format: 1h/1m/1s/1ms. MUST BE >=1ms.
                                      Default is 10s.'
                                    type: string
                                  maxEjectionPercent:
                                    description: Maximum % of hosts in the load balancing
                                      pool for the upstream service that can be ejected.
                                      Defaults to 10%.
                                    format: int32
                                    type: integer
                                type: object
                              port:
                                description: Specifies the port name or number of
                                  a port on the destination service on which this
                                  policy is being applied.  Names must comply with
                                  DNS label syntax (rfc1035) and therefore cannot
                                  collide with numbers. If there are multiple ports
                                  on a service with the same protocol the names should
                                  be of the form <protocol-name>-<DNS label>.
                                properties:
                                  name:
                                    description: Valid port name
                                    type: string
                                  number:
                                    description: Valid port number
                                    format: int32
                                    type: integer
                                type: object
                              tls:
                                description: TLS related settings for connections
                                  to the upstream service.
                                properties:
                                  caCertificates:
                                    description: 'OPTIONAL: The path to the file containing
                                      certificate authority certificates to use in
                                      verifying a presented server certificate. If
                                      omitted, the proxy will not verify the server''s
                                      certificate. Should be empty if mode is `ISTIO_MUTUAL`.'
                                    type: string
                                  clientCertificate:
                                    description: REQUIRED if mode is `MUTUAL`. The
                                      path to the file holding the client-side TLS
                                      certificate to use. Should be empty if mode
                                      is `ISTIO_MUTUAL`.
                                    type: string
                                  mode:
                                    description: 'REQUIRED: Indicates whether connections
                                      to this port should be secured using TLS. The
                                      value of this field determines how TLS is enforced.'
                                    type: string
                                  privateKey:
                                    description: REQUIRED if mode is `MUTUAL`. The
                                      path to the file holding the client's private
                                      key. Should be empty if mode is `ISTIO_MUTUAL`.
                                    type: string
                                  sni:
                                    description: SNI string to present to the server
                                      during TLS handshake. Should be empty if mode
                                      is `ISTIO_MUTUAL`.
                                    type: string
                                  subjectAltNames:
                                    description: A list of alternate names to verify
                                      the subject identity in the certificate. If
                                      specified, the proxy will verify that the server
                                      certificate's subject alt name matches one of
                                      the specified values. Should be empty if mode
                                      is `ISTIO_MUTUAL`.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - mode
                                type: object
                            required:
                            - port
                            type: object
                          type: array
                        tls:
                          description: TLS related settings for connections to the
                            upstream service.
                          properties:
                            caCertificates:
                              description: 'OPTIONAL: The path to the file containing
                                certificate authority certificates to use in verifying
                                a presented server certificate. If omitted, the proxy
                                will not verify the server''s certificate. Should
                                be empty if mode is `ISTIO_MUTUAL`.'
                              type: string
                            clientCertificate:
                              description: REQUIRED if mode is `MUTUAL`. The path
                                to the file holding the client-side TLS certificate
                                to use. Should be empty if mode is `ISTIO_MUTUAL`.
                              type: string
                            mode:
                              description: 'REQUIRED: Indicates whether connections
                                to this port should be secured using TLS. The value
                                of this field determines how TLS is enforced.'
                              type: string
                            privateKey:
                              description: REQUIRED if mode is `MUTUAL`. The path
                                to the file holding the client's private key. Should
                                be empty if mode is `ISTIO_MUTUAL`.
                              type: string
                            sni:
                              description: SNI string to present to the server during
                                TLS handshake. Should be empty if mode is `ISTIO_MUTUAL`.
                              type: string
                            subjectAltNames:
                              description: A list of alternate names to verify the
                                subject identity in the certificate. If specified,
                                the proxy will verify that the server certificate's
                                subject alt name matches one of the specified values.
                                Should be empty if mode is `ISTIO_MUTUAL`.
                              items:
                                type: string
                              type: array
                          required:
                          - mode
                          type: object
                      type: object
                  required:
                  - host
                  type: object
              type: object
          type: object
        status:
          type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:56Z"
  generation: 1
  labels:
    controller-tools.k8s.io: "1.0"
  name: strategies.servicemesh.kubesphere.io
  resourceVersion: "1247"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/strategies.servicemesh.kubesphere.io
  uid: e2b8f619-ad13-4d84-890a-70ea12a4c47e
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.type
    description: type of strategy
    name: Type
    type: string
  - JSONPath: .spec.template.spec.hosts
    description: destination hosts
    name: Hosts
    type: string
  - JSONPath: .metadata.creationTimestamp
    description: 'CreationTimestamp is a timestamp representing the server time when
      this object was created. It is not guaranteed to be set in happens-before order
      across separate operations. Clients may not set this value. It is represented
      in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
      lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
    name: Age
    type: date
  conversion:
    strategy: None
  group: servicemesh.kubesphere.io
  names:
    kind: Strategy
    listKind: StrategyList
    plural: strategies
    singular: strategy
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            governor:
              description: Governor version, the version takes control of all incoming
                traffic label version value
              type: string
            principal:
              description: Principal version, the one as reference version label version
                value
              type: string
            selector:
              description: Label selector for virtual services.
              type: object
            strategyPolicy:
              description: strategy policy, how the strategy will be applied by the
                strategy controller
              type: string
            template:
              description: Template describes the virtual service that will be created.
              properties:
                metadata:
                  description: Metadata of the virtual services created from this
                    template
                  type: object
                spec:
                  description: Spec indicates the behavior of a virtual service.
                  properties:
                    gateways:
                      description: The names of gateways and sidecars that should
                        apply these routes. A single VirtualService is used for sidecars
                        inside the mesh as well as for one or more gateways. The selection
                        condition imposed by this field can be overridden using the
                        source field in the match conditions of HTTP/TCP routes. The
                        reserved word "mesh" is used to imply all the sidecars in
                        the mesh. When this field is omitted, the default gateway
                        ("mesh") will be used, which would apply the rule to all sidecars
                        in the mesh. If a list of gateway names is provided, the rules
                        will apply only to the gateways. To apply the rules to both
                        gateways and sidecars, specify "mesh" as one of the gateway
                        names.
                      items:
                        type: string
                      type: array
                    hosts:
                      description: REQUIRED. The destination address for traffic captured
                        by this virtual service. Could be a DNS name with wildcard
                        prefix or a CIDR prefix. Depending on the platform, short-names
                        can also be used instead of a FQDN (i.e. has no dots in the
                        name). In such a scenario, the FQDN of the host would be derived
                        based on the underlying platform.  For example on Kubernetes,
                        when hosts contains a short name, Istio will interpret the
                        short name based on the namespace of the rule. Thus, when
                        a client namespace applies a rule in the "default" namespace
                        containing a name "reviews, Istio will setup routes to the
                        "reviews.default.svc.cluster.local" service. However, if a
                        different name such as "reviews.sales.svc.cluster.local" is
                        used, it would be treated as a FQDN during virtual host matching.
                        In Consul, a plain service name would be resolved to the FQDN
                        "reviews.service.consul".  Note that the hosts field applies
                        to both HTTP and TCP services. Service inside the mesh, i.e.,
                        those found in the service registry, must always be referred
                        to using their alphanumeric names. IP addresses or CIDR prefixes
                        are allowed only for services defined via the Gateway.
                      items:
                        type: string
                      type: array
                    http:
                      description: An ordered list of route rules for HTTP traffic.
                        The first rule matching an incoming request is used.
                      items:
                        properties:
                          appendHeaders:
                            description: Additional HTTP headers to add before forwarding
                              a request to the destination service.
                            type: object
                          corsPolicy:
                            description: Cross-Origin Resource Sharing policy
                            properties:
                              allowCredentials:
                                description: Indicates whether the caller is allowed
                                  to send the actual request (not the preflight) using
                                  credentials. Translates to Access-Control-Allow-Credentials
                                  header.
                                type: boolean
                              allowHeaders:
                                description: List of HTTP headers that can be used
                                  when requesting the resource. Serialized to Access-Control-Allow-Methods
                                  header.
                                items:
                                  type: string
                                type: array
                              allowMethods:
                                description: List of HTTP methods allowed to access
                                  the resource. The content will be serialized into
                                  the Access-Control-Allow-Methods header.
                                items:
                                  type: string
                                type: array
                              allowOrigin:
                                description: The list of origins that are allowed
                                  to perform CORS requests. The content will be serialized
                                  into the Access-Control-Allow-Origin header. Wildcard
                                  * will allow all origins.
                                items:
                                  type: string
                                type: array
                              exposeHeaders:
                                description: A white list of HTTP headers that the
                                  browsers are allowed to access. Serialized into
                                  Access-Control-Expose-Headers header.
                                items:
                                  type: string
                                type: array
                              maxAge:
                                description: Specifies how long the the results of
                                  a preflight request can be cached. Translates to
                                  the Access-Control-Max-Age header.
                                type: string
                            type: object
                          fault:
                            description: Fault injection policy to apply on HTTP traffic.
                            properties:
                              abort:
                                description: Abort Http request attempts and return
                                  error codes back to downstream service, giving the
                                  impression that the upstream service is faulty.
                                properties:
                                  httpStatus:
                                    description: REQUIRED. HTTP status code to use
                                      to abort the Http request.
                                    format: int64
                                    type: integer
                                  percent:
                                    description: Percentage of requests to be aborted
                                      with the error code provided (0-100).
                                    format: int64
                                    type: integer
                                required:
                                - httpStatus
                                type: object
                              delay:
                                description: Delay requests before forwarding, emulating
                                  various failures such as network issues, overloaded
                                  upstream service, etc.
                                properties:
                                  exponentialDelay:
                                    description: (-- Add a delay (based on an exponential
                                      function) before forwarding the request. mean
                                      delay needed to derive the exponential delay
                                      values --)
                                    type: string
                                  fixedDelay:
                                    description: 'REQUIRED. Add a fixed delay before
                                      forwarding the request. Format: 1h/1m/1s/1ms.
                                      MUST be >=1ms.'
                                    type: string
                                  percent:
                                    description: Percentage of requests on which the
                                      delay will be injected (0-100).
                                    format: int64
                                    type: integer
                                required:
                                - fixedDelay
                                type: object
                            type: object
                          match:
                            description: Match conditions to be satisfied for the
                              rule to be activated. All conditions inside a single
                              match block have AND semantics, while the list of match
                              blocks have OR semantics. The rule is matched if any
                              one of the match blocks succeed.
                            items:
                              properties:
                                authority:
                                  description: 'HTTP Authority values are case-sensitive
                                    and formatted as follows:  - `exact: "value"`
                                    for exact string match  - `prefix: "value"` for
                                    prefix-based match  - `regex: "value"` for ECMAscript
                                    style regex-based match'
                                  properties:
                                    exact:
                                      description: exact string match
                                      type: string
                                    prefix:
                                      description: prefix-based match
                                      type: string
                                    regex:
                                      description: ECMAscript style regex-based match
                                      type: string
                                    suffix:
                                      description: suffix-based match.
                                      type: string
                                  type: object
                                gateways:
                                  description: Names of gateways where the rule should
                                    be applied to. Gateway names at the top of the
                                    VirtualService (if any) are overridden. The gateway
                                    match is independent of sourceLabels.
                                  items:
                                    type: string
                                  type: array
                                headers:
                                  description: 'The header keys must be lowercase
                                    and use hyphen as the separator, e.g. _x-request-id_.  Header
                                    values are case-sensitive and formatted as follows:  -
                                    `exact: "value"` for exact string match  - `prefix:
                                    "value"` for prefix-based match  - `regex: "value"`
                                    for ECMAscript style regex-based match  **Note:**
                                    The keys `uri`, `scheme`, `method`, and `authority`
                                    will be ignored.'
                                  type: object
                                method:
                                  description: 'HTTP Method values are case-sensitive
                                    and formatted as follows:  - `exact: "value"`
                                    for exact string match  - `prefix: "value"` for
                                    prefix-based match  - `regex: "value"` for ECMAscript
                                    style regex-based match'
                                  properties:
                                    exact:
                                      description: exact string match
                                      type: string
                                    prefix:
                                      description: prefix-based match
                                      type: string
                                    regex:
                                      description: ECMAscript style regex-based match
                                      type: string
                                    suffix:
                                      description: suffix-based match.
                                      type: string
                                  type: object
                                port:
                                  description: Specifies the ports on the host that
                                    is being addressed. Many services only expose
                                    a single port or label ports with the protocols
                                    they support, in these cases it is not required
                                    to explicitly select the port.
                                  format: int32
                                  type: integer
                                scheme:
                                  description: 'URI Scheme values are case-sensitive
                                    and formatted as follows:  - `exact: "value"`
                                    for exact string match  - `prefix: "value"` for
                                    prefix-based match  - `regex: "value"` for ECMAscript
                                    style regex-based match'
                                  properties:
                                    exact:
                                      description: exact string match
                                      type: string
                                    prefix:
                                      description: prefix-based match
                                      type: string
                                    regex:
                                      description: ECMAscript style regex-based match
                                      type: string
                                    suffix:
                                      description: suffix-based match.
                                      type: string
                                  type: object
                                sourceLabels:
                                  description: One or more labels that constrain the
                                    applicability of a rule to workloads with the
                                    given labels. If the VirtualService has a list
                                    of gateways specified at the top, it should include
                                    the reserved gateway `mesh` in order for this
                                    field to be applicable.
                                  type: object
                                uri:
                                  description: 'URI to match values are case-sensitive
                                    and formatted as follows:  - `exact: "value"`
                                    for exact string match  - `prefix: "value"` for
                                    prefix-based match  - `regex: "value"` for ECMAscript
                                    style regex-based match'
                                  properties:
                                    exact:
                                      description: exact string match
                                      type: string
                                    prefix:
                                      description: prefix-based match
                                      type: string
                                    regex:
                                      description: ECMAscript style regex-based match
                                      type: string
                                    suffix:
                                      description: suffix-based match.
                                      type: string
                                  type: object
                              type: object
                            type: array
                          mirror:
                            description: Mirror HTTP traffic to a another destination
                              in addition to forwarding the requests to the intended
                              destination. Mirrored traffic is on a best effort basis
                              where the sidecar/gateway will not wait for the mirrored
                              cluster to respond before returning the response from
                              the original destination.  Statistics will be generated
                              for the mirrored destination.
                            properties:
                              host:
                                description: 'REQUIRED. The name of a service from
                                  the service registry. Service names are looked up
                                  from the platform''s service registry (e.g., Kubernetes
                                  services, Consul services, etc.) and from the hosts
                                  declared by [ServiceEntry](#ServiceEntry). Traffic
                                  forwarded to destinations that are not found in
                                  either of the two, will be dropped.  *Note for Kubernetes
                                  users*: When short names are used (e.g. "reviews"
                                  instead of "reviews.default.svc.cluster.local"),
                                  Istio will interpret the short name based on the
                                  namespace of the rule, not the service. A rule in
                                  the "default" namespace containing a host "reviews
                                  will be interpreted as "reviews.default.svc.cluster.local",
                                  irrespective of the actual namespace associated
                                  with the reviews service. _To avoid potential misconfigurations,
                                  it is recommended to always use fully qualified
                                  domain names over short names._'
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed. If a service exposes only a single
                                  port it is not required to explicitly select the
                                  port.
                                properties:
                                  name:
                                    description: Valid port name
                                    type: string
                                  number:
                                    description: Valid port number
                                    format: int32
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                  Applicable only to services within the mesh. The
                                  subset must be defined in a corresponding DestinationRule.
                                type: string
                            required:
                            - host
                            type: object
                          redirect:
                            description: A http rule can either redirect or forward
                              (default) traffic. If traffic passthrough option is
                              specified in the rule, route/redirect will be ignored.
                              The redirect primitive can be used to send a HTTP 302
                              redirect to a different URI or Authority.
                            properties:
                              authority:
                                description: On a redirect, overwrite the Authority/Host
                                  portion of the URL with this value.
                                type: string
                              uri:
                                description: On a redirect, overwrite the Path portion
                                  of the URL with this value. Note that the entire
                                  path will be replaced, irrespective of the request
                                  URI being matched as an exact path or prefix.
                                type: string
                            type: object
                          removeResponseHeaders:
                            description: Http headers to remove before returning the
                              response to the caller
                            type: object
                          retries:
                            description: Retry policy for HTTP requests.
                            properties:
                              attempts:
                                description: REQUIRED. Number of retries for a given
                                  request. The interval between retries will be determined
                                  automatically (25ms+). Actual number of retries
                                  attempted depends on the httpReqTimeout.
                                format: int64
                                type: integer
                              perTryTimeout:
                                description: 'Timeout per retry attempt for a given
                                  request. format: 1h/1m/1s/1ms. MUST BE >=1ms.'
                                type: string
                            required:
                            - attempts
                            - perTryTimeout
                            type: object
                          rewrite:
                            description: Rewrite HTTP URIs and Authority headers.
                              Rewrite cannot be used with Redirect primitive. Rewrite
                              will be performed before forwarding.
                            properties:
                              authority:
                                description: rewrite the Authority/Host header with
                                  this value.
                                type: string
                              uri:
                                description: rewrite the path (or the prefix) portion
                                  of the URI with this value. If the original URI
                                  was matched based on prefix, the value provided
                                  in this field will replace the corresponding matched
                                  prefix.
                                type: string
                            type: object
                          route:
                            description: A http rule can either redirect or forward
                              (default) traffic. The forwarding target can be one
                              of several versions of a service (see glossary in beginning
                              of document). Weights associated with the service version
                              determine the proportion of traffic it receives.
                            items:
                              properties:
                                destination:
                                  description: REQUIRED. Destination uniquely identifies
                                    the instances of a service to which the request/connection
                                    should be forwarded to.
                                  properties:
                                    host:
                                      description: 'REQUIRED. The name of a service
                                        from the service registry. Service names are
                                        looked up from the platform''s service registry
                                        (e.g., Kubernetes services, Consul services,
                                        etc.) and from the hosts declared by [ServiceEntry](#ServiceEntry).
                                        Traffic forwarded to destinations that are
                                        not found in either of the two, will be dropped.  *Note
                                        for Kubernetes users*: When short names are
                                        used (e.g. "reviews" instead of "reviews.default.svc.cluster.local"),
                                        Istio will interpret the short name based
                                        on the namespace of the rule, not the service.
                                        A rule in the "default" namespace containing
                                        a host "reviews will be interpreted as "reviews.default.svc.cluster.local",
                                        irrespective of the actual namespace associated
                                        with the reviews service. _To avoid potential
                                        misconfigurations, it is recommended to always
                                        use fully qualified domain names over short
                                        names._'
                                      type: string
                                    port:
                                      description: Specifies the port on the host
                                        that is being addressed. If a service exposes
                                        only a single port it is not required to explicitly
                                        select the port.
                                      properties:
                                        name:
                                          description: Valid port name
                                          type: string
                                        number:
                                          description: Valid port number
                                          format: int32
                                          type: integer
                                      type: object
                                    subset:
                                      description: The name of a subset within the
                                        service. Applicable only to services within
                                        the mesh. The subset must be defined in a
                                        corresponding DestinationRule.
                                      type: string
                                  required:
                                  - host
                                  type: object
                                weight:
                                  description: REQUIRED. The proportion of traffic
                                    to be forwarded to the service version. (0-100).
                                    Sum of weights across destinations SHOULD BE ==
                                    100. If there is only destination in a rule, the
                                    weight value is assumed to be 100.
                                  format: int64
                                  type: integer
                              required:
                              - destination
                              - weight
                              type: object
                            type: array
                          timeout:
                            description: Timeout for HTTP requests.
                            type: string
                          websocketUpgrade:
                            description: Indicates that a HTTP/1.1 client connection
                              to this particular route should be allowed (and expected)
                              to upgrade to a WebSocket connection. The default is
                              false. Istio's reference sidecar implementation (Envoy)
                              expects the first request to this route to contain the
                              WebSocket upgrade headers. Otherwise, the request will
                              be rejected. Note that Websocket allows secondary protocol
                              negotiation which may then be subject to further routing
                              rules based on the protocol selected.
                            type: boolean
                        type: object
                      type: array
                    tcp:
                      description: An ordered list of route rules for TCP traffic.
                        The first rule matching an incoming request is used.
                      items:
                        properties:
                          match:
                            description: Match conditions to be satisfied for the
                              rule to be activated. All conditions inside a single
                              match block have AND semantics, while the list of match
                              blocks have OR semantics. The rule is matched if any
                              one of the match blocks succeed.
                            items:
                              properties:
                                destinationSubnets:
                                  description: IPv4 or IPv6 ip address of destination
                                    with optional subnet.  E.g., a.b.c.d/xx form or
                                    just a.b.c.d.
                                  items:
                                    type: string
                                  type: array
                                gateways:
                                  description: Names of gateways where the rule should
                                    be applied to. Gateway names at the top of the
                                    VirtualService (if any) are overridden. The gateway
                                    match is independent of sourceLabels.
                                  items:
                                    type: string
                                  type: array
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed. Many services only expose
                                    a single port or label ports with the protocols
                                    they support, in these cases it is not required
                                    to explicitly select the port.
                                  format: int64
                                  type: integer
                                sourceLabels:
                                  description: One or more labels that constrain the
                                    applicability of a rule to workloads with the
                                    given labels. If the VirtualService has a list
                                    of gateways specified at the top, it should include
                                    the reserved gateway `mesh` in order for this
                                    field to be applicable.
                                  type: object
                              type: object
                            type: array
                          route:
                            description: The destinations to which the connection
                              should be forwarded to. Weights must add to 100%.
                            items:
                              properties:
                                destination:
                                  description: REQUIRED. Destination uniquely identifies
                                    the instances of a service to which the request/connection
                                    should be forwarded to.
                                  properties:
                                    host:
                                      description: 'REQUIRED. The name of a service
                                        from the service registry. Service names are
                                        looked up from the platform''s service registry
                                        (e.g., Kubernetes services, Consul services,
                                        etc.) and from the hosts declared by [ServiceEntry](#ServiceEntry).
                                        Traffic forwarded to destinations that are
                                        not found in either of the two, will be dropped.  *Note
                                        for Kubernetes users*: When short names are
                                        used (e.g. "reviews" instead of "reviews.default.svc.cluster.local"),
                                        Istio will interpret the short name based
                                        on the namespace of the rule, not the service.
                                        A rule in the "default" namespace containing
                                        a host "reviews will be interpreted as "reviews.default.svc.cluster.local",
                                        irrespective of the actual namespace associated
                                        with the reviews service. _To avoid potential
                                        misconfigurations, it is recommended to always
                                        use fully qualified domain names over short
                                        names._'
                                      type: string
                                    port:
                                      description: Specifies the port on the host
                                        that is being addressed. If a service exposes
                                        only a single port it is not required to explicitly
                                        select the port.
                                      properties:
                                        name:
                                          description: Valid port name
                                          type: string
                                        number:
                                          description: Valid port number
                                          format: int32
                                          type: integer
                                      type: object
                                    subset:
                                      description: The name of a subset within the
                                        service. Applicable only to services within
                                        the mesh. The subset must be defined in a
                                        corresponding DestinationRule.
                                      type: string
                                  required:
                                  - host
                                  type: object
                                weight:
                                  description: REQUIRED. The proportion of traffic
                                    to be forwarded to the service version. (0-100).
                                    Sum of weights across destinations SHOULD BE ==
                                    100. If there is only destination in a rule, the
                                    weight value is assumed to be 100.
                                  format: int64
                                  type: integer
                              required:
                              - destination
                              - weight
                              type: object
                            type: array
                        required:
                        - match
                        - route
                        type: object
                      type: array
                    tls:
                      items:
                        properties:
                          match:
                            description: REQUIRED. Match conditions to be satisfied
                              for the rule to be activated. All conditions inside
                              a single match block have AND semantics, while the list
                              of match blocks have OR semantics. The rule is matched
                              if any one of the match blocks succeed.
                            items:
                              properties:
                                destinationSubnets:
                                  description: IPv4 or IPv6 ip addresses of destination
                                    with optional subnet.  E.g., a.b.c.d/xx form or
                                    just a.b.c.d.
                                  items:
                                    type: string
                                  type: array
                                gateways:
                                  description: Names of gateways where the rule should
                                    be applied to. Gateway names at the top of the
                                    VirtualService (if any) are overridden. The gateway
                                    match is independent of sourceLabels.
                                  items:
                                    type: string
                                  type: array
                                port:
                                  description: Specifies the port on the host that
                                    is being addressed. Many services only expose
                                    a single port or label ports with the protocols
                                    they support, in these cases it is not required
                                    to explicitly select the port.
                                  format: int64
                                  type: integer
                                sniHosts:
                                  description: REQUIRED. SNI (server name indicator)
                                    to match on. Wildcard prefixes can be used in
                                    the SNI value, e.g., *.com will match foo.example.com
                                    as well as example.com. An SNI value must be a
                                    subset (i.e., fall within the domain) of the corresponding
                                    virtual service's hosts
                                  items:
                                    type: string
                                  type: array
                                sourceLabels:
                                  description: One or more labels that constrain the
                                    applicability of a rule to workloads with the
                                    given labels. If the VirtualService has a list
                                    of gateways specified at the top, it should include
                                    the reserved gateway `mesh` in order for this
                                    field to be applicable.
                                  type: object
                              required:
                              - sniHosts
                              type: object
                            type: array
                          route:
                            description: The destination to which the connection should
                              be forwarded to.
                            items:
                              properties:
                                destination:
                                  description: REQUIRED. Destination uniquely identifies
                                    the instances of a service to which the request/connection
                                    should be forwarded to.
                                  properties:
                                    host:
                                      description: 'REQUIRED. The name of a service
                                        from the service registry. Service names are
                                        looked up from the platform''s service registry
                                        (e.g., Kubernetes services, Consul services,
                                        etc.) and from the hosts declared by [ServiceEntry](#ServiceEntry).
                                        Traffic forwarded to destinations that are
                                        not found in either of the two, will be dropped.  *Note
                                        for Kubernetes users*: When short names are
                                        used (e.g. "reviews" instead of "reviews.default.svc.cluster.local"),
                                        Istio will interpret the short name based
                                        on the namespace of the rule, not the service.
                                        A rule in the "default" namespace containing
                                        a host "reviews will be interpreted as "reviews.default.svc.cluster.local",
                                        irrespective of the actual namespace associated
                                        with the reviews service. _To avoid potential
                                        misconfigurations, it is recommended to always
                                        use fully qualified domain names over short
                                        names._'
                                      type: string
                                    port:
                                      description: Specifies the port on the host
                                        that is being addressed. If a service exposes
                                        only a single port it is not required to explicitly
                                        select the port.
                                      properties:
                                        name:
                                          description: Valid port name
                                          type: string
                                        number:
                                          description: Valid port number
                                          format: int32
                                          type: integer
                                      type: object
                                    subset:
                                      description: The name of a subset within the
                                        service. Applicable only to services within
                                        the mesh. The subset must be defined in a
                                        corresponding DestinationRule.
                                      type: string
                                  required:
                                  - host
                                  type: object
                                weight:
                                  description: REQUIRED. The proportion of traffic
                                    to be forwarded to the service version. (0-100).
                                    Sum of weights across destinations SHOULD BE ==
                                    100. If there is only destination in a rule, the
                                    weight value is assumed to be 100.
                                  format: int64
                                  type: integer
                              required:
                              - destination
                              - weight
                              type: object
                            type: array
                        required:
                        - match
                        - route
                        type: object
                      type: array
                  required:
                  - hosts
                  type: object
              type: object
            type:
              description: Strategy type
              type: string
          type: object
        status:
          type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:56Z"
  generation: 1
  labels:
    controller-tools.k8s.io: "1.0"
  name: virtualservices.networking.istio.io
  resourceVersion: "1233"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/virtualservices.networking.istio.io
  uid: 3989badb-418a-4c79-9082-684d52705d46
spec:
  conversion:
    strategy: None
  group: networking.istio.io
  names:
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    singular: virtualservice
  preserveUnknownFields: true
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            gateways:
              description: The names of gateways and sidecars that should apply these
                routes. A single VirtualService is used for sidecars inside the mesh
                as well as for one or more gateways. The selection condition imposed
                by this field can be overridden using the source field in the match
                conditions of HTTP/TCP routes. The reserved word "mesh" is used to
                imply all the sidecars in the mesh. When this field is omitted, the
                default gateway ("mesh") will be used, which would apply the rule
                to all sidecars in the mesh. If a list of gateway names is provided,
                the rules will apply only to the gateways. To apply the rules to both
                gateways and sidecars, specify "mesh" as one of the gateway names.
              items:
                type: string
              type: array
            hosts:
              description: REQUIRED. The destination address for traffic captured
                by this virtual service. Could be a DNS name with wildcard prefix
                or a CIDR prefix. Depending on the platform, short-names can also
                be used instead of a FQDN (i.e. has no dots in the name). In such
                a scenario, the FQDN of the host would be derived based on the underlying
                platform.  For example on Kubernetes, when hosts contains a short
                name, Istio will interpret the short name based on the namespace of
                the rule. Thus, when a client namespace applies a rule in the "default"
                namespace containing a name "reviews, Istio will setup routes to the
                "reviews.default.svc.cluster.local" service. However, if a different
                name such as "reviews.sales.svc.cluster.local" is used, it would be
                treated as a FQDN during virtual host matching. In Consul, a plain
                service name would be resolved to the FQDN "reviews.service.consul".  Note
                that the hosts field applies to both HTTP and TCP services. Service
                inside the mesh, i.e., those found in the service registry, must always
                be referred to using their alphanumeric names. IP addresses or CIDR
                prefixes are allowed only for services defined via the Gateway.
              items:
                type: string
              type: array
            http:
              description: An ordered list of route rules for HTTP traffic. The first
                rule matching an incoming request is used.
              items:
                properties:
                  appendHeaders:
                    description: Additional HTTP headers to add before forwarding
                      a request to the destination service.
                    type: object
                  corsPolicy:
                    description: Cross-Origin Resource Sharing policy
                    properties:
                      allowCredentials:
                        description: Indicates whether the caller is allowed to send
                          the actual request (not the preflight) using credentials.
                          Translates to Access-Control-Allow-Credentials header.
                        type: boolean
                      allowHeaders:
                        description: List of HTTP headers that can be used when requesting
                          the resource. Serialized to Access-Control-Allow-Methods
                          header.
                        items:
                          type: string
                        type: array
                      allowMethods:
                        description: List of HTTP methods allowed to access the resource.
                          The content will be serialized into the Access-Control-Allow-Methods
                          header.
                        items:
                          type: string
                        type: array
                      allowOrigin:
                        description: The list of origins that are allowed to perform
                          CORS requests. The content will be serialized into the Access-Control-Allow-Origin
                          header. Wildcard * will allow all origins.
                        items:
                          type: string
                        type: array
                      exposeHeaders:
                        description: A white list of HTTP headers that the browsers
                          are allowed to access. Serialized into Access-Control-Expose-Headers
                          header.
                        items:
                          type: string
                        type: array
                      maxAge:
                        description: Specifies how long the the results of a preflight
                          request can be cached. Translates to the Access-Control-Max-Age
                          header.
                        type: string
                    type: object
                  fault:
                    description: Fault injection policy to apply on HTTP traffic.
                    properties:
                      abort:
                        description: Abort Http request attempts and return error
                          codes back to downstream service, giving the impression
                          that the upstream service is faulty.
                        properties:
                          httpStatus:
                            description: REQUIRED. HTTP status code to use to abort
                              the Http request.
                            format: int64
                            type: integer
                          percent:
                            description: Percentage of requests to be aborted with
                              the error code provided (0-100).
                            format: int64
                            type: integer
                        required:
                        - httpStatus
                        type: object
                      delay:
                        description: Delay requests before forwarding, emulating various
                          failures such as network issues, overloaded upstream service,
                          etc.
                        properties:
                          exponentialDelay:
                            description: (-- Add a delay (based on an exponential
                              function) before forwarding the request. mean delay
                              needed to derive the exponential delay values --)
                            type: string
                          fixedDelay:
                            description: 'REQUIRED. Add a fixed delay before forwarding
                              the request. Format: 1h/1m/1s/1ms. MUST be >=1ms.'
                            type: string
                          percent:
                            description: Percentage of requests on which the delay
                              will be injected (0-100).
                            format: int64
                            type: integer
                        required:
                        - fixedDelay
                        type: object
                    type: object
                  match:
                    description: Match conditions to be satisfied for the rule to
                      be activated. All conditions inside a single match block have
                      AND semantics, while the list of match blocks have OR semantics.
                      The rule is matched if any one of the match blocks succeed.
                    items:
                      properties:
                        authority:
                          description: 'HTTP Authority values are case-sensitive and
                            formatted as follows:  - `exact: "value"` for exact string
                            match  - `prefix: "value"` for prefix-based match  - `regex:
                            "value"` for ECMAscript style regex-based match'
                          properties:
                            exact:
                              description: exact string match
                              type: string
                            prefix:
                              description: prefix-based match
                              type: string
                            regex:
                              description: ECMAscript style regex-based match
                              type: string
                            suffix:
                              description: suffix-based match.
                              type: string
                          type: object
                        gateways:
                          description: Names of gateways where the rule should be
                            applied to. Gateway names at the top of the VirtualService
                            (if any) are overridden. The gateway match is independent
                            of sourceLabels.
                          items:
                            type: string
                          type: array
                        headers:
                          description: 'The header keys must be lowercase and use
                            hyphen as the separator, e.g. _x-request-id_.  Header
                            values are case-sensitive and formatted as follows:  -
                            `exact: "value"` for exact string match  - `prefix: "value"`
                            for prefix-based match  - `regex: "value"` for ECMAscript
                            style regex-based match  **Note:** The keys `uri`, `scheme`,
                            `method`, and `authority` will be ignored.'
                          type: object
                        method:
                          description: 'HTTP Method values are case-sensitive and
                            formatted as follows:  - `exact: "value"` for exact string
                            match  - `prefix: "value"` for prefix-based match  - `regex:
                            "value"` for ECMAscript style regex-based match'
                          properties:
                            exact:
                              description: exact string match
                              type: string
                            prefix:
                              description: prefix-based match
                              type: string
                            regex:
                              description: ECMAscript style regex-based match
                              type: string
                            suffix:
                              description: suffix-based match.
                              type: string
                          type: object
                        port:
                          description: Specifies the ports on the host that is being
                            addressed. Many services only expose a single port or
                            label ports with the protocols they support, in these
                            cases it is not required to explicitly select the port.
                          format: int32
                          type: integer
                        scheme:
                          description: 'URI Scheme values are case-sensitive and formatted
                            as follows:  - `exact: "value"` for exact string match  -
                            `prefix: "value"` for prefix-based match  - `regex: "value"`
                            for ECMAscript style regex-based match'
                          properties:
                            exact:
                              description: exact string match
                              type: string
                            prefix:
                              description: prefix-based match
                              type: string
                            regex:
                              description: ECMAscript style regex-based match
                              type: string
                            suffix:
                              description: suffix-based match.
                              type: string
                          type: object
                        sourceLabels:
                          description: One or more labels that constrain the applicability
                            of a rule to workloads with the given labels. If the VirtualService
                            has a list of gateways specified at the top, it should
                            include the reserved gateway `mesh` in order for this
                            field to be applicable.
                          type: object
                        uri:
                          description: 'URI to match values are case-sensitive and
                            formatted as follows:  - `exact: "value"` for exact string
                            match  - `prefix: "value"` for prefix-based match  - `regex:
                            "value"` for ECMAscript style regex-based match'
                          properties:
                            exact:
                              description: exact string match
                              type: string
                            prefix:
                              description: prefix-based match
                              type: string
                            regex:
                              description: ECMAscript style regex-based match
                              type: string
                            suffix:
                              description: suffix-based match.
                              type: string
                          type: object
                      type: object
                    type: array
                  mirror:
                    description: Mirror HTTP traffic to a another destination in addition
                      to forwarding the requests to the intended destination. Mirrored
                      traffic is on a best effort basis where the sidecar/gateway
                      will not wait for the mirrored cluster to respond before returning
                      the response from the original destination.  Statistics will
                      be generated for the mirrored destination.
                    properties:
                      host:
                        description: 'REQUIRED. The name of a service from the service
                          registry. Service names are looked up from the platform''s
                          service registry (e.g., Kubernetes services, Consul services,
                          etc.) and from the hosts declared by [ServiceEntry](#ServiceEntry).
                          Traffic forwarded to destinations that are not found in
                          either of the two, will be dropped.  *Note for Kubernetes
                          users*: When short names are used (e.g. "reviews" instead
                          of "reviews.default.svc.cluster.local"), Istio will interpret
                          the short name based on the namespace of the rule, not the
                          service. A rule in the "default" namespace containing a
                          host "reviews will be interpreted as "reviews.default.svc.cluster.local",
                          irrespective of the actual namespace associated with the
                          reviews service. _To avoid potential misconfigurations,
                          it is recommended to always use fully qualified domain names
                          over short names._'
                        type: string
                      port:
                        description: Specifies the port on the host that is being
                          addressed. If a service exposes only a single port it is
                          not required to explicitly select the port.
                        properties:
                          name:
                            description: Valid port name
                            type: string
                          number:
                            description: Valid port number
                            format: int32
                            type: integer
                        type: object
                      subset:
                        description: The name of a subset within the service. Applicable
                          only to services within the mesh. The subset must be defined
                          in a corresponding DestinationRule.
                        type: string
                    required:
                    - host
                    type: object
                  redirect:
                    description: A http rule can either redirect or forward (default)
                      traffic. If traffic passthrough option is specified in the rule,
                      route/redirect will be ignored. The redirect primitive can be
                      used to send a HTTP 302 redirect to a different URI or Authority.
                    properties:
                      authority:
                        description: On a redirect, overwrite the Authority/Host portion
                          of the URL with this value.
                        type: string
                      uri:
                        description: On a redirect, overwrite the Path portion of
                          the URL with this value. Note that the entire path will
                          be replaced, irrespective of the request URI being matched
                          as an exact path or prefix.
                        type: string
                    type: object
                  removeResponseHeaders:
                    description: Http headers to remove before returning the response
                      to the caller
                    type: object
                  retries:
                    description: Retry policy for HTTP requests.
                    properties:
                      attempts:
                        description: REQUIRED. Number of retries for a given request.
                          The interval between retries will be determined automatically
                          (25ms+). Actual number of retries attempted depends on the
                          httpReqTimeout.
                        format: int64
                        type: integer
                      perTryTimeout:
                        description: 'Timeout per retry attempt for a given request.
                          format: 1h/1m/1s/1ms. MUST BE >=1ms.'
                        type: string
                    required:
                    - attempts
                    - perTryTimeout
                    type: object
                  rewrite:
                    description: Rewrite HTTP URIs and Authority headers. Rewrite
                      cannot be used with Redirect primitive. Rewrite will be performed
                      before forwarding.
                    properties:
                      authority:
                        description: rewrite the Authority/Host header with this value.
                        type: string
                      uri:
                        description: rewrite the path (or the prefix) portion of the
                          URI with this value. If the original URI was matched based
                          on prefix, the value provided in this field will replace
                          the corresponding matched prefix.
                        type: string
                    type: object
                  route:
                    description: A http rule can either redirect or forward (default)
                      traffic. The forwarding target can be one of several versions
                      of a service (see glossary in beginning of document). Weights
                      associated with the service version determine the proportion
                      of traffic it receives.
                    items:
                      properties:
                        destination:
                          description: REQUIRED. Destination uniquely identifies the
                            instances of a service to which the request/connection
                            should be forwarded to.
                          properties:
                            host:
                              description: 'REQUIRED. The name of a service from the
                                service registry. Service names are looked up from
                                the platform''s service registry (e.g., Kubernetes
                                services, Consul services, etc.) and from the hosts
                                declared by [ServiceEntry](#ServiceEntry). Traffic
                                forwarded to destinations that are not found in either
                                of the two, will be dropped.  *Note for Kubernetes
                                users*: When short names are used (e.g. "reviews"
                                instead of "reviews.default.svc.cluster.local"), Istio
                                will interpret the short name based on the namespace
                                of the rule, not the service. A rule in the "default"
                                namespace containing a host "reviews will be interpreted
                                as "reviews.default.svc.cluster.local", irrespective
                                of the actual namespace associated with the reviews
                                service. _To avoid potential misconfigurations, it
                                is recommended to always use fully qualified domain
                                names over short names._'
                              type: string
                            port:
                              description: Specifies the port on the host that is
                                being addressed. If a service exposes only a single
                                port it is not required to explicitly select the port.
                              properties:
                                name:
                                  description: Valid port name
                                  type: string
                                number:
                                  description: Valid port number
                                  format: int32
                                  type: integer
                              type: object
                            subset:
                              description: The name of a subset within the service.
                                Applicable only to services within the mesh. The subset
                                must be defined in a corresponding DestinationRule.
                              type: string
                          required:
                          - host
                          type: object
                        weight:
                          description: REQUIRED. The proportion of traffic to be forwarded
                            to the service version. (0-100). Sum of weights across
                            destinations SHOULD BE == 100. If there is only destination
                            in a rule, the weight value is assumed to be 100.
                          format: int64
                          type: integer
                      required:
                      - destination
                      - weight
                      type: object
                    type: array
                  timeout:
                    description: Timeout for HTTP requests.
                    type: string
                  websocketUpgrade:
                    description: Indicates that a HTTP/1.1 client connection to this
                      particular route should be allowed (and expected) to upgrade
                      to a WebSocket connection. The default is false. Istio's reference
                      sidecar implementation (Envoy) expects the first request to
                      this route to contain the WebSocket upgrade headers. Otherwise,
                      the request will be rejected. Note that Websocket allows secondary
                      protocol negotiation which may then be subject to further routing
                      rules based on the protocol selected.
                    type: boolean
                type: object
              type: array
            tcp:
              description: An ordered list of route rules for TCP traffic. The first
                rule matching an incoming request is used.
              items:
                properties:
                  match:
                    description: Match conditions to be satisfied for the rule to
                      be activated. All conditions inside a single match block have
                      AND semantics, while the list of match blocks have OR semantics.
                      The rule is matched if any one of the match blocks succeed.
                    items:
                      properties:
                        destinationSubnets:
                          description: IPv4 or IPv6 ip address of destination with
                            optional subnet.  E.g., a.b.c.d/xx form or just a.b.c.d.
                          items:
                            type: string
                          type: array
                        gateways:
                          description: Names of gateways where the rule should be
                            applied to. Gateway names at the top of the VirtualService
                            (if any) are overridden. The gateway match is independent
                            of sourceLabels.
                          items:
                            type: string
                          type: array
                        port:
                          description: Specifies the port on the host that is being
                            addressed. Many services only expose a single port or
                            label ports with the protocols they support, in these
                            cases it is not required to explicitly select the port.
                          format: int64
                          type: integer
                        sourceLabels:
                          description: One or more labels that constrain the applicability
                            of a rule to workloads with the given labels. If the VirtualService
                            has a list of gateways specified at the top, it should
                            include the reserved gateway `mesh` in order for this
                            field to be applicable.
                          type: object
                      type: object
                    type: array
                  route:
                    description: The destinations to which the connection should be
                      forwarded to. Weights must add to 100%.
                    items:
                      properties:
                        destination:
                          description: REQUIRED. Destination uniquely identifies the
                            instances of a service to which the request/connection
                            should be forwarded to.
                          properties:
                            host:
                              description: 'REQUIRED. The name of a service from the
                                service registry. Service names are looked up from
                                the platform''s service registry (e.g., Kubernetes
                                services, Consul services, etc.) and from the hosts
                                declared by [ServiceEntry](#ServiceEntry). Traffic
                                forwarded to destinations that are not found in either
                                of the two, will be dropped.  *Note for Kubernetes
                                users*: When short names are used (e.g. "reviews"
                                instead of "reviews.default.svc.cluster.local"), Istio
                                will interpret the short name based on the namespace
                                of the rule, not the service. A rule in the "default"
                                namespace containing a host "reviews will be interpreted
                                as "reviews.default.svc.cluster.local", irrespective
                                of the actual namespace associated with the reviews
                                service. _To avoid potential misconfigurations, it
                                is recommended to always use fully qualified domain
                                names over short names._'
                              type: string
                            port:
                              description: Specifies the port on the host that is
                                being addressed. If a service exposes only a single
                                port it is not required to explicitly select the port.
                              properties:
                                name:
                                  description: Valid port name
                                  type: string
                                number:
                                  description: Valid port number
                                  format: int32
                                  type: integer
                              type: object
                            subset:
                              description: The name of a subset within the service.
                                Applicable only to services within the mesh. The subset
                                must be defined in a corresponding DestinationRule.
                              type: string
                          required:
                          - host
                          type: object
                        weight:
                          description: REQUIRED. The proportion of traffic to be forwarded
                            to the service version. (0-100). Sum of weights across
                            destinations SHOULD BE == 100. If there is only destination
                            in a rule, the weight value is assumed to be 100.
                          format: int64
                          type: integer
                      required:
                      - destination
                      - weight
                      type: object
                    type: array
                required:
                - match
                - route
                type: object
              type: array
            tls:
              items:
                properties:
                  match:
                    description: REQUIRED. Match conditions to be satisfied for the
                      rule to be activated. All conditions inside a single match block
                      have AND semantics, while the list of match blocks have OR semantics.
                      The rule is matched if any one of the match blocks succeed.
                    items:
                      properties:
                        destinationSubnets:
                          description: IPv4 or IPv6 ip addresses of destination with
                            optional subnet.  E.g., a.b.c.d/xx form or just a.b.c.d.
                          items:
                            type: string
                          type: array
                        gateways:
                          description: Names of gateways where the rule should be
                            applied to. Gateway names at the top of the VirtualService
                            (if any) are overridden. The gateway match is independent
                            of sourceLabels.
                          items:
                            type: string
                          type: array
                        port:
                          description: Specifies the port on the host that is being
                            addressed. Many services only expose a single port or
                            label ports with the protocols they support, in these
                            cases it is not required to explicitly select the port.
                          format: int64
                          type: integer
                        sniHosts:
                          description: REQUIRED. SNI (server name indicator) to match
                            on. Wildcard prefixes can be used in the SNI value, e.g.,
                            *.com will match foo.example.com as well as example.com.
                            An SNI value must be a subset (i.e., fall within the domain)
                            of the corresponding virtual service's hosts
                          items:
                            type: string
                          type: array
                        sourceLabels:
                          description: One or more labels that constrain the applicability
                            of a rule to workloads with the given labels. If the VirtualService
                            has a list of gateways specified at the top, it should
                            include the reserved gateway `mesh` in order for this
                            field to be applicable.
                          type: object
                      required:
                      - sniHosts
                      type: object
                    type: array
                  route:
                    description: The destination to which the connection should be
                      forwarded to.
                    items:
                      properties:
                        destination:
                          description: REQUIRED. Destination uniquely identifies the
                            instances of a service to which the request/connection
                            should be forwarded to.
                          properties:
                            host:
                              description: 'REQUIRED. The name of a service from the
                                service registry. Service names are looked up from
                                the platform''s service registry (e.g., Kubernetes
                                services, Consul services, etc.) and from the hosts
                                declared by [ServiceEntry](#ServiceEntry). Traffic
                                forwarded to destinations that are not found in either
                                of the two, will be dropped.  *Note for Kubernetes
                                users*: When short names are used (e.g. "reviews"
                                instead of "reviews.default.svc.cluster.local"), Istio
                                will interpret the short name based on the namespace
                                of the rule, not the service. A rule in the "default"
                                namespace containing a host "reviews will be interpreted
                                as "reviews.default.svc.cluster.local", irrespective
                                of the actual namespace associated with the reviews
                                service. _To avoid potential misconfigurations, it
                                is recommended to always use fully qualified domain
                                names over short names._'
                              type: string
                            port:
                              description: Specifies the port on the host that is
                                being addressed. If a service exposes only a single
                                port it is not required to explicitly select the port.
                              properties:
                                name:
                                  description: Valid port name
                                  type: string
                                number:
                                  description: Valid port number
                                  format: int32
                                  type: integer
                              type: object
                            subset:
                              description: The name of a subset within the service.
                                Applicable only to services within the mesh. The subset
                                must be defined in a corresponding DestinationRule.
                              type: string
                          required:
                          - host
                          type: object
                        weight:
                          description: REQUIRED. The proportion of traffic to be forwarded
                            to the service version. (0-100). Sum of weights across
                            destinations SHOULD BE == 100. If there is only destination
                            in a rule, the weight value is assumed to be 100.
                          format: int64
                          type: integer
                      required:
                      - destination
                      - weight
                      type: object
                    type: array
                required:
                - match
                - route
                type: object
              type: array
          required:
          - hosts
          type: object
      required:
      - spec
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: "2019-11-09T10:40:56Z"
  generation: 1
  labels:
    controller-tools.k8s.io: "1.0"
  name: workspaces.tenant.kubesphere.io
  resourceVersion: "1245"
  selfLink: /apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions/workspaces.tenant.kubesphere.io
  uid: 8faeb0f6-8eb0-4602-ac60-528fb10b0244
spec:
  conversion:
    strategy: None
  group: tenant.kubesphere.io
  names:
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    singular: workspace
  preserveUnknownFields: true
  scope: Cluster
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            manager:
              type: string
            quotas:
              type: object
          type: object
        status:
          properties:
            quotas:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              type: object
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---

# Secrets
---
apiVersion: v1
data:
  prometheus-additional.yaml: ICAgIC0gam9iX25hbWU6ICdpc3Rpby1tZXNoJwogICAgICBzY3JhcGVfaW50ZXJ2YWw6IDE1cwogICAgICBrdWJlcm5ldGVzX3NkX2NvbmZpZ3M6CiAgICAgIC0gcm9sZTogZW5kcG9pbnRzCiAgICAgICAgbmFtZXNwYWNlczoKICAgICAgICAgIG5hbWVzOgogICAgICAgICAgLSBpc3Rpby1zeXN0ZW0KICAgICAgcmVsYWJlbF9jb25maWdzOgogICAgICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX25hbWUsIF9fbWV0YV9rdWJlcm5ldGVzX2VuZHBvaW50X3BvcnRfbmFtZV0KICAgICAgICBhY3Rpb246IGtlZXAKICAgICAgICByZWdleDogaXN0aW8tdGVsZW1ldHJ5O3Byb21ldGhldXMKICAgIC0gam9iX25hbWU6ICdpc3Rpby1lbnZveScKICAgICAgc2NyYXBlX2ludGVydmFsOiAxNXMKICAgICAga3ViZXJuZXRlc19zZF9jb25maWdzOgogICAgICAtIHJvbGU6IGVuZHBvaW50cwogICAgICAgIG5hbWVzcGFjZXM6CiAgICAgICAgICBuYW1lczoKICAgICAgICAgIC0gaXN0aW8tc3lzdGVtCiAgICAgIHJlbGFiZWxfY29uZmlnczoKICAgICAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9uYW1lLCBfX21ldGFfa3ViZXJuZXRlc19lbmRwb2ludF9wb3J0X25hbWVdCiAgICAgICAgYWN0aW9uOiBrZWVwCiAgICAgICAgcmVnZXg6IGlzdGlvLXN0YXRzZC1wcm9tLWJyaWRnZTtzdGF0c2QtcHJvbQogICAgLSBqb2JfbmFtZTogJ2lzdGlvLXBvbGljeScKICAgICAgc2NyYXBlX2ludGVydmFsOiAxNXMKICAgICAga3ViZXJuZXRlc19zZF9jb25maWdzOgogICAgICAtIHJvbGU6IGVuZHBvaW50cwogICAgICAgIG5hbWVzcGFjZXM6CiAgICAgICAgICBuYW1lczoKICAgICAgICAgIC0gaXN0aW8tc3lzdGVtCiAgICAgIHJlbGFiZWxfY29uZmlnczoKICAgICAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9uYW1lLCBfX21ldGFfa3ViZXJuZXRlc19lbmRwb2ludF9wb3J0X25hbWVdCiAgICAgICAgYWN0aW9uOiBrZWVwCiAgICAgICAgcmVnZXg6IGlzdGlvLXBvbGljeTtodHRwLW1vbml0b3JpbmcKICAgIC0gam9iX25hbWU6ICdpc3Rpby10ZWxlbWV0cnknCiAgICAgIHNjcmFwZV9pbnRlcnZhbDogMTVzCiAgICAgIGt1YmVybmV0ZXNfc2RfY29uZmlnczoKICAgICAgLSByb2xlOiBlbmRwb2ludHMKICAgICAgICBuYW1lc3BhY2VzOgogICAgICAgICAgbmFtZXM6CiAgICAgICAgICAtIGlzdGlvLXN5c3RlbQogICAgICByZWxhYmVsX2NvbmZpZ3M6CiAgICAgIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbmFtZSwgX19tZXRhX2t1YmVybmV0ZXNfZW5kcG9pbnRfcG9ydF9uYW1lXQogICAgICAgIGFjdGlvbjoga2VlcAogICAgICAgIHJlZ2V4OiBpc3Rpby10ZWxlbWV0cnk7aHR0cC1tb25pdG9yaW5nCiAgICAtIGpvYl9uYW1lOiAnaXN0aW8tcGlsb3QnCiAgICAgIHNjcmFwZV9pbnRlcnZhbDogMTVzCiAgICAgIGt1YmVybmV0ZXNfc2RfY29uZmlnczoKICAgICAgLSByb2xlOiBlbmRwb2ludHMKICAgICAgICBuYW1lc3BhY2VzOgogICAgICAgICAgbmFtZXM6CiAgICAgICAgICAtIGlzdGlvLXN5c3RlbQogICAgICByZWxhYmVsX2NvbmZpZ3M6CiAgICAgIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbmFtZSwgX19tZXRhX2t1YmVybmV0ZXNfZW5kcG9pbnRfcG9ydF9uYW1lXQogICAgICAgIGFjdGlvbjoga2VlcAogICAgICAgIHJlZ2V4OiBpc3Rpby1waWxvdDtodHRwLW1vbml0b3JpbmcKICAgIC0gam9iX25hbWU6ICdpc3Rpby1nYWxsZXknCiAgICAgIHNjcmFwZV9pbnRlcnZhbDogMTVzCiAgICAgIGt1YmVybmV0ZXNfc2RfY29uZmlnczoKICAgICAgLSByb2xlOiBlbmRwb2ludHMKICAgICAgICBuYW1lc3BhY2VzOgogICAgICAgICAgbmFtZXM6CiAgICAgICAgICAtIGlzdGlvLXN5c3RlbQogICAgICByZWxhYmVsX2NvbmZpZ3M6CiAgICAgIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfbmFtZSwgX19tZXRhX2t1YmVybmV0ZXNfZW5kcG9pbnRfcG9ydF9uYW1lXQogICAgICAgIGFjdGlvbjoga2VlcAogICAgICAgIHJlZ2V4OiBpc3Rpby1nYWxsZXk7aHR0cC1tb25pdG9yaW5n
kind: Secret
metadata:
  name: additional-scrape-configs
  namespace: kubesphere-monitoring-system
type: Opaque
---
apiVersion: v1
data:
  admin-password: UEA4OHcwcmQK
  jwt-secret: d3VIbnFWeklNbm1xdlJ3TnVIYks0cmhrZEZrb21zcUowQ25Vc3lTTHY0SmFDQzVnQTk1VnBMZWlwZGQyaDZzS1RYUmJZOEFsaFNncUp3TkFjZG91aUlKWDNxQ3NXd3hwbDZq
kind: Secret
metadata:
  name: ks-account-secret
  namespace: kubesphere-system
type: Opaque
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: coredns
  name: coredns
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 1m
    port: metrics
  jobLabel: k8s-app
  namespaceSelector:
    matchNames:
    - kube-system
  selector:
    matchLabels:
      k8s-app: coredns
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: apiserver
  name: kube-apiserver
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 1m
    metricRelabelings:
    - action: drop
      regex: etcd_(debugging|disk|request|server).*
      sourceLabels:
      - __name__
    - action: drop
      regex: apiserver_admission_controller_admission_latencies_seconds_.*
      sourceLabels:
      - __name__
    - action: drop
      regex: apiserver_admission_step_admission_latencies_seconds_.*
      sourceLabels:
      - __name__
    port: https
    scheme: https
    tlsConfig:
      caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      serverName: kubernetes
  jobLabel: component
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      component: apiserver
      provider: kubernetes
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: kube-controller-manager
  name: kube-controller-manager
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - interval: 1m
    metricRelabelings:
    - action: keep
      regex: up
      sourceLabels:
      - __name__
    port: http-metrics
  jobLabel: k8s-app
  namespaceSelector:
    matchNames:
    - kube-system
  selector:
    matchLabels:
      k8s-app: kube-controller-manager
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: kube-scheduler
  name: kube-scheduler
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - interval: 1m
    port: http-metrics
  jobLabel: k8s-app
  namespaceSelector:
    matchNames:
    - kube-system
  selector:
    matchLabels:
      k8s-app: kube-scheduler
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: kube-state-metrics
  name: kube-state-metrics
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    honorLabels: true
    interval: 1m
    metricRelabelings:
    - action: drop
      regex: kube_pod_container_status_.*terminated_reason
      sourceLabels:
      - __name__
    port: https-main
    scheme: https
    scrapeTimeout: 30s
    tlsConfig:
      insecureSkipVerify: true
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 1m
    port: https-self
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  jobLabel: k8s-app
  selector:
    matchLabels:
      k8s-app: kube-state-metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: kubelet
  name: kubelet
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    honorLabels: true
    interval: 1m
    metricRelabelings:
    - action: keep
      regex: kubelet_running_container_count|kubelet_running_pod_count|kubelet_volume_stats.*
      sourceLabels:
      - __name__
    port: https-metrics
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    honorLabels: true
    interval: 1m
    metricRelabelings:
    - action: drop
      regex: container_([a-z_]+);
      sourceLabels:
      - __name__
      - image
    - action: keep
      regex: container_cpu_usage_seconds_total|container_memory_usage_bytes|container_memory_cache|container_network_.+_bytes_total|container_memory_working_set_bytes
      sourceLabels:
      - __name__
    path: /metrics/cadvisor
    port: https-metrics
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  jobLabel: k8s-app
  namespaceSelector:
    matchNames:
    - kube-system
  selector:
    matchLabels:
      k8s-app: kubelet
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: node-exporter
  name: node-exporter
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    interval: 1m
    metricRelabelings:
    - action: keep
      regex: node_cpu_.+|node_memory_Mem.+_bytes|node_memory_SReclaimable_bytes|node_memory_Cached_bytes|node_memory_Buffers_bytes|node_network_.+_bytes_total|node_disk_.+_completed_total|node_disk_.+_bytes_total|node_filesystem_files|node_filesystem_files_free|node_filesystem_avail_bytes|node_filesystem_size_bytes|node_filesystem_free_bytes|node_load.+
      sourceLabels:
      - __name__
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  jobLabel: k8s-app
  selector:
    matchLabels:
      k8s-app: node-exporter
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: prometheus
  name: prometheus
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - interval: 1m
    port: web
  selector:
    matchLabels:
      prometheus: k8s
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    k8s-app: prometheus-system
  name: prometheus-system
  namespace: kubesphere-monitoring-system
spec:
  endpoints:
  - interval: 1m
    port: web
  selector:
    matchLabels:
      prometheus: k8s-system
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    prometheus: k8s
  name: k8s
  namespace: kubesphere-monitoring-system
spec:
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: node-role.kubernetes.io/monitoring
            operator: Exists
        weight: 100
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: prometheus
              operator: In
              values:
              - k8s
          namespaces:
          - kubesphere-monitoring-system
          topologyKey: kubernetes.io/hostname
        weight: 100
  baseImage: kubesphere/prometheus
  imagePullSecrets:
  - name: qingcloud
  nodeSelector:
    beta.kubernetes.io/os: linux
  query:
    maxConcurrency: 1000
  replicas: 1
  resources:
    limits:
      cpu: "2.5"
      memory: 2Gi
    requests:
      cpu: 200m
      memory: 400Mi
  retention: 7d
  ruleSelector:
    matchLabels:
      prometheus: k8s
      role: alert-rules
  scrapeInterval: 1m
  securityContext:
    fsGroup: 0
    runAsNonRoot: false
    runAsUser: 0
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector:
    matchExpressions:
    - key: k8s-app
      operator: In
      values:
      - kube-state-metrics
      - node-exporter
      - kubelet
      - prometheus-system
  storage:
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: 20Gi
        storageClassName: local
  tolerations:
  - effect: NoSchedule
    key: dedicated
    operator: Equal
    value: monitoring
  version: v2.5.0
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    prometheus: k8s-system
  name: k8s-system
  namespace: kubesphere-monitoring-system
spec:
  additionalScrapeConfigs:
    key: prometheus-additional.yaml
    name: additional-scrape-configs
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: node-role.kubernetes.io/monitoring
            operator: Exists
        weight: 100
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: prometheus
              operator: In
              values:
              - k8s-system
          namespaces:
          - kubesphere-monitoring-system
          topologyKey: kubernetes.io/hostname
        weight: 100
  baseImage: kubesphere/prometheus
  imagePullSecrets:
  - name: qingcloud
  nodeSelector:
    beta.kubernetes.io/os: linux
  query:
    maxConcurrency: 1000
  replicas: 1
  resources:
    limits:
      cpu: "2.5"
      memory: 2Gi
    requests:
      cpu: 10m
      memory: 400Mi
  retention: 7d
  ruleSelector:
    matchLabels:
      prometheus: k8s
      role: alert-rules
  scrapeInterval: 1m
  secrets:
  - kube-etcd-client-certs
  securityContext:
    fsGroup: 0
    runAsNonRoot: false
    runAsUser: 0
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector:
    matchExpressions:
    - key: k8s-app
      operator: In
      values:
      - coredns
      - apiserver
      - prometheus
      - kube-scheduler
      - kube-controller-manager
  storage:
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: 20Gi
        storageClassName: local
  tolerations:
  - effect: NoSchedule
    key: dedicated
    operator: Equal
    value: monitoring
  version: v2.5.0
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: k8s
    role: alert-rules
  name: prometheus-k8s-rules
  namespace: kubesphere-monitoring-system
spec:
  groups:
  - name: k8s.rules
    rules:
    - expr: |
        sum((container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""} * on(namespace) group_left(label_kubesphere_io_workspace) kube_namespace_labels{job="kube-state-metrics"} - container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""} offset 90s * on(namespace) group_left(label_kubesphere_io_workspace) kube_namespace_labels{job="kube-state-metrics"}) / 90) by (namespace, label_kubesphere_io_workspace)
      record: namespace:container_cpu_usage_seconds_total:sum_rate
    - expr: |
        sum(container_memory_usage_bytes{job="kubelet", image!="", container_name!=""} * on(namespace) group_left(label_kubesphere_io_workspace) kube_namespace_labels{job="kube-state-metrics"}) by (namespace, label_kubesphere_io_workspace)
      record: namespace:container_memory_usage_bytes:sum
    - expr: |
        sum((container_memory_usage_bytes{job="kubelet", image!="", container_name!=""} - container_memory_cache{job="kubelet", image!="", container_name!=""}) * on(namespace) group_left(label_kubesphere_io_workspace) kube_namespace_labels{job="kube-state-metrics"}) by (namespace, label_kubesphere_io_workspace)
      record: namespace:container_memory_usage_bytes_wo_cache:sum
  - name: node.rules
    rules:
    - expr: |
        max(label_replace(kube_pod_info{job="kube-state-metrics"}, "pod", "$1", "pod", "(.*)")) by (node, namespace, pod)
      record: 'node_namespace_pod:kube_pod_info:'
    - expr: |
        count by (node) (sum by (node, cpu) (
          node_cpu_seconds_total{job="node-exporter"}
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        ))
      record: node:node_num_cpu:sum
    - expr: |
        avg(irate(node_cpu_seconds_total{job="node-exporter",mode="used"}[5m]))
      record: :node_cpu_utilisation:avg1m
    - expr: |
        avg by (node) (
          irate(node_cpu_seconds_total{job="node-exporter",mode="used"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:)
      record: node:node_cpu_utilisation:avg1m
    - expr: |
        1 -
        sum(node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"} + node_memory_SReclaimable_bytes{job="node-exporter"})
        /
        sum(node_memory_MemTotal_bytes{job="node-exporter"})
      record: ':node_memory_utilisation:'
    - expr: |
        sum by (node) (
          (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"} + node_memory_SReclaimable_bytes{job="node-exporter"})
          * on (namespace, pod) group_left(node)
            node_namespace_pod:kube_pod_info:
        )
      record: node:node_memory_bytes_available:sum
    - expr: |
        sum by (node) (
          node_memory_MemTotal_bytes{job="node-exporter"}
          * on (namespace, pod) group_left(node)
            node_namespace_pod:kube_pod_info:
        )
      record: node:node_memory_bytes_total:sum
    - expr: |
        1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)
      record: 'node:node_memory_utilisation:'
    - expr: |
        sum by (node) (
          irate(node_disk_reads_completed_total{job="node-exporter"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_iops_reads:sum
    - expr: |
        sum by (node) (
          irate(node_disk_writes_completed_total{job="node-exporter"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_iops_writes:sum
    - expr: |
        sum by (node) (
          irate(node_disk_read_bytes_total{job="node-exporter"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_throughput_bytes_read:sum
    - expr: |
        sum by (node) (
          irate(node_disk_written_bytes_total{job="node-exporter"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_throughput_bytes_written:sum
    - expr: |
        sum(irate(node_network_receive_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m])) +
        sum(irate(node_network_transmit_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m]))
      record: :node_net_utilisation:sum_irate
    - expr: |
        sum by (node) (
          (irate(node_network_receive_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m]) +
          irate(node_network_transmit_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m]))
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:node_net_utilisation:sum_irate
    - expr: |
        sum by (node) (
          irate(node_network_transmit_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:node_net_bytes_transmitted:sum_irate
    - expr: |
        sum by (node) (
          irate(node_network_receive_bytes_total{job="node-exporter",device!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)"}[5m])
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
        )
      record: node:node_net_bytes_received:sum_irate
    - expr: |
        sum by(node) (sum(max(node_filesystem_files{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"}) by (device, pod, namespace)) by (pod, namespace) * on (namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:)
      record: 'node:node_inodes_total:'
    - expr: |
        sum by(node) (sum(max(node_filesystem_files_free{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"}) by (device, pod, namespace)) by (pod, namespace) * on (namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:)
      record: 'node:node_inodes_free:'
    - expr: |
        sum by (node) (node_load1{job="node-exporter"} * on (namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:) / node:node_num_cpu:sum
      record: node:load1:ratio
    - expr: |
        sum by (node) (node_load5{job="node-exporter"} * on (namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:) / node:node_num_cpu:sum
      record: node:load5:ratio
    - expr: |
        sum by (node) (node_load15{job="node-exporter"} * on (namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:) / node:node_num_cpu:sum
      record: node:load15:ratio
    - expr: |
        sum by (node) ((kube_pod_status_scheduled{job="kube-state-metrics", condition="true"} > 0)  * on (namespace, pod) group_left(node) kube_pod_info{job="kube-state-metrics"} unless on (node) (kube_node_status_condition{job="kube-state-metrics", condition="Ready", status=~"unknown|false"} > 0))
      record: node:pod_count:sum
    - expr: |
        (node:pod_running:count / sum(kube_node_status_capacity_pods) by (node)) unless on (node) (kube_node_status_condition{job="kube-state-metrics", condition="Ready", status=~"unknown|false"} > 0)
      record: node:pod_utilization:ratio
    - expr: |
        count(kube_pod_info{job="kube-state-metrics"} unless on (pod, namespace) (kube_pod_status_phase{job="kube-state-metrics", phase=~"Failed|Pending|Unknown|Succeeded"} > 0))  by (node) unless on (node) (kube_node_status_condition{job="kube-state-metrics", condition="Ready", status=~"unknown|false"} > 0)
      record: node:pod_running:count
    - expr: |
        count(kube_pod_info{job="kube-state-metrics"} unless on (pod, namespace) (kube_pod_status_phase{job="kube-state-metrics", phase=~"Failed|Pending|Unknown|Running"} > 0))  by (node) unless on (node) (kube_node_status_condition{job="kube-state-metrics", condition="Ready",status=~"unknown|false"} > 0)
      record: node:pod_succeeded:count
    - expr: |
        count(kube_pod_info{job="kube-state-metrics", node!=""} unless on (pod, namespace) (kube_pod_status_phase{job="kube-state-metrics", phase="Succeeded"}>0) unless on (pod, namespace) ((kube_pod_status_ready{job="kube-state-metrics", condition="true"}>0) and on (pod, namespace) (kube_pod_status_phase{job="kube-state-metrics", phase="Running"}>0)) unless on (pod, namespace) kube_pod_container_status_waiting_reason{job="kube-state-metrics", reason="ContainerCreating"}>0) by (node)
      record: node:pod_abnormal:count
    - expr: |
        (node:pod_abnormal:count / count(kube_pod_info{job="kube-state-metrics", node!=""} unless on (pod, namespace) kube_pod_status_phase{job="kube-state-metrics", phase="Succeeded"}>0) by (node)) unless on (node) (kube_node_status_condition{job="kube-state-metrics", condition="Ready", status=~"unknown|false"} > 0)
      record: node:pod_abnormal:ratio
    - expr: |
        sum(max(node_filesystem_avail_bytes{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"} * on (namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:) by (device, node)) by (node)
      record: 'node:disk_space_available:'
    - expr: |
        1- sum(max(node_filesystem_avail_bytes{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"} * on (namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:) by (device, node)) by (node) / sum(max(node_filesystem_size_bytes{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"} * on (namespace, pod) group_left(node) node_namespace_pod:kube_pod_info:) by (device, node)) by (node)
      record: node:disk_space_utilization:ratio
    - expr: |
        (1 - (node:node_inodes_free: / node:node_inodes_total:))
      record: node:disk_inode_utilization:ratio
  - name: cluster.rules
    rules:
    - expr: |
        count(kube_pod_info{job="kube-state-metrics"} unless on (pod, namespace) (kube_pod_status_phase{job="kube-state-metrics", phase="Succeeded"}>0) unless on (pod, namespace) ((kube_pod_status_ready{job="kube-state-metrics", condition="true"}>0) and on (pod, namespace) (kube_pod_status_phase{job="kube-state-metrics", phase="Running"}>0)) unless on (pod, namespace) kube_pod_container_status_waiting_reason{job="kube-state-metrics", reason="ContainerCreating"}>0)
      record: cluster:pod_abnormal:sum
    - expr: |
        sum((kube_pod_status_scheduled{job="kube-state-metrics", condition="true"} > 0)  * on (namespace, pod) group_left(node) (sum by (node, namespace, pod) (kube_pod_info)) unless on (node) (kube_node_status_condition{job="kube-state-metrics", condition="Ready",status=~"unknown|false"} > 0))
      record: cluster:pod:sum
    - expr: |
        cluster:pod_abnormal:sum / sum(kube_pod_status_phase{job="kube-state-metrics", phase!="Succeeded"})
      record: cluster:pod_abnormal:ratio
    - expr: |
        count(kube_pod_info{job="kube-state-metrics"} and on (pod, namespace) (kube_pod_status_phase{job="kube-state-metrics", phase="Running"}>0) unless on (node) (kube_node_status_condition{job="kube-state-metrics", condition="Ready", status=~"unknown|false"} > 0))
      record: cluster:pod_running:count
    - expr: |
        cluster:pod_running:count / sum(kube_node_status_capacity_pods unless on (node) (kube_node_status_condition{job="kube-state-metrics", condition="Ready", status=~"unknown|false"} > 0))
      record: cluster:pod_utilization:ratio
    - expr: |
        1 - sum(max(node_filesystem_avail_bytes{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"}) by (device, instance)) / sum(max(node_filesystem_size_bytes{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"}) by (device, instance))
      record: cluster:disk_utilization:ratio
    - expr: |
        1 - sum(node:node_inodes_free:) / sum(node:node_inodes_total:)
      record: cluster:disk_inode_utilization:ratio
    - expr: |
        sum(kube_node_status_condition{job="kube-state-metrics", condition="Ready", status=~"unknown|false"})
      record: cluster:node_offline:sum
    - expr: |
        sum(kube_node_status_condition{job="kube-state-metrics", condition="Ready", status=~"unknown|false"}) / sum(kube_node_status_condition{job="kube-state-metrics", condition="Ready"})
      record: cluster:node_offline:ratio
  - name: namespace.rules
    rules:
    - expr: |
        (count(kube_pod_info{job="kube-state-metrics", node!=""}) by (namespace) - sum(kube_pod_status_phase{job="kube-state-metrics", phase="Succeeded"}) by (namespace)  - sum(kube_pod_status_ready{job="kube-state-metrics", condition="true"} * on (pod, namespace) kube_pod_status_phase{job="kube-state-metrics", phase="Running"}) by (namespace) - sum(kube_pod_container_status_waiting_reason{job="kube-state-metrics", reason="ContainerCreating"}) by (namespace)) * on (namespace) group_left(label_kubesphere_io_workspace)(kube_namespace_labels{job="kube-state-metrics"})
      record: namespace:pod_abnormal:count
    - expr: |
        namespace:pod_abnormal:count / (sum(kube_pod_status_phase{job="kube-state-metrics", phase!="Succeeded", namespace!=""}) by (namespace) * on (namespace) group_left(label_kubesphere_io_workspace)(kube_namespace_labels{job="kube-state-metrics"}))
      record: namespace:pod_abnormal:ratio
    - expr: |
        max(kube_resourcequota{job="kube-state-metrics", type="used"}) by (resource, namespace) / min(kube_resourcequota{job="kube-state-metrics", type="hard"}) by (resource, namespace) *  on (namespace) group_left(label_kubesphere_io_workspace) (kube_namespace_labels{job="kube-state-metrics"})
      record: namespace:resourcequota_used:ratio
    - expr: |
        sum (label_replace(label_join(sum(irate(container_cpu_usage_seconds_total{job="kubelet", pod_name!="", image!=""}[5m])) by (namespace, pod_name) * on (pod_name, namespace) group_left(owner_kind,owner_name) label_join(label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"},"owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"),"tmp",":","owner_name","pod"),"owner_name","$1","tmp","<none>:(.*)"), "pod_name", "", "pod", "_name"), "workload",":","owner_kind","owner_name"), "workload","$1","workload","(Deployment:.+)-(.+)")) by (namespace, workload, owner_kind)
      record: namespace:workload_cpu_usage:sum
    - expr: |
        sum (label_replace(label_join(sum(container_memory_usage_bytes{job="kubelet", pod_name!="", image!=""}) by (namespace, pod_name) * on (pod_name, namespace) group_left(owner_kind,owner_name) label_join(label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"},"owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"),"tmp",":","owner_name","pod"),"owner_name","$1","tmp","<none>:(.*)"), "pod_name", "", "pod", "_name"), "workload",":","owner_kind","owner_name"), "workload","$1","workload","(Deployment:.+)-(.+)")) by (namespace, workload, owner_kind)
      record: namespace:workload_memory_usage:sum
    - expr: |
        sum (label_replace(label_join(sum(container_memory_usage_bytes{job="kubelet", pod_name!="", image!=""} - container_memory_cache{job="kubelet", pod_name!="", image!=""}) by (namespace, pod_name) * on (pod_name, namespace) group_left(owner_kind,owner_name) label_join(label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"},"owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"),"tmp",":","owner_name","pod"),"owner_name","$1","tmp","<none>:(.*)"), "pod_name", "", "pod", "_name"), "workload",":","owner_kind","owner_name"), "workload","$1","workload","(Deployment:.+)-(.+)")) by (namespace, workload, owner_kind)
      record: namespace:workload_memory_usage_wo_cache:sum
    - expr: |
        sum (label_replace(label_join(sum(irate(container_network_transmit_bytes_total{pod_name!="", interface!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)", job="kubelet"}[5m])) by (namespace, pod_name) * on (pod_name, namespace) group_left(owner_kind,owner_name) label_join(label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"},"owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"),"tmp",":","owner_name","pod"),"owner_name","$1","tmp","<none>:(.*)"), "pod_name", "", "pod", "_name"), "workload",":","owner_kind","owner_name"), "workload","$1","workload","(Deployment:.+)-(.+)")) by (namespace, workload, owner_kind)
      record: namespace:workload_net_bytes_transmitted:sum_irate
    - expr: |
        sum (label_replace(label_join(sum(irate(container_network_receive_bytes_total{pod_name!="", interface!~"^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)", job="kubelet"}[5m])) by (namespace, pod_name) * on (pod_name, namespace) group_left(owner_kind,owner_name) label_join(label_replace(label_join(label_replace(label_replace(kube_pod_owner{job="kube-state-metrics"},"owner_kind", "Deployment", "owner_kind", "ReplicaSet"), "owner_kind", "Pod", "owner_kind", "<none>"),"tmp",":","owner_name","pod"),"owner_name","$1","tmp","<none>:(.*)"), "pod_name", "", "pod", "_name"), "workload",":","owner_kind","owner_name"), "workload","$1","workload","(Deployment:.+)-(.+)")) by (namespace, workload, owner_kind)
      record: namespace:workload_net_bytes_received:sum_irate
    - expr: |
        label_replace(label_replace(sum(kube_deployment_status_replicas_unavailable{job="kube-state-metrics"}) by (deployment, namespace) / sum(kube_deployment_spec_replicas{job="kube-state-metrics"}) by (deployment, namespace) * on (namespace) group_left(label_kubesphere_io_workspace)(kube_namespace_labels{job="kube-state-metrics"}), "workload","Deployment:$1", "deployment", "(.*)"), "owner_kind","Deployment", "", "")
      record: namespace:deployment_unavailable_replicas:ratio
    - expr: |
        label_replace(label_replace(sum(kube_daemonset_status_number_unavailable{job="kube-state-metrics"}) by (daemonset, namespace) / sum(kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}) by (daemonset, namespace) * on (namespace) group_left(label_kubesphere_io_workspace)(kube_namespace_labels{job="kube-state-metrics"}) , "workload","DaemonSet:$1", "daemonset", "(.*)"), "owner_kind","DaemonSet", "", "")
      record: namespace:daemonset_unavailable_replicas:ratio
    - expr: |
        label_replace(label_replace((1 - sum(kube_statefulset_status_replicas_current{job="kube-state-metrics"}) by (statefulset, namespace) / sum(kube_statefulset_replicas{job="kube-state-metrics"}) by (statefulset, namespace)) * on (namespace) group_left(label_kubesphere_io_workspace)(kube_namespace_labels{job="kube-state-metrics"}) , "workload","StatefulSet:$1", "statefulset", "(.*)"), "owner_kind","StatefulSet", "", "")
      record: namespace:statefulset_unavailable_replicas:ratio
  - name: etcd.rules
    rules:
    - expr: |
        sum(up{job="etcd"} == 1)
      record: etcd:up:sum
    - expr: |
        sum(label_replace(sum(changes(etcd_server_leader_changes_seen_total{job="etcd"}[1h])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_server_leader_changes_seen:sum_changes
    - expr: |
        sum(label_replace(sum(irate(etcd_server_proposals_failed_total{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_server_proposals_failed:sum_irate
    - expr: |
        sum(label_replace(sum(irate(etcd_server_proposals_applied_total{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_server_proposals_applied:sum_irate
    - expr: |
        sum(label_replace(sum(irate(etcd_server_proposals_committed_total{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_server_proposals_committed:sum_irate
    - expr: |
        sum(label_replace(sum(etcd_server_proposals_pending{job="etcd"}) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_server_proposals_pending:sum
    - expr: |
        sum(label_replace(etcd_debugging_mvcc_db_total_size_in_bytes{job="etcd"},"node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_debugging_mvcc_db_total_size:sum
    - expr: |
        sum(label_replace(etcd_mvcc_db_total_size_in_bytes{job="etcd"},"node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_mvcc_db_total_size:sum
    - expr: |
        sum(label_replace(sum(irate(etcd_network_client_grpc_received_bytes_total{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_network_client_grpc_received_bytes:sum_irate
    - expr: |
        sum(label_replace(sum(irate(etcd_network_client_grpc_sent_bytes_total{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_network_client_grpc_sent_bytes:sum_irate
    - expr: |
        sum(label_replace(sum(irate(grpc_server_started_total{job="etcd",grpc_type="unary"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:grpc_server_started:sum_irate
    - expr: |
        sum(label_replace(sum(irate(grpc_server_handled_total{job="etcd",grpc_type="unary",grpc_code!="OK"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:grpc_server_handled:sum_irate
    - expr: |
        sum(label_replace(sum(irate(grpc_server_msg_received_total{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:grpc_server_msg_received:sum_irate
    - expr: |
        sum(label_replace(sum(irate(grpc_server_msg_sent_total{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:grpc_server_msg_sent:sum_irate
    - expr: |
        sum(label_replace(sum(irate(etcd_disk_wal_fsync_duration_seconds_sum{job="etcd"}[5m])) by (instance) / sum(irate(etcd_disk_wal_fsync_duration_seconds_count{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_disk_wal_fsync_duration:avg
    - expr: |
        sum(label_replace(sum(irate(etcd_disk_backend_commit_duration_seconds_sum{job="etcd"}[5m])) by (instance) / sum(irate(etcd_disk_backend_commit_duration_seconds_count{job="etcd"}[5m])) by (instance), "node", "$1", "instance", "(.*):.*")) by (node)
      record: etcd:etcd_disk_backend_commit_duration:avg
  - name: etcd_histogram.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum(label_replace(sum(irate(etcd_disk_wal_fsync_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.99"
      record: etcd:etcd_disk_wal_fsync_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(label_replace(sum(irate(etcd_disk_wal_fsync_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.9"
      record: etcd:etcd_disk_wal_fsync_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(label_replace(sum(irate(etcd_disk_wal_fsync_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.5"
      record: etcd:etcd_disk_wal_fsync_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum(label_replace(sum(irate(etcd_disk_backend_commit_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.99"
      record: etcd:etcd_disk_backend_commit_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(label_replace(sum(irate(etcd_disk_backend_commit_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.9"
      record: etcd:etcd_disk_backend_commit_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(label_replace(sum(irate(etcd_disk_backend_commit_duration_seconds_bucket{job="etcd"}[5m])) by (instance, le), "node", "$1", "instance", "(.*):.*")) by (node, le))
      labels:
        quantile: "0.5"
      record: etcd:etcd_disk_backend_commit_duration:histogram_quantile
  - name: apiserver.rules
    rules:
    - expr: |
        sum(up{job="apiserver"} == 1)
      record: apiserver:up:sum
    - expr: |
        sum(irate(apiserver_request_count{job="apiserver"}[5m]))
      record: apiserver:apiserver_request_count:sum_irate
    - expr: |
        sum(irate(apiserver_request_count{job="apiserver"}[5m])) by (verb)
      record: apiserver:apiserver_request_count:sum_verb_irate
    - expr: |
        sum(irate(apiserver_request_latencies_sum{job="apiserver", verb!~"WATCH|CONNECT"}[5m])) / sum(irate(apiserver_request_latencies_count{job="apiserver", verb!~"WATCH|CONNECT"}[5m]))/ 1e+06
      record: apiserver:apiserver_request_latencies:avg
    - expr: |
        sum(irate(apiserver_request_latencies_sum{job="apiserver", verb!~"WATCH|CONNECT"}[5m])) by (verb) / sum(irate(apiserver_request_latencies_count{job="apiserver", verb!~"WATCH|CONNECT"}[5m])) by (verb) / 1e+06
      record: apiserver:apiserver_request_latencies:avg_by_verb
  - name: scheduler.rules
    rules:
    - expr: |
        sum(up{job="kube-scheduler"} == 1)
      record: scheduler:up:sum
    - expr: |
        sum(scheduler_schedule_attempts_total{job="kube-scheduler"}) by (result)
      record: scheduler:scheduler_schedule_attempts:sum
    - expr: |
        sum(rate(scheduler_schedule_attempts_total{job="kube-scheduler"}[5m])) by (result)
      record: scheduler:scheduler_schedule_attempts:sum_rate
    - expr: |
        (sum(rate(scheduler_e2e_scheduling_latency_microseconds_sum{job="kube-scheduler"}[1h]))  / sum(rate(scheduler_e2e_scheduling_latency_microseconds_count{job="kube-scheduler"}[1h]))) /  1e+06
      record: scheduler:scheduler_e2e_scheduling_latency:avg
  - name: scheduler_histogram.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[1h])) by (le) ) / 1e+06
      labels:
        quantile: "0.99"
      record: scheduler:scheduler_e2e_scheduling_latency:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[1h])) by (le) ) / 1e+06
      labels:
        quantile: "0.9"
      record: scheduler:scheduler_e2e_scheduling_latency:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[1h])) by (le) ) / 1e+06
      labels:
        quantile: "0.5"
      record: scheduler:scheduler_e2e_scheduling_latency:histogram_quantile
  - name: controller_manager.rules
    rules:
    - expr: |
        sum(up{job="kube-controller-manager"} == 1)
      record: controller_manager:up:sum
  - name: coredns.rules
    rules:
    - expr: |
        sum(up{job="coredns"} == 1)
      record: coredns:up:sum
    - expr: |
        sum(irate(coredns_cache_hits_total{job="coredns"}[5m]))
      record: coredns:coredns_cache_hits_total:sum_irate
    - expr: |
        sum(irate(coredns_cache_misses{job="coredns"}[5m]))
      record: coredns:coredns_cache_misses:sum_irate
    - expr: |
        sum(irate(coredns_dns_request_count_total{job="coredns"}[5m]))
      record: coredns:coredns_dns_request_count:sum_irate
    - expr: |
        sum(irate(coredns_dns_request_type_count_total{job="coredns"}[5m])) by (type)
      record: coredns:coredns_dns_request_type_count:sum_irate
    - expr: |
        sum(irate(coredns_dns_response_rcode_count_total{job="coredns"}[5m])) by (rcode)
      record: coredns:coredns_dns_response_rcode_count:sum_irate
    - expr: |
        sum(irate(coredns_panic_count_total{job="coredns"}[5m]))
      record: coredns:coredns_panic_count:sum_irate
    - expr: |
        sum(irate(coredns_proxy_request_count_total{job="coredns"}[5m]))
      record: coredns:coredns_proxy_request_count:sum_irate
    - expr: |
        sum(irate(coredns_dns_request_duration_seconds_sum{job="coredns"}[5m])) / sum(irate(coredns_dns_request_duration_seconds_count{job="coredns"}[5m]))
      record: coredns:coredns_dns_request_duration:avg
    - expr: |
        sum(irate(coredns_proxy_request_duration_seconds_sum{job="coredns"}[5m])) / sum(irate(coredns_proxy_request_duration_seconds_count{job="coredns"}[5m]))
      record: coredns:coredns_proxy_request_duration:avg
  - name: coredns_histogram.rules
    rules:
    - expr: |
        histogram_quantile(0.99, sum(irate(coredns_dns_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.99"
      record: coredns:coredns_dns_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(irate(coredns_dns_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.9"
      record: coredns:coredns_dns_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(irate(coredns_dns_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.5"
      record: coredns:coredns_dns_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.99, sum(irate(coredns_proxy_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.99"
      record: coredns:coredns_proxy_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.9, sum(irate(coredns_proxy_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.9"
      record: coredns:coredns_proxy_request_duration:histogram_quantile
    - expr: |
        histogram_quantile(0.5, sum(irate(coredns_proxy_request_duration_seconds_bucket{job="coredns"}[5m])) by (le))
      labels:
        quantile: "0.5"
      record: coredns:coredns_proxy_request_duration:histogram_quantile
  - name: prometheus.rules
    rules:
    - expr: |
        sum(up{job=~"prometheus-k8s.*"} == 1)
      record: prometheus:up:sum
    - expr: |
        sum(rate(prometheus_tsdb_head_samples_appended_total{job=~"prometheus-k8s.*"} [5m])) by (job, pod)
      record: prometheus:prometheus_tsdb_head_samples_appended:sum_rate
---

# PVCS
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: kubesphere-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---

# Deployments
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-account
    tier: backend
    version: v2.1.0
  name: ks-account
  namespace: kubesphere-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-account
      tier: backend
      version: v2.1.0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ks-account
        tier: backend
        version: v2.1.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ks-account
            namespaces:
            - kubesphere-system
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - ks-iam
        - --logtostderr=true
        - --jwt-secret=$(JWT_SECRET)
        - --admin-password=$(ADMIN_PASSWORD)
        - --enable-multi-login=False
        - --token-idle-timeout=40m
        - --generate-kubeconfig=False
        env:
        - name: KUBECTL_IMAGE
          value: kubesphere/kubectl:v1.0.0
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: jwt-secret
              name: ks-account-secret
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: ks-account-secret
        image: kubesphere/ks-account:v2.1.0
        imagePullPolicy: IfNotPresent
        name: ks-account
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: 20m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/ks-iam
          name: user-init
        - mountPath: /etc/kubesphere/rules
          name: policy-rules
        - mountPath: /etc/kubesphere
          name: kubesphere-config
      initContainers:
      - command:
        - sh
        - -c
        - until nc -z redis.kubesphere-system.svc 6379; do echo "waiting for redis";
          sleep 2; done;
        image: busybox:1.28.4
        imagePullPolicy: IfNotPresent
        name: wait-redis
      - command:
        - sh
        - -c
        - until nc -z openldap.kubesphere-system.svc 389; do echo "waiting for ldap";
          sleep 2; done;
        image: busybox:1.28.4
        imagePullPolicy: IfNotPresent
        name: wait-ldap
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          name: policy-rules
        name: policy-rules
      - configMap:
          defaultMode: 420
          name: user-init
        name: user-init
      - configMap:
          defaultMode: 420
          name: kubesphere-config
        name: kubesphere-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-apigateway
    tier: backend
    version: v2.1.0
  name: ks-apigateway
  namespace: kubesphere-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-apigateway
      tier: backend
      version: v2.1.0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ks-apigateway
        tier: backend
        version: v2.1.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ks-apigateway
            namespaces:
            - kubesphere-system
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - /bin/sh
        - -c
        - export KUBESPHERE_TOKEN=`cat /var/run/secrets/kubernetes.io/serviceaccount/token`
          && ks-apigateway --conf=/etc/caddy/Caddyfile --log=stderr
        env:
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: jwt-secret
              name: ks-account-secret
        image: kubesphere/ks-apigateway:v2.1.0
        imagePullPolicy: IfNotPresent
        name: ks-apigateway
        ports:
        - containerPort: 2018
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: 20m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/caddy
          name: caddyfile
        - mountPath: /etc/kubesphere
          name: kubesphere-config
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          name: caddyfile
        name: caddyfile
      - configMap:
          defaultMode: 420
          name: kubesphere-config
        name: kubesphere-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-apiserver
    tier: backend
    version: v2.1.0
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-apiserver
      tier: backend
      version: v2.1.0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ks-apiserver
        tier: backend
        version: v2.1.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ks-apiserver
            namespaces:
            - kubesphere-system
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - ks-apiserver
        - --logtostderr=true
        image: kubesphere/ks-apiserver:v2.1.0
        imagePullPolicy: IfNotPresent
        name: ks-apiserver
        ports:
        - containerPort: 9090
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 20m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-sock
        - mountPath: /etc/kubesphere/ingress-controller
          name: ks-router-config
        - mountPath: /etc/kubesphere/rules
          name: policy-rules
        - mountPath: /etc/kubesphere/
          name: kubesphere-config
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      volumes:
      - name: ca-dir
        secret:
          defaultMode: 420
          secretName: kubesphere-ca
      - hostPath:
          path: /var/run/docker.sock
          type: ""
        name: docker-sock
      - configMap:
          defaultMode: 420
          name: ks-router-config
        name: ks-router-config
      - configMap:
          defaultMode: 420
          name: policy-rules
        name: policy-rules
      - configMap:
          defaultMode: 420
          name: kubesphere-config
        name: kubesphere-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-console
    tier: frontend
    version: v2.1.0
  name: ks-console
  namespace: kubesphere-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-console
      tier: frontend
      version: v2.1.0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ks-console
        tier: frontend
        version: v2.1.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ks-console
            namespaces:
            - kubesphere-system
            topologyKey: kubernetes.io/hostname
      containers:
      - image: kubesphere/ks-console:v2.1.0
        imagePullPolicy: IfNotPresent
        name: ks-console
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 20m
            memory: 100Mi
        volumeMounts:
        - mountPath: /root/KubeSphereUI/server/local_config.yaml
          name: ks-console-config
          subPath: local_config.yaml
        - mountPath: /root/KubeSphereUI/server/sample
          name: sample-bookinfo
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: local_config.yaml
            path: local_config.yaml
          name: ks-console-config
        name: ks-console-config
      - configMap:
          defaultMode: 420
          name: sample-bookinfo
        name: sample-bookinfo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-controller-manager
    tier: backend
    version: v2.1.0
  name: ks-controller-manager
  namespace: kubesphere-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-controller-manager
      tier: backend
      version: v2.1.0
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ks-controller-manager
        tier: backend
        version: v2.1.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ks-controller-manager
            namespaces:
            - kubesphere-system
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - controller-manager
        - --logtostderr=true
        image: kubesphere/ks-controller-manager:v2.1.0
        imagePullPolicy: IfNotPresent
        name: ks-controller-manager
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - mountPath: /etc/kubesphere/
          name: kubesphere-config
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 60
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          name: kubesphere-config
        name: kubesphere-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
    tier: database
  name: redis
  namespace: kubesphere-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis
      tier: database
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis
        tier: database
        version: redis-4.0
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 100
      containers:
      - image: redis:5.0.5-alpine
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 1000Mi
          requests:
            cpu: 50m
            memory: 100Mi
        volumeMounts:
        - mountPath: /data
          name: redis-pvc
          subPath: redis-data
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - name: redis-pvc
        persistentVolumeClaim:
          claimName: redis-pvc
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kube-state-metrics
  name: kube-state-metrics
  namespace: kubesphere-monitoring-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kube-state-metrics
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kube-state-metrics
    spec:
      containers:
      - args:
        - --secure-listen-address=:8443
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
        - --upstream=http://127.0.0.1:8081/
        image: kubesphere/kube-rbac-proxy:v0.4.1
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy-main
        ports:
        - containerPort: 8443
          name: https-main
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
      - args:
        - --secure-listen-address=:9443
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
        - --upstream=http://127.0.0.1:8082/
        image: kubesphere/kube-rbac-proxy:v0.4.1
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy-self
        ports:
        - containerPort: 9443
          name: https-self
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
      - args:
        - --host=127.0.0.1
        - --port=8081
        - --telemetry-host=127.0.0.1
        - --telemetry-port=8082
        image: kubesphere/kube-state-metrics:v1.5.2
        imagePullPolicy: IfNotPresent
        name: kube-state-metrics
        resources:
          limits:
            cpu: 32m
            memory: 180Mi
          requests:
            cpu: 32m
            memory: 180Mi
      - command:
        - /pod_nanny
        - --container=kube-state-metrics
        - --cpu=30m
        - --extra-cpu=2m
        - --memory=150Mi
        - --extra-memory=30Mi
        - --threshold=5
        - --deployment=kube-state-metrics
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: kubesphere/addon-resizer:1.8.4
        imagePullPolicy: IfNotPresent
        name: addon-resizer
        resources:
          requests:
            cpu: 10m
            memory: 30Mi
      nodeSelector:
        beta.kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount: kube-state-metrics
      serviceAccountName: kube-state-metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: prometheus-operator
  name: prometheus-operator
  namespace: kubesphere-monitoring-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: prometheus-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: prometheus-operator
    spec:
      containers:
      - args:
        - --kubelet-service=kube-system/kubelet
        - --logtostderr=true
        - --config-reloader-image=kubesphere/configmap-reload:v0.0.1
        - --prometheus-config-reloader=kubesphere/prometheus-config-reloader:v0.27.1
        image: kubesphere/prometheus-operator:v0.27.1
        imagePullPolicy: IfNotPresent
        name: prometheus-operator
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      nodeSelector:
        beta.kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount: prometheus-operator
      serviceAccountName: prometheus-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-router
  labels:
    app: kubesphere
    component: kubesphere-router
    version: express-1.0.alpha
  name: default-http-backend
  namespace: kubesphere-controls-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kubesphere
      component: kubesphere-router
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kubesphere
        component: kubesphere-router
    spec:
      containers:
      - image: mirrorgooglecontainers/defaultbackend-amd64:1.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: default-http-backend
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
---
# Statefulsets
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: ks-openldap
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: openldap-ha
    app.kubernetes.io/version: "1.0"
    helm.sh/chart: openldap-ha-0.1.0
  name: openldap
  namespace: kubesphere-system
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: ks-openldap
      app.kubernetes.io/name: openldap-ha
  serviceName: openldap
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ks-openldap
        app.kubernetes.io/name: openldap-ha
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 100
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/instance: ks-openldap
                app.kubernetes.io/name: openldap-ha
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --copy-service
        - --loglevel=warning
        env:
        - name: LDAP_ORGANISATION
          value: kubesphere
        - name: LDAP_DOMAIN
          value: kubesphere.io
        - name: LDAP_CONFIG_PASSWORD
          value: admin
        - name: LDAP_ADMIN_PASSWORD
          value: admin
        - name: LDAP_REPLICATION
          value: "false"
        - name: LDAP_TLS
          value: "false"
        - name: LDAP_REMOVE_CONFIG_AFTER_SETUP
          value: "true"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: HOSTNAME
          value: $(MY_POD_NAME).openldap
        image: osixia/openldap:1.3.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          tcpSocket:
            port: 389
          timeoutSeconds: 1
        name: openldap-ha
        ports:
        - containerPort: 389
          name: ldap
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          tcpSocket:
            port: 389
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /var/lib/ldap
          name: openldap-pvc
          subPath: ldap-data
        - mountPath: /etc/ldap/slapd.d
          name: openldap-pvc
          subPath: ldap-config
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - name: openldap-pvc
        persistentVolumeClaim:
          claimName: openldap-pvc
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: openldap-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      volumeMode: Filesystem
---

# Daemonset
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: node-exporter
  name: node-exporter
  namespace: kubesphere-monitoring-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      containers:
      - args:
        - --web.listen-address=127.0.0.1:9100
        - --path.procfs=/host/proc
        - --path.sysfs=/host/sys
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
        - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
        image: kubesphere/node-exporter:ks-v0.16.0
        imagePullPolicy: IfNotPresent
        name: node-exporter
        resources:
          limits:
            cpu: 250m
            memory: 180Mi
          requests:
            cpu: 10m
            memory: 180Mi
        volumeMounts:
        - mountPath: /host/proc
          name: proc
        - mountPath: /host/sys
          name: sys
        - mountPath: /host/root
          mountPropagation: HostToContainer
          name: root
          readOnly: true
      - args:
        - --secure-listen-address=$(IP):9100
        - --upstream=http://127.0.0.1:9100/
        env:
        - name: IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: kubesphere/kube-rbac-proxy:v0.4.1
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 9100
          hostPort: 9100
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 20m
            memory: 40Mi
          requests:
            cpu: 10m
            memory: 20Mi
      hostNetwork: true
      hostPID: true
      nodeSelector:
        beta.kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount: node-exporter
      serviceAccountName: node-exporter
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: dedicated
        operator: Exists
      volumes:
      - hostPath:
          path: /proc
          type: ""
        name: proc
      - hostPath:
          path: /sys
          type: ""
        name: sys
      - hostPath:
          path: /
          type: ""
        name: root
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---

# Service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-account
    tier: backend
    version: v2.1.0
  name: ks-account
  namespace: kubesphere-system
spec:
  ports:
  - name: ks-account
    port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    app: ks-account
    tier: backend
    version: v2.1.0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-apigateway
    tier: backend
    version: v2.1.0
  name: ks-apigateway
  namespace: kubesphere-system
spec:
  ports:
  - name: 80-2018
    port: 80
    protocol: TCP
    targetPort: 2018
  selector:
    app: ks-apigateway
    tier: backend
    version: v2.1.0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-apiserver
    tier: backend
    version: v2.1.0
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    app: ks-apiserver
    tier: backend
    version: v2.1.0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-console
    tier: frontend
    version: v2.1.0
  name: ks-console
  namespace: kubesphere-system
spec:
  ports:
  - name: nginx
    nodePort: 30880
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: ks-console
    tier: frontend
    version: v2.1.0
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: ks-openldap
    app.kubernetes.io/name: openldap-ha
  name: openldap
  namespace: kubesphere-system
spec:
  clusterIP: None
  ports:
  - name: ldap
    port: 389
    protocol: TCP
    targetPort: 389
  selector:
    app.kubernetes.io/instance: ks-openldap
    app.kubernetes.io/name: openldap-ha
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
    tier: database
  name: redis
  namespace: kubesphere-system
spec:
  ports:
  - name: redis
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis
    tier: database
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: kube-state-metrics
  name: kube-state-metrics
  namespace: kubesphere-monitoring-system
spec:
  clusterIP: None
  ports:
  - name: https-main
    port: 8443
    protocol: TCP
    targetPort: https-main
  - name: https-self
    port: 9443
    protocol: TCP
    targetPort: https-self
  selector:
    app: kube-state-metrics
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: node-exporter
  name: node-exporter
  namespace: kubesphere-monitoring-system
spec:
  clusterIP: None
  ports:
  - name: https
    port: 9100
    protocol: TCP
    targetPort: https
  selector:
    app: node-exporter
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: prometheus-operator
  name: prometheus-operator
  namespace: kubesphere-monitoring-system
spec:
  clusterIP: None
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  selector:
    k8s-app: prometheus-operator
  sessionAffinity: None
  type: ClusterIP